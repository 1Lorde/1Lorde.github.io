{"version":3,"sources":["views/user/user_list/UserList.js","helpers/api_requests.js","components/Table.js"],"names":["UserList","history","useHistory","hasLoaded","setHasLoaded","useState","users","setUsers","searchQuery","setSearchQuery","status","setStatus","role","setRole","sort","setSort","useEffect","getUsers","then","data","map","item","name","number","wa_number","Roles","action","color","size","onClick","push","id","columns","React","useMemo","Header","accessor","className","htmlFor","type","placeholder","onChange","e","target","value","length","Loader","API_URL","axios","get","headers","authHeader","response","catch","reason","console","log","message","getUser","updateUser","user","put","address","createUser","post","getClient","updateClient","clientId","client","getClients","getProducts","createProduct","product","updateProduct","changes","description","balance_start","percent_rate","limit_min","limit_max","active","rate_type","credit_simulation_id","getServices","getNasabah","nasabah_list","getNasabahCount","getAccountOfficerCount","Table","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","state","pageIndex","useTable","autoResetPageIndex","usePagination","hover","responsive","style","minWidth","headerGroup","index","getHeaderGroupProps","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","min","max","defaultValue","Number","width","align","disabled","pointerEvents"],"mappings":"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","file":"static/js/5.0ee39bc9.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CHeaderText,\n  CRow,\n} from '@coreui/react'\nimport { useHistory } from 'react-router-dom'\nimport { getUsers } from '../../../helpers/api_requests'\nimport Loader from '../../../components/Loader'\nimport { Roles } from '../../../helpers/role'\nimport { Table } from '../../../components/Table'\n\nconst UserList = () => {\n  const history = useHistory()\n  const [hasLoaded, setHasLoaded] = useState()\n  const [users, setUsers] = useState([])\n  const [searchQuery, setSearchQuery] = useState('')\n  const [status, setStatus] = useState('')\n  const [role, setRole] = useState('')\n  const [sort, setSort] = useState('')\n\n  useEffect(() => {\n    getUsers(searchQuery, status, role, sort).then((data) => {\n      setUsers(\n        data?.map((item) => {\n          return {\n            name: item.name,\n            number: item.wa_number,\n            role: Roles[item.role],\n            status: item.status,\n            action: (\n              <CButton color=\"dark\" size={'sm'} onClick={() => history.push('/users/' + item.id)}>\n                Edit\n              </CButton>\n            ),\n          }\n        }),\n      )\n      setHasLoaded(true)\n    })\n  }, [history, searchQuery, status, role, sort])\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Name',\n        accessor: 'name',\n      },\n      {\n        Header: 'WhatsApp Number',\n        accessor: 'number',\n      },\n      {\n        Header: 'Role',\n        accessor: 'role',\n      },\n      {\n        Header: 'Status',\n        accessor: 'status',\n      },\n      {\n        Header: 'Action',\n        accessor: 'action',\n      },\n    ],\n    [],\n  )\n\n  return hasLoaded ? (\n    <CContainer>\n      <CRow className=\"align-items-center\">\n        <CCol>\n          <CFormLabel htmlFor=\"searchInput\">Search</CFormLabel>\n          <CFormInput\n            type=\"text\"\n            id=\"searchInput\"\n            placeholder=\"Enter search query..\"\n            onChange={(e) => {\n              setSearchQuery(e.target.value)\n            }}\n          />\n        </CCol>\n        <CCol>\n          <CFormLabel htmlFor=\"statusInput\">Status</CFormLabel>\n          <CFormSelect\n            id=\"statusInput\"\n            onChange={(e) => {\n              setStatus(e.target.value)\n            }}\n          >\n            <option value=\"\">All</option>\n            <option value=\"inactive\">Inactive</option>\n            <option value=\"active\">Active</option>\n          </CFormSelect>\n        </CCol>\n        <CCol>\n          <CFormLabel htmlFor=\"roleInput\">Role</CFormLabel>\n          <CFormSelect\n            id=\"roleInput\"\n            onChange={(e) => {\n              setRole(e.target.value)\n            }}\n          >\n            <option value=\"\">All</option>\n            <option value=\"app-owner\">App Owner</option>\n            <option value=\"product-technical\">Product & Technical</option>\n            <option value=\"marketing-finance\">Marketing & Finance</option>\n            <option value=\"koperasi-owner\">Koperasi Owner</option>\n            <option value=\"credit-analyst\">Credit Analyst</option>\n            <option value=\"account-officer\">Account Officer</option>\n          </CFormSelect>\n        </CCol>\n        <CCol>\n          <CFormLabel htmlFor=\"sortInput\">Sort By</CFormLabel>\n          <CFormSelect\n            id=\"sortInput\"\n            onChange={(e) => {\n              setSort(e.target.value)\n            }}\n          >\n            <option value=\"name:asc\">Name (ascending)</option>\n            <option value=\"name:desc\">Name (descending)</option>\n            <option value=\"created_at:desc\">Creation date (new first)</option>\n            <option value=\"created_at:asc\">Creation date (old first)</option>\n          </CFormSelect>\n        </CCol>\n        <CCol className={'d-flex justify-content-end'}>\n          <CButton color=\"primary\" onClick={() => history.push('/users/create')}>\n            Add New\n          </CButton>\n        </CCol>\n      </CRow>\n      <br />\n      <CRow>\n        <CCard>\n          <CCardBody>\n            {users.length > 0 ? (\n              <Table columns={columns} data={users} />\n            ) : (\n              <>\n                <div className=\"d-flex justify-content-center\">\n                  <CHeaderText>No users found</CHeaderText>\n                </div>\n              </>\n            )}\n          </CCardBody>\n        </CCard>\n      </CRow>\n    </CContainer>\n  ) : (\n    Loader()\n  )\n}\n\nexport default UserList\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getUsers(searchQuery, status, role, sort) {\n  return axios\n    .get(\n      API_URL +\n        '/auth/user?search=' +\n        searchQuery +\n        '&status=' +\n        status +\n        '&role=' +\n        role +\n        '&sort=' +\n        sort,\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getUser(id) {\n  return axios\n    .get(API_URL + '/auth/user/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function updateUser(user) {\n  return axios\n    .put(\n      API_URL + '/auth/user/' + user.id,\n      {\n        wa_number: user.wa_number,\n        name: user.name,\n        address: user.address,\n        role: user.role,\n        status: user.status,\n        // avatar: user.avatar,\n        // ktp_image: user.ktp_image,\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function createUser(user) {\n  return axios\n    .post(API_URL + '/auth/user', user, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function getClient(id) {\n  return axios\n    .get(API_URL + '/users/admin/client/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function updateClient(clientId, client) {\n  return axios\n    .put(API_URL + '/users/admin/client/' + clientId, client, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function getClients(searchQuery, status, sort) {\n  return axios\n    .get(\n      API_URL + '/users/admin/client?search=' + searchQuery + '&status=' + status + '&sort=' + sort,\n      { headers: authHeader() },\n    )\n    .then((response) => {\n      return response.data.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getProducts(searchQuery, type) {\n  return axios\n    .get(API_URL + '/transaction/products?search=' + searchQuery + '&tipe=' + type, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function createProduct(product) {\n  return axios\n    .post(API_URL + '/transaction/products', product, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n\nexport function updateProduct(product) {\n  const changes = {\n    name: product.name,\n    description: product.description,\n    balance_start: product.balance_start,\n    percent_rate: product.percent_rate,\n    limit_min: product.limit_min,\n    limit_max: product.limit_max,\n    active: product.active,\n    rate_type: product.rate_type,\n  }\n\n  return axios\n    .put(API_URL + '/transaction/products/' + product.credit_simulation_id, changes, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function getServices() {\n  return axios\n    .get(API_URL + '/transaction/services', { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function getNasabah(searchQuery, status, sort) {\n  return axios\n    .get(\n      API_URL + '/nasabah/nasabah?search=' + searchQuery + '&status=' + status + '&sort=' + sort,\n      { headers: authHeader() },\n    )\n    .then((response) => {\n      return response.data.nasabah_list\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getNasabahCount() {\n  return axios\n    .get(API_URL + '/auth/stat/nasabah/all', { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getAccountOfficerCount() {\n  return axios\n    .get(API_URL + '/auth/stat/account_officer/all', { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getClientCount() {\n  return axios\n    .get(API_URL + '/auth/stat/clients/all', { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n","import { usePagination, useTable } from 'react-table'\nimport {\n  CContainer,\n  CFormInput,\n  CHeaderText,\n  CPagination,\n  CPaginationItem,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport React from 'react'\n\n// eslint-disable-next-line react/prop-types\nexport function Table({ columns, data }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    state: { pageIndex },\n  } = useTable({ columns, data, autoResetPageIndex: true }, usePagination)\n\n  return (\n    <>\n      <CTable hover responsive style={{ minWidth: '45rem' }} {...getTableProps()}>\n        <CTableHead>\n          {headerGroups.map((headerGroup, index) => (\n            <CTableRow key={index} {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column, index) => (\n                <CTableHeaderCell key={index} {...column.getHeaderProps()}>\n                  {column.render('Header')}\n                </CTableHeaderCell>\n              ))}\n            </CTableRow>\n          ))}\n        </CTableHead>\n        <CTableBody {...getTableBodyProps()}>\n          {page.map((row, index) => {\n            prepareRow(row)\n            return (\n              <CTableRow key={index} {...row.getRowProps()}>\n                {row.cells.map((cell, index) => {\n                  return (\n                    <CTableDataCell key={index} {...cell.getCellProps()}>\n                      {cell.render('Cell')}\n                    </CTableDataCell>\n                  )\n                })}\n              </CTableRow>\n            )\n          })}\n        </CTableBody>\n      </CTable>\n\n      <CContainer className={'d-flex justify-content-end align-items-center'}>\n        <CHeaderText className={'pe-2'}>Go to page:</CHeaderText>\n        <CFormInput\n          min={1}\n          max={pageCount}\n          type=\"number\"\n          defaultValue={pageIndex + 1}\n          onChange={(e) => {\n            const page = e.target.value ? Number(e.target.value) - 1 : 0\n            gotoPage(page)\n          }}\n          style={{ width: '100px' }}\n        />\n      </CContainer>\n\n      <CPagination align=\"center\" aria-label=\"Page navigation\">\n        <CPaginationItem aria-label=\"First\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {'<<'}\n        </CPaginationItem>\n        <CPaginationItem\n          aria-label=\"Previous\"\n          onClick={() => previousPage()}\n          disabled={!canNextPage}\n        >\n          {'<'}\n        </CPaginationItem>\n        <CPaginationItem aria-label=\"Current\" style={{ pointerEvents: 'none' }}>\n          Page <strong>{pageIndex + 1}</strong> of <strong>{pageOptions.length}</strong>\n        </CPaginationItem>\n        <CPaginationItem aria-label=\"Next\" onClick={() => nextPage()} disabled={!canPreviousPage}>\n          {'>'}\n        </CPaginationItem>\n        <CPaginationItem\n          aria-label=\"Last\"\n          onClick={() => gotoPage(pageCount - 1)}\n          disabled={!canNextPage}\n        >\n          {'>>'}\n        </CPaginationItem>\n      </CPagination>\n    </>\n  )\n}\n"],"sourceRoot":""}