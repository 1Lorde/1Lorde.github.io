{"version":3,"sources":["views/notifications/notification_detail/NotificationDetail.js","api/api_notification.js"],"names":["NotificationDetail","history","useHistory","id","useParams","notification","setNotification","useState","hasLoaded","setHasLoaded","useEffect","getNotification","then","data","className","style","width","htmlFor","type","readOnly","defaultValue","created","sender","title","content","onClick","push","Loader","API_URL","getNotifications","axios","get","headers","authHeader","response","catch","reason","status","console","log","message"],"mappings":"kGAAA,2DA6EeA,UA7DY,KACzB,MAAMC,EAAUC,cAChB,IAAI,GAAEC,GAAOC,cACb,MAAOC,EAAcC,GAAmBC,sBACjCC,EAAWC,GAAgBF,qBAalC,OAXAG,qBACE,KACEC,YAAgBR,GAAIS,MAAMC,IACxBP,EAAgBO,EAAKA,MACrBJ,GAAa,QAIjB,IAGKD,EACL,cAAC,IAAD,CAAYM,UAAU,gCAAtB,SACE,cAAC,IAAD,CAAOC,MAAO,CAAEC,MAAO,SAAvB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,sBAAKF,UAAU,OAAf,UACE,cAAC,IAAD,CAAYG,QAAQ,OAApB,kBACA,cAAC,IAAD,CAAYC,KAAK,OAAOf,GAAG,OAAOgB,UAAQ,EAACC,aAAcf,EAAagB,aAExE,sBAAKP,UAAU,OAAf,UACE,cAAC,IAAD,CAAYG,QAAQ,SAApB,oBACA,cAAC,IAAD,CAAYC,KAAK,OAAOf,GAAG,SAASgB,UAAQ,EAACC,aAAcf,EAAaiB,YAE1E,sBAAKR,UAAU,OAAf,UACE,cAAC,IAAD,CAAYG,QAAQ,QAApB,mBACA,cAAC,IAAD,CAAYC,KAAK,OAAOf,GAAG,QAAQgB,UAAQ,EAACC,aAAcf,EAAakB,WAEzE,sBAAKT,UAAU,OAAf,UACE,cAAC,IAAD,CAAYG,QAAQ,UAApB,qBACA,cAAC,IAAD,CACEC,KAAK,OACLf,GAAG,UACHgB,UAAQ,EACRC,aAAcf,EAAamB,aAG/B,qBAAKV,UAAU,OAAf,SACE,cAAC,IAAD,CACEW,QAAS,KACPxB,EAAQyB,KAAK,mBAFjB,oCAaVC,gB,iCCzEJ,mGAGA,MAAMC,EAAU,2BAET,SAASC,IACd,OAAOC,IACJC,IAAIH,EAAU,sBAAuB,CAAEI,QAASC,gBAChDrB,MAAMsB,GACEA,EAASrB,OAEjBsB,OAAOC,IACN,GAA+B,MAA3BA,EAAOF,SAASG,OAElB,OADAC,QAAQC,IAAIH,EAAOI,SACZ,QAKR,SAAS7B,EAAgBR,GAC9B,OAAO2B,IACJC,IAAIH,EAAU,uBAAyBzB,EAAI,CAAE6B,QAASC,gBACtDrB,MAAMsB,GACEA,EAASrB,OAEjBsB,OAAOC,IACN,GAA+B,MAA3BA,EAAOF,SAASG,OAElB,OADAC,QAAQC,IAAIH,EAAOI,SACZ","file":"static/js/42.59d6ca56.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CContainer,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CFormTextarea,\n} from '@coreui/react'\n\nimport { useHistory, useParams } from 'react-router-dom'\nimport Loader from '../../../components/Loader'\nimport { getNotification } from '../../../api/api_notification'\n\nconst NotificationDetail = () => {\n  const history = useHistory()\n  let { id } = useParams()\n  const [notification, setNotification] = useState()\n  const [hasLoaded, setHasLoaded] = useState()\n\n  useEffect(\n    () => {\n      getNotification(id).then((data) => {\n        setNotification(data.data)\n        setHasLoaded(true)\n      })\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  )\n\n  return hasLoaded ? (\n    <CContainer className=\"d-flex justify-content-center\">\n      <CCard style={{ width: '35rem' }}>\n        <CCardBody>\n          <CForm>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"date\">Date</CFormLabel>\n              <CFormInput type=\"text\" id=\"date\" readOnly defaultValue={notification.created} />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"sender\">Sender</CFormLabel>\n              <CFormInput type=\"text\" id=\"sender\" readOnly defaultValue={notification.sender} />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"title\">Title</CFormLabel>\n              <CFormInput type=\"text\" id=\"title\" readOnly defaultValue={notification.title} />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"content\">Content</CFormLabel>\n              <CFormTextarea\n                type=\"text\"\n                id=\"content\"\n                readOnly\n                defaultValue={notification.content}\n              />\n            </div>\n            <div className=\"mb-3\">\n              <CButton\n                onClick={() => {\n                  history.push('/notifications')\n                }}\n              >\n                Return back\n              </CButton>\n            </div>\n          </CForm>\n        </CCardBody>\n      </CCard>\n    </CContainer>\n  ) : (\n    Loader()\n  )\n}\n\nexport default NotificationDetail\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getNotifications() {\n  return axios\n    .get(API_URL + '/users/notification', { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getNotification(id) {\n  return axios\n    .get(API_URL + '/users/notification/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n"],"sourceRoot":""}