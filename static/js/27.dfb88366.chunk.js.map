{"version":3,"sources":["views/vendor/vendor_create/VendorCreate.js","api/api_vendors.js"],"names":["VendorCreate","history","useHistory","t","useTranslation","vendor","setVendor","useState","type","validated","setValidated","className","style","width","noValidate","onSubmit","event","preventDefault","form","currentTarget","checkValidity","stopPropagation","console","log","createVendor","then","data","ok","store","addNotification","success","push","danger","message","htmlFor","id","onChange","e","target","value","required","name","desc","api_base_url","api_username","api_key","color","variant","API_URL","process","getVendors","searchQuery","status","axios","get","headers","authHeader","response","catch","reason","getVendor","updateVendor","put","post","slug","api_credential_params","username","uid","pin"],"mappings":"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","file":"static/js/27.dfb88366.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CContainer,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CFormTextarea,\n} from '@coreui/react'\nimport { store } from 'react-notifications-component'\nimport { danger, success } from '../../../helpers/notifications'\nimport { useHistory } from 'react-router-dom'\nimport { createVendor } from '../../../api/api_vendors'\nimport { useTranslation } from 'react-i18next'\n\nconst VendorCreate = () => {\n  const history = useHistory()\n  const { t } = useTranslation()\n  const [vendor, setVendor] = useState({ type: 'rajabiller' })\n  const [validated, setValidated] = useState(false)\n\n  const handleCreate = (event) => {\n    event.preventDefault()\n\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    setValidated(true)\n\n    if (form.checkValidity()) {\n      console.log(vendor)\n      createVendor(vendor).then((data) => {\n        if (data.ok) {\n          store.addNotification(success(t('success')))\n          history.push('/ppob/vendors')\n        } else {\n          store.addNotification(danger(data.message))\n        }\n      })\n    }\n  }\n\n  return (\n    <CContainer className=\"d-flex justify-content-center\">\n      <CCard style={{ width: '35rem' }}>\n        <CCardBody>\n          <CForm noValidate validated={validated} onSubmit={handleCreate}>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"typeInput\">{t('type')}</CFormLabel>\n              <CFormSelect\n                type=\"text\"\n                id=\"typeInput\"\n                onChange={(e) => {\n                  setVendor((vendor) => ({ ...vendor, type: e.target.value }))\n                }}\n              >\n                <option value=\"rajabiller\">Raja Biller</option>\n                <option value=\"mobilepulsa\">Mobile Pulsa</option>\n              </CFormSelect>\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"fullnameInput\">{t('company_name')}</CFormLabel>\n              <CFormInput\n                required\n                type=\"text\"\n                id=\"nameInput\"\n                onChange={(e) => {\n                  setVendor((vendor) => ({ ...vendor, name: e.target.value }))\n                }}\n              />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"descInput\">{t('description')}</CFormLabel>\n              <CFormTextarea\n                required\n                type=\"text\"\n                id=\"descInput\"\n                onChange={(e) => {\n                  setVendor((vendor) => ({ ...vendor, desc: e.target.value }))\n                }}\n              />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"apiInput\">API URL</CFormLabel>\n              <CFormInput\n                required\n                type=\"text\"\n                id=\"apiInput\"\n                onChange={(e) => {\n                  setVendor((vendor) => ({ ...vendor, api_base_url: e.target.value }))\n                }}\n              />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"apiUsernameInput\">Username</CFormLabel>\n              <CFormInput\n                required\n                type=\"text\"\n                id=\"apiUsernameInput\"\n                onChange={(e) => {\n                  setVendor((vendor) => ({ ...vendor, api_username: e.target.value }))\n                }}\n              />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"apiKeyInput\">API Key</CFormLabel>\n              <CFormInput\n                required\n                type=\"text\"\n                id=\"apiKeyInput\"\n                onChange={(e) => {\n                  setVendor((vendor) => ({ ...vendor, api_key: e.target.value }))\n                }}\n              />\n            </div>\n            <div className=\"d-flex justify-content-between\">\n              <CButton color=\"primary\" variant=\"outline\" type=\"submit\">\n                {t('add_new')}\n              </CButton>\n            </div>\n          </CForm>\n        </CCardBody>\n      </CCard>\n    </CContainer>\n  )\n}\n\nexport default VendorCreate\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\n\nconst API_URL = process.env.REACT_APP_API_URL\n\nexport function getVendors(searchQuery, status) {\n  return axios\n    .get(API_URL + '/transaction/vendors?search=' + searchQuery + '&status=' + status, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function getVendor(id) {\n  return axios\n    .get(API_URL + '/transaction/vendors/' + id, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function updateVendor(vendor) {\n  return axios\n    .put(\n      API_URL + '/transaction/vendors/' + vendor.id,\n      {\n        name: vendor.name,\n        desc: vendor.desc,\n        api_base_url: vendor.api_base_url,\n        status: vendor.status,\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function createVendor(vendor) {\n  return axios\n    .post(\n      API_URL + '/transaction/vendors',\n      {\n        name: vendor.name,\n        slug: vendor.type,\n        desc: vendor.desc,\n        api_base_url: vendor.api_base_url,\n        api_credential_params:\n          vendor.type === 'mobilepulsa'\n            ? {\n                username: vendor.api_username,\n                api_key: vendor.api_key,\n              }\n            : { uid: vendor.api_username, pin: vendor.api_key },\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n"],"sourceRoot":""}