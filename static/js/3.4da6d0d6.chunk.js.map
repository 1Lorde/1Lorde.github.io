{"version":3,"sources":["views/client/client_list/ClientList.js","helpers/api_requests.js","components/Table.js"],"names":["ClientList","history","useHistory","hasLoaded","setHasLoaded","useState","clients","setClients","searchQuery","setSearchQuery","status","setStatus","sort","setSort","useEffect","getClients","then","data","map","item","name","company","contact_ktp_id","contact","ktp_id","contact_name","dir_name","toLowerCase","action","color","size","onClick","push","id","columns","React","useMemo","Header","accessor","className","htmlFor","type","placeholder","onChange","e","target","value","length","Loader","API_URL","getUsers","role","axios","get","headers","authHeader","response","catch","reason","console","log","message","getUser","updateUser","user","put","wa_number","address","createUser","post","getClient","updateClient","clientId","client","getProducts","createProduct","product","updateProduct","changes","description","balance_start","percent_rate","limit_min","limit_max","active","rate_type","credit_simulation_id","getServices","getNasabah","nasabah_list","getNasabahCount","getAccountOfficerCount","Table","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","state","pageIndex","useTable","autoResetPageIndex","usePagination","hover","responsive","style","minWidth","headerGroup","index","getHeaderGroupProps","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","min","max","defaultValue","Number","width","align","disabled","pointerEvents"],"mappings":"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","file":"static/js/3.4da6d0d6.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CHeaderText,\n  CRow,\n} from '@coreui/react'\nimport { useHistory } from 'react-router-dom'\nimport { getClients } from '../../../helpers/api_requests'\nimport Loader from '../../../components/Loader'\nimport { Table } from '../../../components/Table'\n\nconst ClientList = () => {\n  const history = useHistory()\n  const [hasLoaded, setHasLoaded] = useState()\n  const [clients, setClients] = useState([])\n  const [searchQuery, setSearchQuery] = useState('')\n  const [status, setStatus] = useState('')\n  const [sort, setSort] = useState('')\n\n  useEffect(() => {\n    getClients(searchQuery, status, sort).then((data) => {\n      setClients(\n        data?.map((item) => {\n          return {\n            name: item.company,\n            contact_ktp_id: item.contact.ktp_id,\n            contact_name: item.contact.dir_name,\n            status: item.status.toLowerCase(),\n            action: (\n              <CButton color=\"dark\" size={'sm'} onClick={() => history.push('/clients/' + item.id)}>\n                Edit\n              </CButton>\n            ),\n          }\n        }),\n      )\n      setHasLoaded(true)\n    })\n  }, [history, searchQuery, status, sort])\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Company Name',\n        accessor: 'name',\n      },\n      {\n        Header: 'KTP ID',\n        accessor: 'contact_ktp_id',\n      },\n      {\n        Header: 'Director Name',\n        accessor: 'contact_name',\n      },\n      {\n        Header: 'Status',\n        accessor: 'status',\n      },\n      {\n        Header: 'Action',\n        accessor: 'action',\n      },\n    ],\n    [],\n  )\n\n  return hasLoaded ? (\n    <CContainer>\n      <CRow className=\"align-items-center\">\n        <CCol>\n          <CFormLabel htmlFor=\"searchInput\">Search</CFormLabel>\n          <CFormInput\n            type=\"text\"\n            id=\"searchInput\"\n            placeholder=\"Enter search query..\"\n            onChange={(e) => {\n              setSearchQuery(e.target.value)\n            }}\n          />\n        </CCol>\n        <CCol>\n          <CFormLabel htmlFor=\"statusInput\">Status</CFormLabel>\n          <CFormSelect\n            id=\"statusInput\"\n            onChange={(e) => {\n              setStatus(e.target.value)\n            }}\n          >\n            <option value=\"\">All</option>\n            <option value=\"REQUEST\">Request</option>\n            <option value=\"VERIFIED\">Verified</option>\n            <option value=\"ACTIVE\">Active</option>\n            <option value=\"REJECT\">Reject</option>\n            <option value=\"NON_ACTIVE\">Non active</option>\n            <option value=\"FAILED\">Failed</option>\n          </CFormSelect>\n        </CCol>\n        <CCol>\n          <CFormLabel htmlFor=\"sortInput\">Sort By</CFormLabel>\n          <CFormSelect\n            id=\"sortInput\"\n            onChange={(e) => {\n              setSort(e.target.value)\n            }}\n          >\n            <option value=\"\">Company Name (ascending)</option>\n            <option value=\"company:desc\">Company Name (descending)</option>\n            <option value=\"created_at:desc\">Creation date (new first)</option>\n            <option value=\"created_at:asc\">Creation date (old first)</option>\n            <option value=\"NPWP:asc\">NPWP (ascending)</option>\n            <option value=\"NPWP:desc\">NPWP (descending)</option>\n            <option value=\"contact_dir_name:asc\">Contact Name (ascending)</option>\n            <option value=\"contact_dir_name:desc\">Contact Name (descending)</option>\n            <option value=\"contact_ktp_id:asc\">Contact KTP ID (ascending)</option>\n            <option value=\"contact_ktp_id:desc\">Contact KTP ID (descending)</option>\n          </CFormSelect>\n        </CCol>\n        <CCol className={'d-flex justify-content-end'}>\n          <CButton color=\"primary\" onClick={() => history.push('/clients/create')}>\n            Add New\n          </CButton>\n        </CCol>\n      </CRow>\n      <br />\n      <CRow>\n        <CCard>\n          <CCardBody>\n            {clients.length > 0 ? (\n              <Table columns={columns} data={clients} />\n            ) : (\n              <>\n                <div className=\"d-flex justify-content-center\">\n                  <CHeaderText>No clients found</CHeaderText>\n                </div>\n              </>\n            )}\n          </CCardBody>\n        </CCard>\n      </CRow>\n    </CContainer>\n  ) : (\n    Loader()\n  )\n}\n\nexport default ClientList\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getUsers(searchQuery, status, role, sort) {\n  return axios\n    .get(\n      API_URL +\n        '/auth/user?search=' +\n        searchQuery +\n        '&status=' +\n        status +\n        '&role=' +\n        role +\n        '&sort=' +\n        sort,\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getUser(id) {\n  return axios\n    .get(API_URL + '/auth/user/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function updateUser(user) {\n  return axios\n    .put(\n      API_URL + '/auth/user/' + user.id,\n      {\n        wa_number: user.wa_number,\n        name: user.name,\n        address: user.address,\n        role: user.role,\n        status: user.status,\n        // avatar: user.avatar,\n        // ktp_image: user.ktp_image,\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function createUser(user) {\n  return axios\n    .post(API_URL + '/auth/user', user, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function getClient(id) {\n  return axios\n    .get(API_URL + '/users/admin/client/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function updateClient(clientId, client) {\n  return axios\n    .put(API_URL + '/users/admin/client/' + clientId, client, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function getClients(searchQuery, status, sort) {\n  return axios\n    .get(\n      API_URL + '/users/admin/client?search=' + searchQuery + '&status=' + status + '&sort=' + sort,\n      { headers: authHeader() },\n    )\n    .then((response) => {\n      return response.data.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getProducts(searchQuery, type) {\n  return axios\n    .get(API_URL + '/transaction/products?search=' + searchQuery + '&tipe=' + type, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function createProduct(product) {\n  return axios\n    .post(API_URL + '/transaction/products', product, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n\nexport function updateProduct(product) {\n  const changes = {\n    name: product.name,\n    description: product.description,\n    balance_start: product.balance_start,\n    percent_rate: product.percent_rate,\n    limit_min: product.limit_min,\n    limit_max: product.limit_max,\n    active: product.active,\n    rate_type: product.rate_type,\n  }\n\n  return axios\n    .put(API_URL + '/transaction/products/' + product.credit_simulation_id, changes, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function getServices() {\n  return axios\n    .get(API_URL + '/transaction/services', { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function getNasabah(searchQuery, status, sort) {\n  return axios\n    .get(\n      API_URL + '/nasabah/nasabah?search=' + searchQuery + '&status=' + status + '&sort=' + sort,\n      { headers: authHeader() },\n    )\n    .then((response) => {\n      return response.data.nasabah_list\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getNasabahCount() {\n  return axios\n    .get(API_URL + '/auth/stat/nasabah/all', { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getAccountOfficerCount() {\n  return axios\n    .get(API_URL + '/auth/stat/account_officer/all', { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getClientCount() {\n  return axios\n    .get(API_URL + '/auth/stat/clients/all', { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n","import { usePagination, useTable } from 'react-table'\nimport {\n  CContainer,\n  CFormInput,\n  CHeaderText,\n  CPagination,\n  CPaginationItem,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport React from 'react'\n\n// eslint-disable-next-line react/prop-types\nexport function Table({ columns, data }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    state: { pageIndex },\n  } = useTable({ columns, data, autoResetPageIndex: true }, usePagination)\n\n  return (\n    <>\n      <CTable hover responsive style={{ minWidth: '45rem' }} {...getTableProps()}>\n        <CTableHead>\n          {headerGroups.map((headerGroup, index) => (\n            <CTableRow key={index} {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column, index) => (\n                <CTableHeaderCell key={index} {...column.getHeaderProps()}>\n                  {column.render('Header')}\n                </CTableHeaderCell>\n              ))}\n            </CTableRow>\n          ))}\n        </CTableHead>\n        <CTableBody {...getTableBodyProps()}>\n          {page.map((row, index) => {\n            prepareRow(row)\n            return (\n              <CTableRow key={index} {...row.getRowProps()}>\n                {row.cells.map((cell, index) => {\n                  return (\n                    <CTableDataCell key={index} {...cell.getCellProps()}>\n                      {cell.render('Cell')}\n                    </CTableDataCell>\n                  )\n                })}\n              </CTableRow>\n            )\n          })}\n        </CTableBody>\n      </CTable>\n\n      <CContainer className={'d-flex justify-content-end align-items-center'}>\n        <CHeaderText className={'pe-2'}>Go to page:</CHeaderText>\n        <CFormInput\n          min={1}\n          max={pageCount}\n          type=\"number\"\n          defaultValue={pageIndex + 1}\n          onChange={(e) => {\n            const page = e.target.value ? Number(e.target.value) - 1 : 0\n            gotoPage(page)\n          }}\n          style={{ width: '100px' }}\n        />\n      </CContainer>\n\n      <CPagination align=\"center\" aria-label=\"Page navigation\">\n        <CPaginationItem aria-label=\"First\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {'<<'}\n        </CPaginationItem>\n        <CPaginationItem\n          aria-label=\"Previous\"\n          onClick={() => previousPage()}\n          disabled={!canNextPage}\n        >\n          {'<'}\n        </CPaginationItem>\n        <CPaginationItem aria-label=\"Current\" style={{ pointerEvents: 'none' }}>\n          Page <strong>{pageIndex + 1}</strong> of <strong>{pageOptions.length}</strong>\n        </CPaginationItem>\n        <CPaginationItem aria-label=\"Next\" onClick={() => nextPage()} disabled={!canPreviousPage}>\n          {'>'}\n        </CPaginationItem>\n        <CPaginationItem\n          aria-label=\"Last\"\n          onClick={() => gotoPage(pageCount - 1)}\n          disabled={!canNextPage}\n        >\n          {'>>'}\n        </CPaginationItem>\n      </CPagination>\n    </>\n  )\n}\n"],"sourceRoot":""}