{"version":3,"sources":["views/support/ticket_details/TicketDetails.js","api/api_ticket.js"],"names":["TicketDetails","t","useTranslation","userState","useContext","UserContext","history","useHistory","uid","useParams","ticket","setTicket","useState","hasLoaded","setHasLoaded","hasNewComment","setHasNewComment","comment","setComment","validated","setValidated","useEffect","getTicket","then","data","className","color","style","backgroundColor","Date","date","toLocaleString","weekday","day","year","month","hour","minute","second","status","shape","getStatusBadge","subject","overflowY","maxHeight","map","action","index","text","description","owner","fullname","lockable","toBottomHeight","dataSource","comments","position","company","contact","dir_name","type","dangerouslySetInnerHTML","__html","noValidate","onSubmit","event","preventDefault","form","currentTarget","checkValidity","stopPropagation","createComment","_id","ok","store","addNotification","success","message","console","log","danger","error","htmlFor","id","disabled","required","onChange","e","target","value","invalid","variant","onClick","closeTicket","push","Loader","API_URL","getTickets","skip","searchQuery","axios","get","headers","authHeader","response","catch","reason","put","createTicket","post","title","priority","ticketId","ticket_id","createUser","userId","wa_number","ekoop_user_id","username","replace","password","email"],"mappings":"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","file":"static/js/26.c4a85215.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport 'react-chat-elements/dist/main.css'\n\nimport { MessageList } from 'react-chat-elements'\nimport { SystemMessage } from 'react-chat-elements'\nimport {\n  CBadge,\n  CButton,\n  CCallout,\n  CContainer,\n  CForm,\n  CFormFeedback,\n  CFormInput,\n  CFormLabel,\n} from '@coreui/react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { closeTicket, createComment, getTicket } from '../../../api/api_ticket'\nimport Loader from '../../../components/Loader'\nimport { store } from 'react-notifications-component'\nimport { danger, success } from '../../../helpers/notifications'\nimport { UserContext } from '../../../helpers/user'\nimport { useTranslation } from 'react-i18next'\n\nconst TicketDetails = () => {\n  const { t } = useTranslation()\n  const { userState } = useContext(UserContext)\n  const history = useHistory()\n  let { uid } = useParams()\n  const [ticket, setTicket] = useState()\n  const [hasLoaded, setHasLoaded] = useState()\n  const [hasNewComment, setHasNewComment] = useState(false)\n  const [comment, setComment] = useState('')\n  const [validated, setValidated] = useState(false)\n\n  useEffect(\n    () => {\n      setHasLoaded(false)\n      setValidated(false)\n      getTicket(uid).then((data) => {\n        setTicket(data.data)\n        setHasLoaded(true)\n        setHasNewComment(false)\n      })\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [hasNewComment],\n  )\n\n  function getStatusBadge(status) {\n    switch (status) {\n      case 0:\n        return (\n          <CBadge className=\"mt-1\" color=\"success\" shape=\"rounded-pill\">\n            {t('new')}\n          </CBadge>\n        )\n      case 1:\n        return (\n          <CBadge className=\"mt-1\" color=\"danger\" shape=\"rounded-pill\">\n            {t('open')}\n          </CBadge>\n        )\n      case 2:\n        return (\n          <CBadge className=\"mt-1\" color=\"info\" shape=\"rounded-pill\">\n            {t('pending')}\n          </CBadge>\n        )\n      case 3:\n        return (\n          <CBadge className=\"mt-1\" color=\"secondary\" shape=\"rounded-pill\">\n            {t('closed')}\n          </CBadge>\n        )\n      default:\n        return (\n          <CBadge className=\"mt-1\" color=\"dark\" shape=\"rounded-pill\">\n            {t('unknown')}\n          </CBadge>\n        )\n    }\n  }\n\n  function handleCreateComment(event) {\n    event.preventDefault()\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.stopPropagation()\n    }\n    setValidated(true)\n\n    if (form.checkValidity()) {\n      createComment(ticket._id, comment).then((data) => {\n        if (data.ok) {\n          setHasNewComment(true)\n          store.addNotification(success(t('notifications.comment_create')))\n        } else {\n          if (data.message) {\n            console.log(data)\n            store.addNotification(danger(data.message))\n          } else {\n            console.log(data)\n            store.addNotification(danger(data.error))\n          }\n        }\n      })\n    }\n  }\n\n  function handleClose() {\n    closeTicket(ticket._id).then((data) => {\n      if (data.ok) {\n        store.addNotification(success(t('notifications.ticket_close')))\n        history.push('/support/tickets')\n      } else {\n        store.addNotification(danger('notifications.error'))\n      }\n    })\n  }\n\n  return hasLoaded ? (\n    <CContainer>\n      <CCallout className=\"mb-5\" color=\"info\" style={{ backgroundColor: 'white' }}>\n        <div className=\"d-flex justify-content-between\">\n          <span>\n            {t('created') + ': '}\n            {new Date(ticket.history[0].date).toLocaleString('en-US', {\n              weekday: 'short', // long, short, narrow\n              day: 'numeric', // numeric, 2-digit\n              year: 'numeric', // numeric, 2-digit\n              month: 'long', // numeric, 2-digit, long, short, narrow\n              hour: 'numeric', // numeric, 2-digit\n              minute: 'numeric', // numeric, 2-digit\n              second: 'numeric', // numeric, 2-digit)\n            })}\n          </span>\n          <span>\n            {t('ticket_id') + ' #' + ticket.uid} {getStatusBadge(ticket.status)}\n          </span>\n        </div>\n        <hr />\n        <div className=\"d-flex justify-content-start\">\n          <h5>{t('ticket_id') + ':'}</h5>\n          <span className=\"ms-3\">{ticket.subject}</span>\n        </div>\n      </CCallout>\n      <div style={{ overflowY: 'scroll', maxHeight: '40vh' }}>\n        {ticket.history.map((action, index) => {\n          return (\n            <SystemMessage key={index} text={action.description + ' by ' + action.owner.fullname} />\n          )\n        })}\n        <MessageList\n          className=\"message-list\"\n          lockable={true}\n          toBottomHeight={'100%'}\n          dataSource={ticket.comments.map((comment, index) => {\n            return {\n              position:\n                comment.owner.fullname === userState.company.contact.dir_name ? 'right' : 'left',\n              type: 'text',\n              text: <div className=\"mb-1\" dangerouslySetInnerHTML={{ __html: comment.text }} />,\n              date: new Date(),\n            }\n          })}\n        />\n      </div>\n      <CForm noValidate validated={validated} onSubmit={handleCreateComment}>\n        <div className=\"m-4\">\n          <CFormLabel htmlFor=\"comment\">{t('comment')}</CFormLabel>\n          <CFormInput\n            type=\"text\"\n            id=\"comment\"\n            disabled={ticket.status === 3}\n            required\n            onChange={(e) => {\n              setComment(e.target.value)\n            }}\n          />\n          <CFormFeedback invalid>{t('invalid_comment')}</CFormFeedback>\n        </div>\n        <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n          <CButton\n            color=\"primary\"\n            className=\"me-md-2\"\n            variant=\"outline\"\n            onClick={handleClose}\n            disabled={ticket.status === 3}\n          >\n            {t('close_ticket')}\n          </CButton>\n          <CButton\n            type={'submit'}\n            color=\"dark\"\n            className=\"me-md-2\"\n            variant=\"outline\"\n            disabled={ticket.status === 3}\n          >\n            {t('new_comment')}\n          </CButton>\n        </div>\n      </CForm>\n    </CContainer>\n  ) : (\n    Loader()\n  )\n}\n\nexport default TicketDetails\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getTickets(skip, searchQuery) {\n  return axios\n    .get(API_URL + '/tiket/tickets?skip=' + skip + '&search=' + searchQuery, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function getTicket(uid) {\n  return axios\n    .get(API_URL + '/tiket/tickets/' + uid, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function closeTicket(id) {\n  return axios\n    .put(\n      API_URL + '/tiket/tickets/' + id,\n      { status: 3 },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function createTicket(ticket) {\n  return axios\n    .post(\n      API_URL + '/tiket/tickets',\n      {\n        subject: ticket.title,\n        description: ticket.description,\n        type: 'Issue',\n        priority: 'Normal',\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n\nexport function createComment(ticketId, comment) {\n  return axios\n    .post(\n      API_URL + '/tiket/tickets/comment',\n      {\n        ticket_id: ticketId,\n        text: comment,\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n\nexport function createUser(userId, wa_number, fullname) {\n  return axios\n    .post(\n      API_URL + '/tiket/users',\n      {\n        ekoop_user_id: userId,\n        username: wa_number.replace('+', ''),\n        password: wa_number.replace('+', '') + '123!',\n        email: wa_number.replace('+', '') + '@example.com',\n        fullname: fullname,\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n"],"sourceRoot":""}