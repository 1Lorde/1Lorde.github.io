{"version":3,"sources":["views/user/user_create/UserCreate.js","helpers/notification_types.js","api/api_notification.js","api/api_user.js"],"names":["UserCreate","t","useTranslation","history","useHistory","userState","useContext","UserContext","user","setUser","useState","role","validated","setValidated","className","style","width","noValidate","onSubmit","event","preventDefault","form","currentTarget","checkValidity","stopPropagation","console","log","createUser","then","data","ok","createNotification","wa_number","Services","userCreate","name","resp","id","store","addNotification","success","push","danger","message","htmlFor","type","required","defaultValue","onChange","e","target","value","minLength","maxLength","ktp_id","invalid","pattern","address","disabled","userRole","Roles","color","variant","changePassword","clientRegister","clientApprove","clientReject","userEdit","nasabahCreate","nasabahEdit","profileEdit","packageCreate","packageEdit","productCreate","productEdit","ppobAllMarginEdit","ppobEdit","Titles","Contents","API_URL","process","getNotifications","skip","axios","get","headers","authHeader","response","catch","reason","status","getNotification","sender","service","extra","notification","title","content","reference_id","post","getUsers","searchQuery","sort","getUser","updateUser","put"],"mappings":"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","file":"static/js/12.b3062287.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CContainer,\n  CForm,\n  CFormFeedback,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n} from '@coreui/react'\n\nimport { useHistory } from 'react-router-dom'\nimport { store } from 'react-notifications-component'\nimport { danger, success } from '../../../helpers/notifications'\nimport { Roles } from '../../../helpers/role'\nimport { UserContext } from '../../../helpers/user'\nimport { createUser } from '../../../api/api_user'\nimport { createNotification } from '../../../api/api_notification'\nimport { Services } from '../../../helpers/notification_types'\nimport { useTranslation } from 'react-i18next'\n\nconst UserCreate = () => {\n  const { t } = useTranslation()\n  const history = useHistory()\n  const { userState } = useContext(UserContext)\n  const [user, setUser] = useState({ role: 'koperasi-owner' })\n  const [validated, setValidated] = useState(false)\n\n  function getPositions(userRole) {\n    if (Roles[userRole] === Roles['app-owner']) {\n      return (\n        <>\n          <option value=\"app-owner\">{t('app_owner')}</option>\n          <option value=\"product-technical\">{t('product_technical')}</option>\n          <option value=\"marketing-finance\">{t('marketing_finance')}</option>\n        </>\n      )\n    } else if (Roles[userRole] === Roles['koperasi-owner']) {\n      return (\n        <>\n          <option value=\"koperasi-owner\">{t('koperasi_owner')}</option>\n          <option value=\"credit-analyst\">{t('credit_analyst')}</option>\n          <option value=\"account-officer\">{t('account_officer')}</option>\n        </>\n      )\n    } else {\n      console.log('Not valid role: ' + userRole)\n    }\n  }\n\n  const handleCreate = (event) => {\n    event.preventDefault()\n\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    setValidated(true)\n\n    if (form.checkValidity()) {\n      console.log(user)\n      createUser(user).then((data) => {\n        if (data.ok) {\n          createNotification(userState.user.wa_number, Services.userCreate, user.name).then(\n            (resp) => {\n              console.log('Notification created: ' + resp.id)\n            },\n          )\n          store.addNotification(\n            success(t('notifications.user_create', { wa_number: user.wa_number })),\n          )\n          history.push('/users')\n        } else {\n          store.addNotification(danger(data.message))\n        }\n      })\n    }\n  }\n\n  return (\n    <CContainer className=\"d-flex justify-content-center\">\n      <CCard style={{ width: '35rem' }}>\n        <CCardBody>\n          <CForm noValidate validated={validated} onSubmit={handleCreate}>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"fullnameInput\">{t('fullname')}</CFormLabel>\n              <CFormInput\n                type=\"text\"\n                id=\"fullnameInput\"\n                required\n                defaultValue={user.name}\n                onChange={(e) => {\n                  setUser((user) => ({ ...user, name: e.target.value }))\n                }}\n              />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"ktpnumberInput\">{t('ktp')}</CFormLabel>\n              <CFormInput\n                type=\"text\"\n                id=\"ktpnumberInput\"\n                minLength={16}\n                maxLength={16}\n                required\n                defaultValue={user.ktp_id}\n                onChange={(e) => {\n                  setUser((user) => ({ ...user, ktp_id: e.target.value }))\n                }}\n              />\n              <CFormFeedback invalid>{t('invalid_ktp')}</CFormFeedback>\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"wanumberInput\">{t('whatsapp')}</CFormLabel>\n              <CFormInput\n                id=\"wanumberInput\"\n                type=\"tel\"\n                pattern=\"^\\+62[0-9]{9,15}$\"\n                required\n                defaultValue={user.wa_number}\n                onChange={(e) => {\n                  setUser((user) => ({ ...user, wa_number: e.target.value }))\n                }}\n              />\n              <CFormFeedback invalid>{t('invalid_wa')}</CFormFeedback>\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"addressInput\">{t('address')}</CFormLabel>\n              <CFormInput\n                type=\"text\"\n                id=\"addressInput\"\n                minLength={5}\n                required\n                defaultValue={user.address}\n                onChange={(e) => {\n                  setUser((user) => ({ ...user, address: e.target.value }))\n                }}\n              />\n              <CFormFeedback invalid>{t('invalid_address')}</CFormFeedback>\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"positionInput\">{t('position')}</CFormLabel>\n              <CFormSelect\n                aria-label=\"Position\"\n                defaultValue={user.role}\n                onChange={(e) => {\n                  setUser((user) => ({ ...user, role: e.target.value }))\n                }}\n              >\n                <option disabled>{t('please_select')}</option>\n                {getPositions(userState.user.role)}\n              </CFormSelect>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n              <CButton color=\"primary\" variant=\"outline\" type=\"submit\">\n                {t('create')}\n              </CButton>\n            </div>\n          </CForm>\n        </CCardBody>\n      </CCard>\n    </CContainer>\n  )\n}\n\nexport default UserCreate\n","export const Services = {\n  changePassword: 'change-password',\n  clientRegister: 'client-register',\n  clientApprove: 'client-approve',\n  clientReject: 'client-reject',\n  userCreate: 'user-create',\n  userEdit: 'user-edit',\n  nasabahCreate: 'nasabah-create',\n  nasabahEdit: 'nasabah-edit',\n  profileEdit: 'profile-edit',\n  packageCreate: 'package-create',\n  packageEdit: 'package-edit',\n  productCreate: 'product-create',\n  productEdit: 'product-edit',\n  ppobAllMarginEdit: 'ppob-all-margin-edit',\n  ppobEdit: 'ppob-edit',\n}\n\nexport const Titles = {\n  'change-password': 'Password changed',\n  'client-register': 'New client registered',\n  'client-approve': 'Request approved',\n  'client-reject': 'Request rejected',\n  'user-create': 'New user created',\n  'user-edit': 'User updated',\n  'nasabah-create': 'New nasabah created',\n  'nasabah-edit': 'Nasabah updated',\n  'profile-edit': 'Profile updated',\n  'package-create': 'New package created',\n  'package-edit': 'Package updated',\n  'product-create': 'New product created',\n  'product-edit': 'Product updated',\n  'ppob-all-margin-edit': 'All services margin updated',\n  'ppob-edit': 'PPOB updated',\n}\n\nexport const Contents = {\n  'change-password': \"User's password changed\",\n  'client-register': 'New client registration request created',\n  'client-approve': 'Client registration request approved',\n  'client-reject': 'Client registration request rejected',\n  'user-create': 'New user created: ',\n  'user-edit': 'User`s info edited: ',\n  'nasabah-create': 'New nasabah created: ',\n  'nasabah-edit': 'Nasabah`s info updated: ',\n  'profile-edit': 'Profile`s info updated',\n  'package-create': 'New package created: ',\n  'package-edit': 'Package`s info updated: ',\n  'product-create': 'New product created: ',\n  'product-edit': 'Product`s info updated: ',\n  'ppob-all-margin-edit': 'All services margin updated',\n  'ppob-edit': 'PPOB`s info updated: ',\n}\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\nimport { Contents, Titles } from '../helpers/notification_types'\n\nconst API_URL = process.env.REACT_APP_API_URL\n\nexport function getNotifications(skip) {\n  return axios\n    .get(API_URL + '/users/notification?skip=' + skip, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getNotification(id) {\n  return axios\n    .get(API_URL + '/users/notification/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function createNotification(sender, service, extra) {\n  const notification = {\n    sender: sender,\n    service: service,\n    title: Titles[service],\n    content: Contents[service] + extra,\n    reference_id: '',\n  }\n\n  return axios\n    .post(API_URL + '/users/notification', notification, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\n\nconst API_URL = process.env.REACT_APP_API_URL\n\nexport function getUsers(skip, searchQuery, status, role, sort) {\n  return axios\n    .get(\n      API_URL +\n        '/auth/user?search=' +\n        searchQuery +\n        '&status=' +\n        status +\n        '&role=' +\n        role +\n        '&sort=' +\n        sort +\n        '&skip=' +\n        skip,\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.message)\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getUser(id) {\n  return axios\n    .get(API_URL + '/auth/user/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function updateUser(user) {\n  return axios\n    .put(\n      API_URL + '/auth/user/' + user.id,\n      {\n        wa_number: user.wa_number,\n        name: user.name,\n        address: user.address,\n        role: user.role,\n        status: user.status,\n        // avatar: user.avatar,\n        // ktp_image: user.ktp_image,\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function createUser(user) {\n  return axios\n    .post(API_URL + '/auth/user', user, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n"],"sourceRoot":""}