{"version":3,"sources":["views/products/products_ppob/ProductsPpob.js","api/api_service.js"],"names":["ProductsPpob","history","useHistory","services","setServices","useState","hasLoaded","setHasLoaded","useEffect","axios","get","API_URL","headers","authHeader","then","response","data","catch","reason","console","log","ok","className","xs","htmlFor","type","id","value","xl","map","service","index","xxl","md","style","width","height","cursor","onClick","push","pathname","state","orientation","src","name","desc","active","color","shape","Loader"],"mappings":"mLAgHeA,UA5FM,KACnB,MAAMC,EAAUC,eACTC,EAAUC,GAAeC,mBAAS,KAClCC,EAAWC,GAAgBF,qBAWlC,OATAG,qBAAU,KCnBHC,IACJC,IAAIC,gDAAmC,CAAEC,QAASC,gBAClDC,MAAMC,GACEA,EAASC,OAEjBC,OAAOC,IACNC,QAAQC,IAAIF,MDcAJ,MAAME,KACF,IAAZA,EAAKK,KACPjB,EAAYY,EAAKb,UACjBI,GAAa,SAGhB,IAEID,EACL,eAAC,IAAD,WACE,eAAC,IAAD,CAAMgB,UAAU,0BAAhB,UACE,eAAC,IAAD,CAAMC,GAAI,EAAV,UACE,cAAC,IAAD,CAAYC,QAAQ,SAApB,oBACA,cAAC,IAAD,CAAYC,KAAK,OAAOC,GAAG,cAE7B,eAAC,IAAD,WACE,cAAC,IAAD,CAAYF,QAAQ,WAApB,sBACA,eAAC,IAAD,CAAaE,GAAG,WAAhB,UACE,wBAAQC,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,yBAGJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAYH,QAAQ,OAApB,qBACA,eAAC,IAAD,CAAaE,GAAG,OAAhB,UACE,wBAAQC,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,4BAIN,eAAC,IAAD,CAAML,UAAU,0BAAhB,UACE,cAAC,IAAD,CAAMM,GAAI,EAAGN,UAAU,OAAvB,iCAGA,cAAC,IAAD,CAAMM,GAAI,EAAGN,UAAU,OAAvB,SACE,eAAC,IAAD,WACE,wBAAQK,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,wBAGJ,cAAC,IAAD,CAAMC,GAAI,EAAGN,UAAU,OAAvB,SACE,cAAC,IAAD,CAAYG,KAAK,cAIrB,cAAC,IAAD,CAAMH,UAAU,wBAAhB,gBACGnB,QADH,IACGA,OADH,EACGA,EAAU0B,KAAI,CAACC,EAASC,IAErB,cAAC,IAAD,CAAkBC,IAAK,EAAGC,GAAI,EAAGX,UAAU,OAA3C,SACE,eAAC,IAAD,CACEY,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,OAAQ,WACjDC,QAAS,KACPrC,EAAQsC,KAAK,CAAEC,SAAU,yBAA0BC,MAAOX,KAH9D,UAME,cAAC,IAAD,CACEY,YAAY,MACZC,IAAK,gDAAkDb,EAAQc,OAEjE,eAAC,IAAD,CAAWtB,UAAU,cAArB,UACE,cAAC,IAAD,UAAaQ,EAAQc,OACrB,cAAC,IAAD,UAAYd,EAAQe,OACnBf,EAAQgB,OACP,cAAC,IAAD,CAAQC,MAAM,UAAUC,MAAM,eAA9B,oBAIA,cAAC,IAAD,CAAQD,MAAM,OAAOC,MAAM,eAA3B,6BAnBGjB,UA+BnBkB","file":"static/js/27.c5fcbc99.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardImage,\n  CCardText,\n  CCardTitle,\n  CCol,\n  CContainer,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CRow,\n} from '@coreui/react'\n\nimport { useHistory } from 'react-router-dom'\nimport Loader from '../../../components/Loader'\nimport { getServices } from '../../../api/api_service'\n\nconst ProductsPpob = () => {\n  const history = useHistory()\n  const [services, setServices] = useState([])\n  const [hasLoaded, setHasLoaded] = useState()\n\n  useEffect(() => {\n    getServices().then((data) => {\n      if (data.ok === true) {\n        setServices(data.services)\n        setHasLoaded(true)\n      }\n    })\n  }, [])\n\n  return hasLoaded ? (\n    <CContainer>\n      <CRow className=\"align-items-center mb-4\">\n        <CCol xs={6}>\n          <CFormLabel htmlFor=\"search\">Search</CFormLabel>\n          <CFormInput type=\"text\" id=\"search\" />\n        </CCol>\n        <CCol>\n          <CFormLabel htmlFor=\"category\">Category</CFormLabel>\n          <CFormSelect id=\"category\">\n            <option value=\"1\">One</option>\n            <option value=\"2\">Two</option>\n            <option value=\"3\">Three</option>\n          </CFormSelect>\n        </CCol>\n        <CCol>\n          <CFormLabel htmlFor=\"sort\">Sort By</CFormLabel>\n          <CFormSelect id=\"sort\">\n            <option value=\"1\">One</option>\n            <option value=\"2\">Two</option>\n            <option value=\"3\">Three</option>\n          </CFormSelect>\n        </CCol>\n      </CRow>\n      <CRow className=\"align-items-center mb-5\">\n        <CCol xl={2} className=\"mb-2\">\n          All Services Margin\n        </CCol>\n        <CCol xl={4} className=\"mb-2\">\n          <CFormSelect>\n            <option value=\"1\">One</option>\n            <option value=\"2\">Two</option>\n            <option value=\"3\">Three</option>\n          </CFormSelect>\n        </CCol>\n        <CCol xl={4} className=\"mb-2\">\n          <CFormInput type=\"text\" />\n        </CCol>\n      </CRow>\n\n      <CRow className=\"justify-content-start\">\n        {services?.map((service, index) => {\n          return (\n            <CCol key={index} xxl={3} md={5} className=\"mb-4\">\n              <CCard\n                style={{ width: '18rem', height: '100%', cursor: 'pointer' }}\n                onClick={() => {\n                  history.push({ pathname: '/products/ppob/details', state: service })\n                }}\n              >\n                <CCardImage\n                  orientation=\"top\"\n                  src={'https://via.placeholder.com/550x390.png?text=' + service.name}\n                />\n                <CCardBody className=\"text-center\">\n                  <CCardTitle>{service.name}</CCardTitle>\n                  <CCardText>{service.desc}</CCardText>\n                  {service.active ? (\n                    <CBadge color=\"success\" shape=\"rounded-pill\">\n                      Active\n                    </CBadge>\n                  ) : (\n                    <CBadge color=\"dark\" shape=\"rounded-pill\">\n                      Inactive\n                    </CBadge>\n                  )}\n                </CCardBody>\n              </CCard>\n            </CCol>\n          )\n        })}\n      </CRow>\n    </CContainer>\n  ) : (\n    Loader()\n  )\n}\n\nexport default ProductsPpob\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getServices() {\n  return axios\n    .get(API_URL + '/transaction/services', { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n"],"sourceRoot":""}