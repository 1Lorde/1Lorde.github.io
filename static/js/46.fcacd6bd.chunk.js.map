{"version":3,"sources":["views/vendor/vendor_details/VendorDetails.js","api/api_vendors.js"],"names":["VendorDetails","t","useTranslation","id","useParams","vendor","setVendor","useState","hasLoaded","setHasLoaded","useEffect","getVendor","then","data","ok","message","console","log","store","addNotification","success","danger","error","className","style","width","htmlFor","type","defaultValue","name","desc","api_base_url","status","value","color","variant","Loader","API_URL","getVendors","searchQuery","axios","get","headers","authHeader","response","catch","reason"],"mappings":"kGAAA,sFAsGeA,UAnFO,KACpB,MAAM,EAAEC,GAAMC,eACR,GAAEC,GAAOC,eACRC,EAAQC,GAAaC,sBACrBC,EAAWC,GAAgBF,qBAyClC,OAvCAG,qBACE,KACEC,YAAUR,GAAIS,MAAMC,IACdA,EAAKC,IACPR,EAAUO,EAAKR,QACfI,GAAa,IAETI,EAAKE,SACPC,QAAQC,IAAIJ,GACZK,QAAMC,gBAAgBC,YAAQP,EAAKE,YAEnCC,QAAQC,IAAIJ,GACZK,QAAMC,gBAAgBE,YAAOR,EAAKS,cAK1C,IAsBKd,EACL,cAAC,IAAD,CAAYe,UAAU,gCAAtB,SACE,cAAC,IAAD,CAAOC,MAAO,CAAEC,MAAO,SAAvB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,sBAAKF,UAAU,OAAf,UACE,cAAC,IAAD,CAAYG,QAAQ,gBAApB,SAAqCzB,EAAE,kBACvC,cAAC,IAAD,CAAY0B,KAAK,OAAOxB,GAAG,YAAYyB,aAAcvB,EAAOwB,UAE9D,sBAAKN,UAAU,OAAf,UACE,cAAC,IAAD,CAAYG,QAAQ,YAApB,SAAiCzB,EAAE,iBACnC,cAAC,IAAD,CAAe0B,KAAK,OAAOxB,GAAG,YAAYyB,aAAcvB,EAAOyB,UAEjE,sBAAKP,UAAU,OAAf,UACE,cAAC,IAAD,CAAYG,QAAQ,WAApB,qBACA,cAAC,IAAD,CAAYC,KAAK,OAAOxB,GAAG,WAAWyB,aAAcvB,EAAO0B,kBAE7D,sBAAKR,UAAU,OAAf,UACE,cAAC,IAAD,CAAYG,QAAQ,cAApB,SAAmCzB,EAAE,YACrC,eAAC,IAAD,CAAa0B,KAAK,OAAOxB,GAAG,cAAcyB,aAAcvB,EAAO2B,OAA/D,UACE,wBAAQC,MAAM,aAAd,sBACA,wBAAQA,MAAM,SAAd,0BAGJ,qBAAKV,UAAU,iCAAf,SACE,cAAC,IAAD,CAASW,MAAM,UAAUC,QAAQ,UAAjC,SACGlC,EAAE,qBAQfmC,gB,iCClGJ,mGAGA,MAAMC,EAAU,2BAET,SAASC,EAAWC,EAAaP,GACtC,OAAOQ,IACJC,IAAIJ,EAAU,+BAAiCE,EAAc,WAAaP,EAAQ,CACjFU,QAASC,gBAEV/B,MAAMgC,GACEA,EAAS/B,OAEjBgC,OAAOC,IACN9B,QAAQC,IAAI6B,MAIX,SAASnC,EAAUR,GACxB,OAAOqC,IACJC,IAAIJ,EAAU,wBAA0BlC,EAAI,CAC3CuC,QAASC,gBAEV/B,MAAMgC,GACEA,EAAS/B,OAEjBgC,OAAOC,IACN9B,QAAQC,IAAI6B","file":"static/js/46.fcacd6bd.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CContainer,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CFormTextarea,\n} from '@coreui/react'\nimport Loader from '../../../components/Loader'\nimport { store } from 'react-notifications-component'\nimport { danger, success } from '../../../helpers/notifications'\nimport { useParams } from 'react-router-dom'\nimport { getVendor } from '../../../api/api_vendors'\nimport { useTranslation } from 'react-i18next'\n\nconst VendorDetails = () => {\n  const { t } = useTranslation()\n  const { id } = useParams()\n  const [vendor, setVendor] = useState()\n  const [hasLoaded, setHasLoaded] = useState()\n\n  useEffect(\n    () => {\n      getVendor(id).then((data) => {\n        if (data.ok) {\n          setVendor(data.vendor)\n          setHasLoaded(true)\n        } else {\n          if (data.message) {\n            console.log(data)\n            store.addNotification(success(data.message))\n          } else {\n            console.log(data)\n            store.addNotification(danger(data.error))\n          }\n        }\n      })\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  )\n\n  // function handleEdit() {\n  //   console.log(vendor)\n  //   updateProduct(product).then((data) => {\n  //     console.log(data)\n  //     if (data.ok) {\n  //       createNotification(\n  //         userState.user.wa_number,\n  //         Services.productCreate,\n  //         product.name + ' (' + product.tipe + ')',\n  //       ).then((resp) => {\n  //         console.log('Notification created: ' + resp.id)\n  //       })\n  //       store.addNotification(success('Product updated'))\n  //     } else {\n  //       store.addNotification(danger(data.message))\n  //     }\n  //   })\n  // }\n\n  return hasLoaded ? (\n    <CContainer className=\"d-flex justify-content-center\">\n      <CCard style={{ width: '35rem' }}>\n        <CCardBody>\n          <CForm>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"fullnameInput\">{t('company_name')}</CFormLabel>\n              <CFormInput type=\"text\" id=\"nameInput\" defaultValue={vendor.name} />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"descInput\">{t('description')}</CFormLabel>\n              <CFormTextarea type=\"text\" id=\"descInput\" defaultValue={vendor.desc} />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"apiInput\">API URL</CFormLabel>\n              <CFormInput type=\"text\" id=\"apiInput\" defaultValue={vendor.api_base_url} />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"statusInput\">{t('status')}</CFormLabel>\n              <CFormSelect type=\"text\" id=\"statusInput\" defaultValue={vendor.status}>\n                <option value=\"NOT-ACTIVE\">Inactive</option>\n                <option value=\"ACTIVE\">Active</option>\n              </CFormSelect>\n            </div>\n            <div className=\"d-flex justify-content-between\">\n              <CButton color=\"primary\" variant=\"outline\">\n                {t('edit')}\n              </CButton>\n            </div>\n          </CForm>\n        </CCardBody>\n      </CCard>\n    </CContainer>\n  ) : (\n    Loader()\n  )\n}\n\nexport default VendorDetails\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getVendors(searchQuery, status) {\n  return axios\n    .get(API_URL + '/transaction/vendors?search=' + searchQuery + '&status=' + status, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function getVendor(id) {\n  return axios\n    .get(API_URL + '/transaction/vendors/' + id, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n"],"sourceRoot":""}