{"version":3,"sources":["views/support/ticket_create/TicketCreate.js","api/api_ticket.js"],"names":["TicketCreate","t","useTranslation","history","useHistory","ticket","setTicket","useState","validated","setValidated","className","style","width","noValidate","onSubmit","event","preventDefault","form","currentTarget","checkValidity","stopPropagation","console","log","createTicket","then","data","ok","store","addNotification","success","push","message","danger","error","htmlFor","type","id","required","onChange","e","title","target","value","invalid","description","color","API_URL","process","getTickets","skip","searchQuery","axios","get","headers","authHeader","response","catch","reason","status","getTicket","uid","closeTicket","put","post","subject","priority","createComment","ticketId","comment","ticket_id","text","createUser","userId","wa_number","fullname","ekoop_user_id","username","replace","password","email"],"mappings":"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","file":"static/js/25.c6a378ce.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CContainer,\n  CForm,\n  CFormFeedback,\n  CFormInput,\n  CFormLabel,\n  CFormTextarea,\n} from '@coreui/react'\nimport { useHistory } from 'react-router-dom'\nimport { store } from 'react-notifications-component'\nimport { danger, success } from '../../../helpers/notifications'\nimport { createTicket } from '../../../api/api_ticket'\nimport { useTranslation } from 'react-i18next'\n\nconst TicketCreate = () => {\n  const { t } = useTranslation()\n  const history = useHistory()\n  const [ticket, setTicket] = useState({})\n  const [validated, setValidated] = useState(false)\n\n  function handleCreate(event) {\n    event.preventDefault()\n\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.stopPropagation()\n    }\n    setValidated(true)\n\n    if (form.checkValidity()) {\n      console.log(ticket)\n      createTicket(ticket).then((data) => {\n        if (data.ok) {\n          store.addNotification(success(t('notifications.ticket_create')))\n          history.push('/support/tickets')\n        } else {\n          if (data.message) {\n            console.log(data)\n            store.addNotification(danger(data.message))\n          } else {\n            console.log(data)\n            store.addNotification(danger(data.error))\n          }\n        }\n      })\n    }\n  }\n\n  return (\n    <CContainer className=\"d-flex justify-content-center\">\n      <CCard style={{ width: '35rem' }}>\n        <CCardBody>\n          <CForm noValidate validated={validated} onSubmit={handleCreate}>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"title\">{t('title')}</CFormLabel>\n              <CFormInput\n                type=\"text\"\n                id=\"name\"\n                required\n                onChange={(e) => {\n                  setTicket((ticket) => ({ ...ticket, title: e.target.value }))\n                }}\n              />\n              <CFormFeedback invalid>{t('invalid_title')}</CFormFeedback>\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"description\">{t('description')}</CFormLabel>\n              <CFormTextarea\n                type=\"text\"\n                id=\"description\"\n                required\n                onChange={(e) => {\n                  setTicket((ticket) => ({\n                    ...ticket,\n                    description: e.target.value,\n                  }))\n                }}\n              />\n              <CFormFeedback invalid>{t('invalid_description')}</CFormFeedback>\n            </div>\n            <div className=\"d-flex justify-content-end\">\n              <CButton color=\"primary\" type=\"submit\">\n                {t('create')}\n              </CButton>\n            </div>\n          </CForm>\n        </CCardBody>\n      </CCard>\n    </CContainer>\n  )\n}\n\nexport default TicketCreate\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\n\nconst API_URL = process.env.REACT_APP_API_URL\n\nexport function getTickets(skip, searchQuery) {\n  return axios\n    .get(API_URL + '/tiket/tickets?skip=' + skip + '&search=' + searchQuery, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 404) {\n        console.log('Tickets not found')\n      } else {\n        console.log(reason)\n      }\n    })\n}\n\nexport function getTicket(uid) {\n  return axios\n    .get(API_URL + '/tiket/tickets/' + uid, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function closeTicket(id) {\n  return axios\n    .put(\n      API_URL + '/tiket/tickets/' + id,\n      { status: 3 },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function createTicket(ticket) {\n  return axios\n    .post(\n      API_URL + '/tiket/tickets',\n      {\n        subject: ticket.title,\n        description: ticket.description,\n        type: 'Issue',\n        priority: 'Normal',\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n\nexport function createComment(ticketId, comment) {\n  return axios\n    .post(\n      API_URL + '/tiket/tickets/comment',\n      {\n        ticket_id: ticketId,\n        text: comment,\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n\nexport function createUser(userId, wa_number, fullname) {\n  return axios\n    .post(\n      API_URL + '/tiket/users',\n      {\n        ekoop_user_id: userId,\n        username: wa_number.replace('+', ''),\n        password: wa_number.replace('+', '') + '123!',\n        email: wa_number.replace('+', '') + '@example.com',\n        fullname: fullname,\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n"],"sourceRoot":""}