{"version":3,"sources":["views/dashboard/widgets/Widget1.js","views/dashboard/widgets/Widget2.js","views/dashboard/widgets/Widget3.js","views/dashboard/Dashboard.js","helpers/api_requests.js"],"names":["Widget1","props","className","color","value","title","action","alignment","caret","icon","cilOptions","disabled","chart","style","height","data","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","getStyle","options","plugins","legend","display","maintainAspectRatio","scales","x","grid","drawBorder","ticks","y","min","max","elements","line","borderWidth","point","radius","hitRadius","hoverRadius","Widget2","fill","tension","Widget3","Dashboard","hasLoaded","setHasLoaded","useState","nasabahCount","setNasabahCount","accountOfficerCount","setAccountOfficerCount","clientsCount","setClientsCount","useEffect","getNasabahCount","then","all","count","getAccountOfficerCount","xl","type","role","variant","lg","size","Loader","API_URL","getUsers","searchQuery","status","sort","axios","get","headers","authHeader","response","catch","reason","console","log","message","getUser","id","updateUser","user","put","wa_number","name","address","createUser","post","getClient","updateClient","clientId","client","getClients","getProducts","createProduct","product","updateProduct","changes","description","balance_start","percent_rate","limit_min","limit_max","active","rate_type","credit_simulation_id","getServices","getNasabah","nasabah_list"],"mappings":"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","file":"static/js/8.2c5fac12.chunk.js","sourcesContent":["import {\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilOptions } from '@coreui/icons'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle } from '@coreui/utils'\nimport React from 'react'\n\nfunction Widget1(props) {\n  return (\n    <CWidgetStatsA\n      className=\"mb-4\"\n      color=\"info\"\n      /* eslint-disable-next-line react/prop-types */\n      value={props.value}\n      /* eslint-disable react/prop-types */\n      title={props.title}\n      action={\n        <CDropdown alignment=\"end\">\n          <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n            <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n          </CDropdownToggle>\n          <CDropdownMenu>\n            <CDropdownItem>Action</CDropdownItem>\n            <CDropdownItem>Another action</CDropdownItem>\n            <CDropdownItem>Something else here...</CDropdownItem>\n            <CDropdownItem disabled>Disabled action</CDropdownItem>\n          </CDropdownMenu>\n        </CDropdown>\n      }\n      chart={\n        <CChartLine\n          className=\"mt-3 mx-3\"\n          style={{ height: '70px' }}\n          data={{\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            datasets: [\n              {\n                label: 'My First dataset',\n                backgroundColor: 'transparent',\n                borderColor: 'rgba(255,255,255,.55)',\n                pointBackgroundColor: getStyle('--cui-info'),\n                data: [1, 18, 9, 17, 34, 22, 11],\n              },\n            ],\n          }}\n          options={{\n            plugins: {\n              legend: {\n                display: false,\n              },\n            },\n            maintainAspectRatio: false,\n            scales: {\n              x: {\n                grid: {\n                  display: false,\n                  drawBorder: false,\n                },\n                ticks: {\n                  display: false,\n                },\n              },\n              y: {\n                min: -9,\n                max: 39,\n                display: false,\n                grid: {\n                  display: false,\n                },\n                ticks: {\n                  display: false,\n                },\n              },\n            },\n            elements: {\n              line: {\n                borderWidth: 1,\n              },\n              point: {\n                radius: 4,\n                hitRadius: 10,\n                hoverRadius: 4,\n              },\n            },\n          }}\n        />\n      }\n    />\n  )\n}\n\nexport default Widget1\n","import {\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilOptions } from '@coreui/icons'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport React from 'react'\n\nfunction Widget2(props) {\n  return (\n    <CWidgetStatsA\n      className=\"mb-4\"\n      color=\"warning\"\n      /* eslint-disable-next-line react/prop-types */\n      value={props.value}\n      /* eslint-disable react/prop-types */\n      title={props.title}\n      action={\n        <CDropdown alignment=\"end\">\n          <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n            <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n          </CDropdownToggle>\n          <CDropdownMenu>\n            <CDropdownItem>Action</CDropdownItem>\n            <CDropdownItem>Another action</CDropdownItem>\n            <CDropdownItem>Something else here...</CDropdownItem>\n            <CDropdownItem disabled>Disabled action</CDropdownItem>\n          </CDropdownMenu>\n        </CDropdown>\n      }\n      chart={\n        <CChartLine\n          className=\"mt-3\"\n          style={{ height: '70px' }}\n          data={{\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            datasets: [\n              {\n                label: 'My First dataset',\n                backgroundColor: 'rgba(255,255,255,.2)',\n                borderColor: 'rgba(255,255,255,.55)',\n                data: [78, 81, 80, 45, 34, 12, 40],\n                fill: true,\n              },\n            ],\n          }}\n          options={{\n            plugins: {\n              legend: {\n                display: false,\n              },\n            },\n            maintainAspectRatio: false,\n            scales: {\n              x: {\n                display: false,\n              },\n              y: {\n                display: false,\n              },\n            },\n            elements: {\n              line: {\n                borderWidth: 2,\n                tension: 0.4,\n              },\n              point: {\n                radius: 0,\n                hitRadius: 10,\n                hoverRadius: 4,\n              },\n            },\n          }}\n        />\n      }\n    />\n  )\n}\n\nexport default Widget2\n","import {\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilOptions } from '@coreui/icons'\nimport { CChartBar } from '@coreui/react-chartjs'\nimport React from 'react'\n\nfunction Widget3(props) {\n  return (\n    <CWidgetStatsA\n      className=\"mb-4\"\n      color=\"danger\"\n      /* eslint-disable-next-line react/prop-types */\n      value={props.value}\n      /* eslint-disable react/prop-types */\n      title={props.title}\n      action={\n        <CDropdown alignment=\"end\">\n          <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n            <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n          </CDropdownToggle>\n          <CDropdownMenu>\n            <CDropdownItem>Action</CDropdownItem>\n            <CDropdownItem>Another action</CDropdownItem>\n            <CDropdownItem>Something else here...</CDropdownItem>\n            <CDropdownItem disabled>Disabled action</CDropdownItem>\n          </CDropdownMenu>\n        </CDropdown>\n      }\n      chart={\n        <CChartBar\n          className=\"mt-3 mx-3\"\n          style={{ height: '70px' }}\n          data={{\n            labels: [\n              'January',\n              'February',\n              'March',\n              'April',\n              'May',\n              'June',\n              'July',\n              'August',\n              'September',\n              'October',\n              'November',\n              'December',\n              'January',\n              'February',\n              'March',\n              'April',\n            ],\n            datasets: [\n              {\n                label: 'My First dataset',\n                backgroundColor: 'rgba(255,255,255,.2)',\n                borderColor: 'rgba(255,255,255,.55)',\n                data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n                barPercentage: 0.6,\n              },\n            ],\n          }}\n          options={{\n            maintainAspectRatio: false,\n            plugins: {\n              legend: {\n                display: false,\n              },\n            },\n            scales: {\n              x: {\n                grid: {\n                  display: false,\n                  drawTicks: false,\n                },\n                ticks: {\n                  display: false,\n                },\n              },\n              y: {\n                grid: {\n                  display: false,\n                  drawBorder: false,\n                  drawTicks: false,\n                },\n                ticks: {\n                  display: false,\n                },\n              },\n            },\n          }}\n        />\n      }\n    />\n  )\n}\n\nexport default Widget3\n","import React, { useEffect, useState } from 'react'\n\nimport { CButton, CButtonGroup, CCol, CContainer, CFormInput, CRow } from '@coreui/react'\n\nimport Widget1 from './widgets/Widget1'\nimport Widget2 from './widgets/Widget2'\nimport Widget3 from './widgets/Widget3'\nimport {\n  getAccountOfficerCount,\n  getClientCount,\n  getNasabah,\n  getNasabahCount,\n} from '../../helpers/api_requests'\nimport Loader from '../../components/Loader'\n\nconst Dashboard = () => {\n  const [hasLoaded, setHasLoaded] = useState()\n  const [nasabahCount, setNasabahCount] = useState(0)\n  const [accountOfficerCount, setAccountOfficerCount] = useState(0)\n  const [clientsCount, setClientsCount] = useState(0)\n\n  useEffect(() => {\n    getNasabahCount().then((data) => {\n      setNasabahCount(data.data.all.count)\n    })\n    getAccountOfficerCount().then((data) => {\n      setAccountOfficerCount(data.data.all.count)\n      setHasLoaded(true)\n    })\n    // getClientCount().then((data) => {\n    //   setClientsCount(data.data.all.count)\n    // })\n  }, [])\n\n  return hasLoaded ? (\n    <CContainer>\n      <CRow className=\"align-items-center\">\n        <CCol xl={2}>Virtual Accounts</CCol>\n        <CCol xl={6}>\n          <CFormInput type=\"text\" />\n        </CCol>\n        <CCol>\n          <CButtonGroup role=\"group\" className=\"p-3\">\n            <CButton color=\"primary\" variant=\"outline\">\n              View Transactions\n            </CButton>\n            <CButton color=\"primary\" variant=\"outline\">\n              Download Transactions\n            </CButton>\n          </CButtonGroup>\n        </CCol>\n      </CRow>\n      <br />\n      <hr />\n      <br />\n      <CRow>\n        <CCol lg={4}>\n          <Widget1 title=\"Total Number of Account Officer\" value={accountOfficerCount} />\n          <div className=\"d-flex justify-content-end pb-3\">\n            <CButton color=\"dark\" size=\"sm\">\n              View Details\n            </CButton>\n          </div>\n        </CCol>\n        <CCol lg={4}>\n          <Widget2 title=\"Total Number of Nasabah\" value={nasabahCount} />\n          <div className=\"d-flex justify-content-end pb-3\">\n            <CButton color=\"dark\" size=\"sm\">\n              View Details\n            </CButton>\n          </div>\n        </CCol>\n      </CRow>\n    </CContainer>\n  ) : (\n    Loader()\n  )\n}\n\nexport default Dashboard\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getUsers(searchQuery, status, role, sort) {\n  return axios\n    .get(\n      API_URL +\n        '/auth/user?search=' +\n        searchQuery +\n        '&status=' +\n        status +\n        '&role=' +\n        role +\n        '&sort=' +\n        sort,\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getUser(id) {\n  return axios\n    .get(API_URL + '/auth/user/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function updateUser(user) {\n  return axios\n    .put(\n      API_URL + '/auth/user/' + user.id,\n      {\n        wa_number: user.wa_number,\n        name: user.name,\n        address: user.address,\n        role: user.role,\n        status: user.status,\n        // avatar: user.avatar,\n        // ktp_image: user.ktp_image,\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function createUser(user) {\n  return axios\n    .post(API_URL + '/auth/user', user, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function getClient(id) {\n  return axios\n    .get(API_URL + '/users/admin/client/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function updateClient(clientId, client) {\n  return axios\n    .put(API_URL + '/users/admin/client/' + clientId, client, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function getClients(searchQuery, status, sort) {\n  return axios\n    .get(\n      API_URL + '/users/admin/client?search=' + searchQuery + '&status=' + status + '&sort=' + sort,\n      { headers: authHeader() },\n    )\n    .then((response) => {\n      return response.data.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getProducts(searchQuery, type) {\n  return axios\n    .get(API_URL + '/transaction/products?search=' + searchQuery + '&tipe=' + type, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function createProduct(product) {\n  return axios\n    .post(API_URL + '/transaction/products', product, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n\nexport function updateProduct(product) {\n  const changes = {\n    name: product.name,\n    description: product.description,\n    balance_start: product.balance_start,\n    percent_rate: product.percent_rate,\n    limit_min: product.limit_min,\n    limit_max: product.limit_max,\n    active: product.active,\n    rate_type: product.rate_type,\n  }\n\n  return axios\n    .put(API_URL + '/transaction/products/' + product.credit_simulation_id, changes, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function getServices() {\n  return axios\n    .get(API_URL + '/transaction/services', { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function getNasabah(searchQuery, status, sort) {\n  return axios\n    .get(\n      API_URL + '/nasabah/nasabah?search=' + searchQuery + '&status=' + status + '&sort=' + sort,\n      { headers: authHeader() },\n    )\n    .then((response) => {\n      return response.data.nasabah_list\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getNasabahCount() {\n  return axios\n    .get(API_URL + '/auth/stat/nasabah/all', { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getAccountOfficerCount() {\n  return axios\n    .get(API_URL + '/auth/stat/account_officer/all', { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getClientCount() {\n  return axios\n    .get(API_URL + '/auth/stat/clients/all', { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n"],"sourceRoot":""}