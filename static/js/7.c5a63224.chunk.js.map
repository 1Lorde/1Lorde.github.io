{"version":3,"sources":["views/products/product_create/ProductCreate.js","helpers/notification_types.js","api/api_notification.js","helpers/utils.js","api/api_product.js"],"names":["ProductSavingsCreate","t","useTranslation","userState","useContext","UserContext","history","useHistory","product","setProduct","useState","tipe","name","description","balance_start","percent_rate","rate_type","limit_min","limit_max","className","htmlFor","id","value","onChange","e","target","type","rows","tryParseInt","xs","color","onClick","console","log","createProduct","then","data","ok","createNotification","user","wa_number","Services","productCreate","resp","store","addNotification","success","push","danger","message","changePassword","clientRegister","clientApprove","clientReject","userCreate","userEdit","nasabahCreate","nasabahEdit","profileEdit","packageCreate","packageEdit","productEdit","ppobAllMarginEdit","ppobEdit","Titles","Contents","API_URL","process","getNotifications","skip","axios","get","headers","authHeader","response","catch","reason","status","getNotification","sender","service","extra","notification","title","content","reference_id","post","text","parsed","parseInt","isNaN","getProducts","searchQuery","getProduct","updateProduct","changes","active","put","credit_simulation_id"],"mappings":"iGAAA,gHAgMeA,UA1Kc,KAC3B,MAAM,EAAEC,GAAMC,eACR,UAAEC,GAAcC,qBAAWC,KAC3BC,EAAUC,eACTC,EAASC,GAAcC,mBAAS,CACrCC,KAAM,UACNC,KAAM,GACNC,YAAa,GACbC,cAAe,EACfC,aAAc,EACdC,UAAW,MACXC,UAAW,EACXC,UAAW,IAsBb,OACE,cAAC,IAAD,CAAYC,UAAU,gCAAtB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,sBAAKA,UAAU,OAAf,UACE,cAAC,IAAD,CAAYC,QAAQ,OAApB,SAA4BnB,EAAE,kBAC9B,eAAC,IAAD,CACEoB,GAAG,OACHC,MAAOd,EAAQG,KACfY,SAAWC,IACTf,GAAYD,IAAD,IAAmBA,EAASG,KAAMa,EAAEC,OAAOH,WAJ1D,UAOE,wBAAQA,MAAM,UAAd,SAAyBrB,EAAE,aAC3B,wBAAQqB,MAAM,UAAd,SAAyBrB,EAAE,mBAI/B,sBAAKkB,UAAU,OAAf,UACE,cAAC,IAAD,CAAYC,QAAQ,OAApB,SAA4BnB,EAAE,UAC9B,cAAC,IAAD,CACEyB,KAAK,OACLL,GAAG,OACHC,MAAOd,EAAQI,KACfW,SAAWC,IACTf,GAAYD,IAAD,IAAmBA,EAASI,KAAMY,EAAEC,OAAOH,gBAI5D,sBAAKH,UAAU,OAAf,UACE,cAAC,IAAD,CAAYC,QAAQ,cAApB,SAAmCnB,EAAE,iBACrC,cAAC,IAAD,CACEyB,KAAK,OACLL,GAAG,cACHM,KAAK,IACLL,MAAOd,EAAQK,YACfU,SAAWC,IACTf,GAAYD,IAAD,IAAmBA,EAASK,YAAaW,EAAEC,OAAOH,gBAKnE,6BAAKrB,EAAE,aACP,sBAAKkB,UAAU,YAAf,UACE,cAAC,IAAD,CAAYC,QAAQ,QAApB,SAA6BnB,EAAE,WAC/B,cAAC,IAAD,CACEyB,KAAK,SACLL,GAAG,QACHC,MAAOd,EAAQM,cACfS,SAAWC,IACTf,GAAYD,IAAD,IACNA,EACHM,cAAec,YAAYJ,EAAEC,OAAOH,iBAM5C,6BAAKrB,EAAE,UACP,eAAC,IAAD,CAAMkB,UAAU,YAAhB,UACE,eAAC,IAAD,CAAMU,GAAI,EAAV,UACE,cAAC,IAAD,CAAYT,QAAQ,eAApB,SAAoCnB,EAAE,gBACtC,cAAC,IAAD,CACEyB,KAAK,SACLL,GAAG,eACHC,MAAOd,EAAQO,aACfQ,SAAWC,IACTf,GAAYD,IAAD,IACNA,EACHO,aAAca,YAAYJ,EAAEC,OAAOH,iBAK3C,eAAC,IAAD,WACE,cAAC,IAAD,CAAYF,QAAQ,YAApB,SAAiCnB,EAAE,UACnC,eAAC,IAAD,CACEoB,GAAG,YACHC,MAAOd,EAAQQ,UACfO,SAAWC,IACTf,GAAYD,IAAD,IAAmBA,EAASQ,UAAWQ,EAAEC,OAAOH,WAJ/D,UAOE,wBAAQA,MAAM,MAAd,SAAqBrB,EAAE,SACvB,wBAAQqB,MAAM,UAAd,SAAyBrB,EAAE,eAC3B,wBAAQqB,MAAM,SAAd,SAAwBrB,EAAE,qBAKhC,6BAAKA,EAAE,kBACP,eAAC,IAAD,CAAMkB,UAAU,YAAhB,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAYC,QAAQ,YAApB,SAAiCnB,EAAE,eACnC,cAAC,IAAD,CACEyB,KAAK,SACLL,GAAG,YACHC,MAAOd,EAAQS,UACfM,SAAWC,IACTf,GAAYD,IAAD,IACNA,EACHS,UAAWW,YAAYJ,EAAEC,OAAOH,iBAKxC,eAAC,IAAD,WACE,cAAC,IAAD,CAAYF,QAAQ,YAApB,SAAiCnB,EAAE,eACnC,cAAC,IAAD,CACEyB,KAAK,SACLL,GAAG,YACHC,MAAOd,EAAQU,UACfK,SAAWC,IACTf,GAAYD,IAAD,IACNA,EACHU,UAAWU,YAAYJ,EAAEC,OAAOH,yBAQ9C,cAAC,IAAD,UACE,cAAC,IAAD,CAAMH,UAAU,qCAAhB,SACE,cAAC,IAAD,CAASW,MAAM,UAAUC,QAjJnC,WACEC,QAAQC,IAAIzB,GACZ0B,YAAc1B,GAAS2B,MAAMC,IACvBA,EAAKC,IACPC,YACEnC,EAAUoC,KAAKC,UACfC,IAASC,cACTlC,EAAQI,KAAO,KAAOJ,EAAQG,KAAO,KACrCwB,MAAMQ,IACNX,QAAQC,IAAI,yBAA2BU,EAAKtB,OAE9CuB,QAAMC,gBAAgBC,YAAQ7C,EAAE,kCAChCK,EAAQyC,KAAK,sBAEbH,QAAMC,gBAAgBG,YAAOZ,EAAKa,cAmI9B,SACGhD,EAAE,uB,iCCvLjB,sGAAO,MAAMwC,EAAW,CACtBS,eAAgB,kBAChBC,eAAgB,kBAChBC,cAAe,iBACfC,aAAc,gBACdC,WAAY,cACZC,SAAU,YACVC,cAAe,iBACfC,YAAa,eACbC,YAAa,eACbC,cAAe,iBACfC,YAAa,eACblB,cAAe,iBACfmB,YAAa,eACbC,kBAAmB,uBACnBC,SAAU,aAGCC,EAAS,CACpB,kBAAmB,mBACnB,kBAAmB,wBACnB,iBAAkB,mBAClB,gBAAiB,mBACjB,cAAe,mBACf,YAAa,eACb,iBAAkB,sBAClB,eAAgB,kBAChB,eAAgB,kBAChB,iBAAkB,sBAClB,eAAgB,kBAChB,iBAAkB,sBAClB,eAAgB,kBAChB,uBAAwB,8BACxB,YAAa,gBAGFC,EAAW,CACtB,kBAAmB,0BACnB,kBAAmB,0CACnB,iBAAkB,uCAClB,gBAAiB,uCACjB,cAAe,qBACf,YAAa,uBACb,iBAAkB,wBAClB,eAAgB,2BAChB,eAAgB,yBAChB,iBAAkB,wBAClB,eAAgB,2BAChB,iBAAkB,wBAClB,eAAgB,2BAChB,uBAAwB,8BACxB,YAAa,0B,iCCnDf,8IAIA,MAAMC,EAAUC,2BAET,SAASC,EAAiBC,GAC/B,OAAOC,IACJC,IAAIL,EAAU,4BAA8BG,EAAM,CAAEG,QAASC,gBAC7DtC,MAAMuC,GACEA,EAAStC,OAEjBuC,OAAOC,IACN,GAA+B,MAA3BA,EAAOF,SAASG,OAElB,OADA7C,QAAQC,IAAI2C,EAAO3B,SACZ,QAKR,SAAS6B,EAAgBzD,GAC9B,OAAOiD,IACJC,IAAIL,EAAU,uBAAyB7C,EAAI,CAAEmD,QAASC,gBACtDtC,MAAMuC,GACEA,EAAStC,OAEjBuC,OAAOC,IACN,GAA+B,MAA3BA,EAAOF,SAASG,OAElB,OADA7C,QAAQC,IAAI2C,EAAO3B,SACZ,QAKR,SAASX,EAAmByC,EAAQC,EAASC,GAClD,MAAMC,EAAe,CACnBH,OAAQA,EACRC,QAASA,EACTG,MAAOnB,IAAOgB,GACdI,QAASnB,IAASe,GAAWC,EAC7BI,aAAc,IAGhB,OAAOf,IACJgB,KAAKpB,EAAU,sBAAuBgB,EAAc,CACnDV,QAASC,gBAEVtC,MAAMuC,GACEA,EAAStC,OAEjBuC,OAAOC,IACN5C,QAAQC,IAAI2C,EAAOF,SAAStC,W,iCCnD3B,SAASR,EAAY2D,GAC1B,MAAMC,EAASC,SAASF,GACxB,OAAIG,MAAMF,GACD,GAEFA,EALT,mC,iCCAA,uKAGA,MAAMtB,EAAUC,2BAET,SAASwB,EAAYC,EAAalE,GACvC,OAAO4C,IACJC,IAAIL,EAAU,gCAAkC0B,EAAc,SAAWlE,EAAM,CAC9E8C,QAASC,gBAEVtC,MAAMuC,GACEA,EAAStC,OAEjBuC,OAAOC,IACN5C,QAAQC,IAAI2C,MAIX,SAASiB,EAAWxE,GACzB,OAAOiD,IACJC,IAAIL,EAAU,yBAA2B7C,EAAI,CAC5CmD,QAASC,gBAEVtC,MAAMuC,GACEA,EAAStC,OAEjBuC,OAAOC,IACN5C,QAAQC,IAAI2C,MAIX,SAAS1C,EAAc1B,GAC5B,OAAO8D,IACJgB,KAAKpB,EAAU,wBAAyB1D,EAAS,CAChDgE,QAASC,gBAEVtC,MAAMuC,GACEA,EAAStC,OAEjBuC,OAAOC,IACN5C,QAAQC,IAAI2C,EAAOF,SAAStC,SAI3B,SAAS0D,EAActF,GAC5B,MAAMuF,EAAU,CACdnF,KAAMJ,EAAQI,KACdC,YAAaL,EAAQK,YACrBC,cAAeN,EAAQM,cACvBC,aAAcP,EAAQO,aACtBE,UAAWT,EAAQS,UACnBC,UAAWV,EAAQU,UACnB8E,OAAQxF,EAAQwF,OAChBhF,UAAWR,EAAQQ,WAGrB,OAAOsD,IACJ2B,IAAI/B,EAAU,yBAA2B1D,EAAQ0F,qBAAsBH,EAAS,CAC/EvB,QAASC,gBAEVtC,MAAMuC,GACEA,EAAStC,OAEjBuC,OAAOC,GACCA,EAAOF,SAAStC","file":"static/js/7.c5a63224.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react'\nimport {\n  CButton,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CFormTextarea,\n  CRow,\n} from '@coreui/react'\nimport { store } from 'react-notifications-component'\nimport { danger, success } from '../../../helpers/notifications'\nimport { useHistory } from 'react-router-dom'\nimport { createProduct } from '../../../api/api_product'\nimport { tryParseInt } from '../../../helpers/utils'\nimport { UserContext } from '../../../helpers/user'\nimport { createNotification } from '../../../api/api_notification'\nimport { Services } from '../../../helpers/notification_types'\nimport { useTranslation } from 'react-i18next'\n\nconst ProductSavingsCreate = () => {\n  const { t } = useTranslation()\n  const { userState } = useContext(UserContext)\n  const history = useHistory()\n  const [product, setProduct] = useState({\n    tipe: 'savings',\n    name: '',\n    description: '',\n    balance_start: 0,\n    percent_rate: 0,\n    rate_type: 'fix',\n    limit_min: 0,\n    limit_max: 0,\n  })\n\n  function handleSave() {\n    console.log(product)\n    createProduct(product).then((data) => {\n      if (data.ok) {\n        createNotification(\n          userState.user.wa_number,\n          Services.productCreate,\n          product.name + ' (' + product.tipe + ')',\n        ).then((resp) => {\n          console.log('Notification created: ' + resp.id)\n        })\n        store.addNotification(success(t('notifications.product_create')))\n        history.push('/products/savings')\n      } else {\n        store.addNotification(danger(data.message))\n      }\n    })\n  }\n\n  return (\n    <CContainer className=\"d-flex justify-content-center\">\n      <CForm>\n        <CRow>\n          <CCol>\n            <div className=\"mb-2\">\n              <CFormLabel htmlFor=\"type\">{t('product_type')}</CFormLabel>\n              <CFormSelect\n                id=\"type\"\n                value={product.tipe}\n                onChange={(e) => {\n                  setProduct((product) => ({ ...product, tipe: e.target.value }))\n                }}\n              >\n                <option value=\"savings\">{t('savings')}</option>\n                <option value=\"credits\">{t('credits')}</option>\n              </CFormSelect>\n            </div>\n\n            <div className=\"mb-2\">\n              <CFormLabel htmlFor=\"name\">{t('name')}</CFormLabel>\n              <CFormInput\n                type=\"text\"\n                id=\"name\"\n                value={product.name}\n                onChange={(e) => {\n                  setProduct((product) => ({ ...product, name: e.target.value }))\n                }}\n              />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"description\">{t('description')}</CFormLabel>\n              <CFormTextarea\n                type=\"text\"\n                id=\"description\"\n                rows=\"3\"\n                value={product.description}\n                onChange={(e) => {\n                  setProduct((product) => ({ ...product, description: e.target.value }))\n                }}\n              />\n            </div>\n\n            <h5>{t('balance')}</h5>\n            <div className=\"ms-4 mb-2\">\n              <CFormLabel htmlFor=\"start\">{t('start')}</CFormLabel>\n              <CFormInput\n                type=\"number\"\n                id=\"start\"\n                value={product.balance_start}\n                onChange={(e) => {\n                  setProduct((product) => ({\n                    ...product,\n                    balance_start: tryParseInt(e.target.value),\n                  }))\n                }}\n              />\n            </div>\n\n            <h5>{t('rate')}</h5>\n            <CRow className=\"ms-3 mb-3\">\n              <CCol xs={4}>\n                <CFormLabel htmlFor=\"percent_rate\">{t('percentage')}</CFormLabel>\n                <CFormInput\n                  type=\"number\"\n                  id=\"percent_rate\"\n                  value={product.percent_rate}\n                  onChange={(e) => {\n                    setProduct((product) => ({\n                      ...product,\n                      percent_rate: tryParseInt(e.target.value),\n                    }))\n                  }}\n                />\n              </CCol>\n              <CCol>\n                <CFormLabel htmlFor=\"rate_type\">{t('type')}</CFormLabel>\n                <CFormSelect\n                  id=\"rate_type\"\n                  value={product.rate_type}\n                  onChange={(e) => {\n                    setProduct((product) => ({ ...product, rate_type: e.target.value }))\n                  }}\n                >\n                  <option value=\"fix\">{t('fix')}</option>\n                  <option value=\"efektif\">{t('effective')}</option>\n                  <option value=\"syaria\">{t('syaria')}</option>\n                </CFormSelect>\n              </CCol>\n            </CRow>\n\n            <h5>{t('requirements')}</h5>\n            <CRow className=\"mb-3 ms-3\">\n              <CCol>\n                <CFormLabel htmlFor=\"limit_min\">{t('limit_min')}</CFormLabel>\n                <CFormInput\n                  type=\"number\"\n                  id=\"limit_min\"\n                  value={product.limit_min}\n                  onChange={(e) => {\n                    setProduct((product) => ({\n                      ...product,\n                      limit_min: tryParseInt(e.target.value),\n                    }))\n                  }}\n                />\n              </CCol>\n              <CCol>\n                <CFormLabel htmlFor=\"limit_max\">{t('limit_max')}</CFormLabel>\n                <CFormInput\n                  type=\"number\"\n                  id=\"limit_max\"\n                  value={product.limit_max}\n                  onChange={(e) => {\n                    setProduct((product) => ({\n                      ...product,\n                      limit_max: tryParseInt(e.target.value),\n                    }))\n                  }}\n                />\n              </CCol>\n            </CRow>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol className=\"d-flex justify-content-center mt-3\">\n            <CButton color=\"primary\" onClick={handleSave}>\n              {t('create')}\n            </CButton>\n          </CCol>\n        </CRow>\n      </CForm>\n    </CContainer>\n  )\n}\n\nexport default ProductSavingsCreate\n","export const Services = {\n  changePassword: 'change-password',\n  clientRegister: 'client-register',\n  clientApprove: 'client-approve',\n  clientReject: 'client-reject',\n  userCreate: 'user-create',\n  userEdit: 'user-edit',\n  nasabahCreate: 'nasabah-create',\n  nasabahEdit: 'nasabah-edit',\n  profileEdit: 'profile-edit',\n  packageCreate: 'package-create',\n  packageEdit: 'package-edit',\n  productCreate: 'product-create',\n  productEdit: 'product-edit',\n  ppobAllMarginEdit: 'ppob-all-margin-edit',\n  ppobEdit: 'ppob-edit',\n}\n\nexport const Titles = {\n  'change-password': 'Password changed',\n  'client-register': 'New client registered',\n  'client-approve': 'Request approved',\n  'client-reject': 'Request rejected',\n  'user-create': 'New user created',\n  'user-edit': 'User updated',\n  'nasabah-create': 'New nasabah created',\n  'nasabah-edit': 'Nasabah updated',\n  'profile-edit': 'Profile updated',\n  'package-create': 'New package created',\n  'package-edit': 'Package updated',\n  'product-create': 'New product created',\n  'product-edit': 'Product updated',\n  'ppob-all-margin-edit': 'All services margin updated',\n  'ppob-edit': 'PPOB updated',\n}\n\nexport const Contents = {\n  'change-password': \"User's password changed\",\n  'client-register': 'New client registration request created',\n  'client-approve': 'Client registration request approved',\n  'client-reject': 'Client registration request rejected',\n  'user-create': 'New user created: ',\n  'user-edit': 'User`s info edited: ',\n  'nasabah-create': 'New nasabah created: ',\n  'nasabah-edit': 'Nasabah`s info updated: ',\n  'profile-edit': 'Profile`s info updated',\n  'package-create': 'New package created: ',\n  'package-edit': 'Package`s info updated: ',\n  'product-create': 'New product created: ',\n  'product-edit': 'Product`s info updated: ',\n  'ppob-all-margin-edit': 'All services margin updated',\n  'ppob-edit': 'PPOB`s info updated: ',\n}\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\nimport { Contents, Titles } from '../helpers/notification_types'\n\nconst API_URL = process.env.REACT_APP_API_URL\n\nexport function getNotifications(skip) {\n  return axios\n    .get(API_URL + '/users/notification?skip=' + skip, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getNotification(id) {\n  return axios\n    .get(API_URL + '/users/notification/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function createNotification(sender, service, extra) {\n  const notification = {\n    sender: sender,\n    service: service,\n    title: Titles[service],\n    content: Contents[service] + extra,\n    reference_id: '',\n  }\n\n  return axios\n    .post(API_URL + '/users/notification', notification, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n","export function tryParseInt(text) {\n  const parsed = parseInt(text)\n  if (isNaN(parsed)) {\n    return ''\n  }\n  return parsed\n}\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\n\nconst API_URL = process.env.REACT_APP_API_URL\n\nexport function getProducts(searchQuery, type) {\n  return axios\n    .get(API_URL + '/transaction/products?search=' + searchQuery + '&tipe=' + type, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function getProduct(id) {\n  return axios\n    .get(API_URL + '/transaction/products/' + id, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function createProduct(product) {\n  return axios\n    .post(API_URL + '/transaction/products', product, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n\nexport function updateProduct(product) {\n  const changes = {\n    name: product.name,\n    description: product.description,\n    balance_start: product.balance_start,\n    percent_rate: product.percent_rate,\n    limit_min: product.limit_min,\n    limit_max: product.limit_max,\n    active: product.active,\n    rate_type: product.rate_type,\n  }\n\n  return axios\n    .put(API_URL + '/transaction/products/' + product.credit_simulation_id, changes, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n"],"sourceRoot":""}