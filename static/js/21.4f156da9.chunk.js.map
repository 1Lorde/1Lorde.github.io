{"version":3,"sources":["views/change_password/ChangePassword.js","api/api_auth.js"],"names":["ChangePassword","t","useTranslation","oldPassword","setOldPassword","useState","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","history","useHistory","userState","userDispatch","useContext","UserContext","validated","setValidated","className","style","width","noValidate","onSubmit","event","preventDefault","form","currentTarget","checkValidity","stopPropagation","changePassword","then","data","store","addNotification","info","message","type","user","company","push","catch","e","response","console","log","danger","htmlFor","id","required","onChange","target","value","invalid","pattern","color","API_URL","process","login","waNumber","password","axios","post","wa_number","headers","apiHeader","reason","loginOtp","auth_id","otp","access_token","localStorage","setItem","old_password","new_password","authHeader","changePasswordOtp","forgotPassword","ktpId","ktp_id","resetPassword","userId","token","user_id","resetPasswordOtp","authId"],"mappings":"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","file":"static/js/21.4f156da9.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CContainer,\n  CForm,\n  CFormFeedback,\n  CFormInput,\n  CFormLabel,\n} from '@coreui/react'\nimport { UserContext } from '../../helpers/user'\nimport { store } from 'react-notifications-component'\nimport { danger, info } from '../../helpers/notifications'\nimport { useHistory } from 'react-router-dom'\nimport { changePassword } from '../../api/api_auth'\nimport { useTranslation } from 'react-i18next'\n\nconst ChangePassword = () => {\n  const { t } = useTranslation()\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [confirmNewPassword, setConfirmNewPassword] = useState('')\n\n  let history = useHistory()\n  const { userState, userDispatch } = useContext(UserContext)\n\n  const [validated, setValidated] = useState(false)\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.stopPropagation()\n    }\n\n    if (newPassword !== confirmNewPassword) {\n      store.addNotification(danger(t('notifications.check_confirm_field')))\n      return\n    }\n\n    setValidated(true)\n\n    if (form.checkValidity()) {\n      changePassword(oldPassword, newPassword)\n        .then((data) => {\n          store.addNotification(info(data.message))\n          userDispatch({ type: 'request_otp', user: userState.user, company: userState.company })\n          history.push('/input_otp')\n        })\n        .catch((e) => {\n          let data = e.response.data\n          console.log(data)\n          store.addNotification(danger(data.message))\n        })\n    }\n  }\n\n  return (\n    <CContainer className=\"d-flex justify-content-center\">\n      <CCard style={{ width: '35rem' }}>\n        <CCardBody>\n          <CForm noValidate validated={validated} onSubmit={handleSubmit}>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"old_pass\">{t('old_password')}</CFormLabel>\n              <CFormInput\n                type=\"password\"\n                id=\"old_pass\"\n                required\n                onChange={(e) => setOldPassword(e.target.value)}\n              />\n              <CFormFeedback invalid>{t('invalid_old_password')}</CFormFeedback>\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"new_pass\">{t('new_password')}</CFormLabel>\n              <CFormInput\n                type=\"password\"\n                pattern=\"^.{6,}$\"\n                id=\"new_pass\"\n                required\n                onChange={(e) => setNewPassword(e.target.value)}\n              />\n              <CFormFeedback invalid>{t('invalid_new_password')}</CFormFeedback>\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"confirm_new_pass\">{t('confirm_new_password')}</CFormLabel>\n              <CFormInput\n                type=\"password\"\n                pattern=\"^.{6,}$\"\n                id=\"confirm_new_pass\"\n                required\n                onChange={(e) => setConfirmNewPassword(e.target.value)}\n              />\n              <CFormFeedback invalid>{t('invalid_confirm_new_password')}</CFormFeedback>\n            </div>\n            <div className=\"d-flex justify-content-end\">\n              <CButton color=\"primary\" type=\"submit\">\n                {t('save')}\n              </CButton>\n            </div>\n          </CForm>\n        </CCardBody>\n      </CCard>\n    </CContainer>\n  )\n}\n\nexport default ChangePassword\n","import axios from 'axios'\nimport { apiHeader, authHeader } from './requestHeaders'\n\nconst API_URL = process.env.REACT_APP_API_URL\n\nexport function login(waNumber, password) {\n  return axios\n    .post(\n      API_URL + '/auth/auth/login/password',\n      {\n        wa_number: waNumber,\n        password: password,\n      },\n      {\n        headers: apiHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function loginOtp(auth_id, otp) {\n  return axios\n    .post(\n      API_URL + '/auth/auth/login/otp',\n      {\n        auth_id: auth_id,\n        otp: otp,\n      },\n      {\n        headers: apiHeader(),\n      },\n    )\n    .then((response) => {\n      if (response.data.access_token) {\n        localStorage.setItem('token', response.data.access_token)\n      }\n      return response.data\n    })\n}\n\nexport function changePassword(oldPassword, newPassword) {\n  return axios\n    .post(\n      API_URL + '/auth/profile/change_password',\n      {\n        old_password: oldPassword,\n        new_password: newPassword,\n      },\n      { headers: authHeader() },\n    )\n    .then((response) => {\n      console.log(response.data)\n      return response.data\n    })\n}\n\nexport function changePasswordOtp(otp) {\n  return axios\n    .post(\n      API_URL + '/auth/profile/change_password/otp',\n      {\n        otp: otp,\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      console.log(response)\n      return response.data\n    })\n}\n\nexport function forgotPassword(waNumber, ktpId) {\n  return axios\n    .post(\n      API_URL + '/auth/auth/forgot_password',\n      {\n        wa_number: waNumber,\n        ktp_id: ktpId,\n      },\n      {\n        headers: apiHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function resetPassword(userId, token, newPassword) {\n  console.log(userId)\n  return axios\n    .post(\n      API_URL + '/auth/auth/reset_password',\n      {\n        user_id: userId,\n        token: token,\n        new_password: newPassword,\n      },\n      {\n        headers: apiHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function resetPasswordOtp(authId, otp) {\n  return axios\n    .post(\n      API_URL + '/auth/auth/reset_password_otp',\n      {\n        auth_id: authId,\n        otp: otp,\n      },\n      {\n        headers: apiHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n"],"sourceRoot":""}