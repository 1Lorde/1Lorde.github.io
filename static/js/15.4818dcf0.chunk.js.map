{"version":3,"sources":["views/products/products_savings/ProductsSavings.js","api/api_product.js"],"names":["ProductsSavings","history","useHistory","products","setProducts","useState","hasLoaded","setHasLoaded","searchQuery","setSearchQuery","typeFilter","setTypeFilter","useEffect","getProducts","then","data","ok","className","xs","htmlFor","type","id","placeholder","onChange","e","target","value","color","onClick","push","map","product","index","xxl","md","style","width","height","cursor","pathname","state","orientation","src","name","description","active","shape","Loader","API_URL","axios","get","headers","authHeader","response","catch","reason","console","log","createProduct","post","updateProduct","changes","balance_start","percent_rate","limit_min","limit_max","rate_type","put","credit_simulation_id"],"mappings":"kGAAA,2DAkHeA,UA7FS,KACtB,MAAMC,EAAUC,eACTC,EAAUC,GAAeC,mBAAS,KAClCC,EAAWC,GAAgBF,sBAC3BG,EAAaC,GAAkBJ,mBAAS,KACxCK,EAAYC,GAAiBN,mBAAS,IAW7C,OATAO,qBAAU,KACRC,YAAY,GAAIH,GAAYI,MAAMC,KAChB,IAAZA,EAAKC,KACPZ,EAAYW,EAAKZ,UACjBI,GAAa,SAGhB,CAACC,EAAaE,IAEVJ,EACL,eAAC,IAAD,WACE,eAAC,IAAD,CAAMW,UAAU,kBAAhB,UACE,eAAC,IAAD,CAAMC,GAAI,EAAV,UACE,cAAC,IAAD,CAAYC,QAAQ,SAApB,oBACA,cAAC,IAAD,CACEC,KAAK,OACLC,GAAG,cACHC,YAAY,uBACZC,SAAWC,IACTf,EAAee,EAAEC,OAAOC,aAI9B,eAAC,IAAD,WACE,cAAC,IAAD,CAAYP,QAAQ,WAApB,sBACA,eAAC,IAAD,CACEE,GAAG,WACHE,SAAWC,IACTb,EAAca,EAAEC,OAAOC,QAH3B,UAME,wBAAQA,MAAM,GAAd,iBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,2BAGJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAYP,QAAQ,OAApB,qBACA,cAAC,IAAD,CAAaE,GAAG,YAElB,cAAC,IAAD,UACE,cAAC,IAAD,CAASM,MAAM,UAAUC,QAAS,IAAM3B,EAAQ4B,KAAK,4BAArD,0BAKJ,uBAEA,cAAC,IAAD,CAAMZ,UAAU,wBAAhB,gBACGd,QADH,IACGA,OADH,EACGA,EAAU2B,KAAI,CAACC,EAASC,IAErB,cAAC,IAAD,CAAkBC,IAAK,EAAGC,GAAI,EAAGjB,UAAU,OAA3C,SACE,eAAC,IAAD,CACEkB,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,OAAQ,WACjDV,QAAS,KACP3B,EAAQ4B,KAAK,CAAEU,SAAU,4BAA6BC,MAAOT,KAHjE,UAME,cAAC,IAAD,CACEU,YAAY,MACZC,IAAK,gDAAkDX,EAAQY,OAEjE,eAAC,IAAD,CAAW1B,UAAU,cAArB,UACE,cAAC,IAAD,UAAac,EAAQY,OACrB,cAAC,IAAD,UAAYZ,EAAQa,cACnBb,EAAQc,OACP,cAAC,IAAD,CAAQlB,MAAM,UAAUmB,MAAM,eAA9B,oBAIA,cAAC,IAAD,CAAQnB,MAAM,OAAOmB,MAAM,eAA3B,6BAnBGd,UA+BnBe,gB,iCC9GJ,qIAGA,MAAMC,EAAU,2BAET,SAASnC,EAAYL,EAAaY,GACvC,OAAO6B,IACJC,IAAIF,EAAU,gCAAkCxC,EAAc,SAAWY,EAAM,CAC9E+B,QAASC,gBAEVtC,MAAMuC,GACEA,EAAStC,OAEjBuC,OAAOC,IACNC,QAAQC,IAAIF,MAIX,SAASG,EAAc3B,GAC5B,OAAOkB,IACJU,KAAKX,EAAU,wBAAyBjB,EAAS,CAChDoB,QAASC,gBAEVtC,MAAMuC,GACEA,EAAStC,OAEjBuC,OAAOC,IACNC,QAAQC,IAAIF,EAAOF,SAAStC,SAI3B,SAAS6C,EAAc7B,GAC5B,MAAM8B,EAAU,CACdlB,KAAMZ,EAAQY,KACdC,YAAab,EAAQa,YACrBkB,cAAe/B,EAAQ+B,cACvBC,aAAchC,EAAQgC,aACtBC,UAAWjC,EAAQiC,UACnBC,UAAWlC,EAAQkC,UACnBpB,OAAQd,EAAQc,OAChBqB,UAAWnC,EAAQmC,WAGrB,OAAOjB,IACJkB,IAAInB,EAAU,yBAA2BjB,EAAQqC,qBAAsBP,EAAS,CAC/EV,QAASC,gBAEVtC,MAAMuC,GACEA,EAAStC,OAEjBuC,OAAOC,GACCA,EAAOF,SAAStC","file":"static/js/15.4818dcf0.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  CBadge,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardImage,\n  CCardText,\n  CCardTitle,\n  CCol,\n  CContainer,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CRow,\n} from '@coreui/react'\n\nimport { useHistory } from 'react-router-dom'\nimport Loader from '../../../components/Loader'\nimport { getProducts } from '../../../api/api_product'\n\nconst ProductsSavings = () => {\n  const history = useHistory()\n  const [products, setProducts] = useState([])\n  const [hasLoaded, setHasLoaded] = useState()\n  const [searchQuery, setSearchQuery] = useState('')\n  const [typeFilter, setTypeFilter] = useState('')\n\n  useEffect(() => {\n    getProducts('', typeFilter).then((data) => {\n      if (data.ok === true) {\n        setProducts(data.products)\n        setHasLoaded(true)\n      }\n    })\n  }, [searchQuery, typeFilter])\n\n  return hasLoaded ? (\n    <CContainer>\n      <CRow className=\"align-items-end\">\n        <CCol xs={6}>\n          <CFormLabel htmlFor=\"search\">Search</CFormLabel>\n          <CFormInput\n            type=\"text\"\n            id=\"searchInput\"\n            placeholder=\"Enter search query..\"\n            onChange={(e) => {\n              setSearchQuery(e.target.value)\n            }}\n          />\n        </CCol>\n        <CCol>\n          <CFormLabel htmlFor=\"category\">Category</CFormLabel>\n          <CFormSelect\n            id=\"category\"\n            onChange={(e) => {\n              setTypeFilter(e.target.value)\n            }}\n          >\n            <option value=\"\">All</option>\n            <option value=\"savings\">Savings</option>\n            <option value=\"credits\">Credits</option>\n          </CFormSelect>\n        </CCol>\n        <CCol>\n          <CFormLabel htmlFor=\"sort\">Sort By</CFormLabel>\n          <CFormSelect id=\"sort\"></CFormSelect>\n        </CCol>\n        <CCol>\n          <CButton color=\"primary\" onClick={() => history.push('/products/savings/create')}>\n            Add New\n          </CButton>\n        </CCol>\n      </CRow>\n      <br />\n\n      <CRow className=\"justify-content-start\">\n        {products?.map((product, index) => {\n          return (\n            <CCol key={index} xxl={3} md={5} className=\"mb-4\">\n              <CCard\n                style={{ width: '18rem', height: '100%', cursor: 'pointer' }}\n                onClick={() => {\n                  history.push({ pathname: '/products/savings/details', state: product })\n                }}\n              >\n                <CCardImage\n                  orientation=\"top\"\n                  src={'https://via.placeholder.com/550x390.png?text=' + product.name}\n                />\n                <CCardBody className=\"text-center\">\n                  <CCardTitle>{product.name}</CCardTitle>\n                  <CCardText>{product.description}</CCardText>\n                  {product.active ? (\n                    <CBadge color=\"success\" shape=\"rounded-pill\">\n                      Active\n                    </CBadge>\n                  ) : (\n                    <CBadge color=\"dark\" shape=\"rounded-pill\">\n                      Inactive\n                    </CBadge>\n                  )}\n                </CCardBody>\n              </CCard>\n            </CCol>\n          )\n        })}\n      </CRow>\n    </CContainer>\n  ) : (\n    Loader()\n  )\n}\n\nexport default ProductsSavings\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getProducts(searchQuery, type) {\n  return axios\n    .get(API_URL + '/transaction/products?search=' + searchQuery + '&tipe=' + type, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function createProduct(product) {\n  return axios\n    .post(API_URL + '/transaction/products', product, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n\nexport function updateProduct(product) {\n  const changes = {\n    name: product.name,\n    description: product.description,\n    balance_start: product.balance_start,\n    percent_rate: product.percent_rate,\n    limit_min: product.limit_min,\n    limit_max: product.limit_max,\n    active: product.active,\n    rate_type: product.rate_type,\n  }\n\n  return axios\n    .put(API_URL + '/transaction/products/' + product.credit_simulation_id, changes, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n"],"sourceRoot":""}