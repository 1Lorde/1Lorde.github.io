{"version":3,"sources":["views/products/products_ppob_details/ProductPpobDetails.js","helpers/notification_types.js","api/api_notification.js","helpers/utils.js","routes/RestrictedComponent.js","api/api_service.js"],"names":["ProductPpobDetails","userState","useContext","UserContext","history","useHistory","id","useParams","service","setService","useState","hasLoaded","setHasLoaded","validated","setValidated","servicesMargin","setServicesMargin","useEffect","getService","then","data","ok","user","role","getServicesMargin","console","log","service_margin","message","store","addNotification","success","danger","error","noValidate","onSubmit","event","preventDefault","form","currentTarget","checkValidity","stopPropagation","margin_by","nominal","updateService","createNotification","wa_number","Services","ppobEdit","name","resp","push","xs","cols","md","className","htmlFor","defaultValue","category","onChange","e","target","value","fluid","thumbnail","rounded","src","width","height","type","required","slug","rows","desc","vendor_slug","vendors","map","vendor","key","toUpperCase","inline","label","defaultChecked","max","disabled","tryParseInt","active","allowedRoles","Roles","color","variant","onClick","Loader","changePassword","clientRegister","clientApprove","clientReject","userCreate","userEdit","nasabahCreate","nasabahEdit","profileEdit","packageCreate","packageEdit","productCreate","productEdit","ppobAllMarginEdit","Titles","Contents","API_URL","getNotifications","skip","axios","get","headers","authHeader","response","catch","reason","status","getNotification","sender","extra","notification","title","content","reference_id","post","text","parsed","parseInt","isNaN","RestrictedComponent","children","userRole","getUserRole","includes","propTypes","PropTypes","element","request","array","getServices","searchQuery","marginBy","put","updateServicesMargin"],"mappings":"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","file":"static/js/37.b019ae56.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCol,\n  CContainer,\n  CForm,\n  CFormCheck,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CFormTextarea,\n  CImage,\n  CRow,\n} from '@coreui/react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport Loader from '../../../components/Loader'\nimport { store } from 'react-notifications-component'\nimport { danger, success } from '../../../helpers/notifications'\nimport { getService, getServicesMargin, updateService } from '../../../api/api_service'\nimport { tryParseInt } from '../../../helpers/utils'\nimport { createNotification } from '../../../api/api_notification'\nimport { Services } from '../../../helpers/notification_types'\nimport { UserContext } from '../../../helpers/user'\nimport RestrictedComponent from '../../../routes/RestrictedComponent'\nimport { Roles } from '../../../helpers/role'\n\nconst ProductPpobDetails = () => {\n  const { userState } = useContext(UserContext)\n  const history = useHistory()\n  const { id } = useParams()\n  const [service, setService] = useState({})\n  const [hasLoaded, setHasLoaded] = useState(false)\n  const [validated, setValidated] = useState(false)\n  const [servicesMargin, setServicesMargin] = useState({})\n\n  const handleEdit = (event) => {\n    event.preventDefault()\n\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    setValidated(true)\n\n    if (form.checkValidity()) {\n      console.log(service)\n      if (service.margin_by === 'all') {\n        service.nominal = servicesMargin.nominal\n      }\n      updateService(id, service).then((data) => {\n        if (data.ok) {\n          console.log(data)\n          createNotification(userState.user.wa_number, Services.ppobEdit, service.name).then(\n            (resp) => {\n              console.log('Notification created: ' + resp.id)\n            },\n          )\n          store.addNotification(success('PPOB updated successfully.'))\n          history.push('/products/ppob')\n        } else {\n          console.log(data)\n          store.addNotification(danger(data.error))\n        }\n      })\n    }\n  }\n\n  useEffect(\n    () => {\n      getService(id).then((data) => {\n        if (data.ok) {\n          let service = data.data\n          service['vendor_slug'] = service['vendor_slug_selected']\n          delete service['vendor_slug_selected']\n          setService(service)\n          if (!hasLoaded && userState.user.role !== 'account-officer') {\n            getServicesMargin().then((data) => {\n              if (data.ok === true) {\n                console.log(data)\n                setServicesMargin(data.service_margin)\n                setHasLoaded(true)\n              }\n            })\n          } else {\n            setHasLoaded(true)\n          }\n        } else {\n          if (data.message) {\n            console.log(data)\n            store.addNotification(success(data.message))\n          } else {\n            console.log(data)\n            store.addNotification(danger(data.error))\n          }\n        }\n      })\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  )\n\n  return hasLoaded ? (\n    <CForm noValidate validated={validated} onSubmit={handleEdit}>\n      <CRow xs={{ cols: 1 }} md={{ cols: 2 }} className=\"mb-4\">\n        <CCol>\n          <CFormLabel htmlFor=\"category\">Category</CFormLabel>\n          <CFormSelect\n            id=\"category\"\n            defaultValue={service.category}\n            onChange={(e) => {\n              setService((service) => ({ ...service, category: e.target.value }))\n            }}\n          >\n            <option value=\"postpaid\">Postpaid</option>\n            <option value=\"prepaid\">Prepaid</option>\n          </CFormSelect>\n          <CContainer fluid className=\"d-flex justify-content-center mt-4 mb-3\">\n            <CImage\n              thumbnail\n              rounded\n              src={'https://via.placeholder.com/550x390.png?text=' + service.name}\n              width={500}\n              height={500}\n            />\n          </CContainer>\n        </CCol>\n        <CCol>\n          <div className=\"mb-2\">\n            <CFormLabel htmlFor=\"name\">PPOB Name</CFormLabel>\n            <CFormInput\n              type=\"text\"\n              id=\"name\"\n              required\n              defaultValue={service.name}\n              onChange={(e) => {\n                setService((service) => ({ ...service, name: e.target.value }))\n              }}\n            />\n          </div>\n          <div className=\"mb-2\">\n            <CFormLabel htmlFor=\"slug\">Slug</CFormLabel>\n            <CFormInput\n              type=\"text\"\n              id=\"slug\"\n              required\n              defaultValue={service.slug}\n              onChange={(e) => {\n                setService((service) => ({ ...service, slug: e.target.value }))\n              }}\n            />\n          </div>\n          <div className=\"mb-2\">\n            <CFormLabel htmlFor=\"description\">Description</CFormLabel>\n            <CFormTextarea\n              type=\"text\"\n              id=\"description\"\n              rows=\"3\"\n              required\n              defaultValue={service.desc}\n              onChange={(e) => {\n                setService((service) => ({ ...service, desc: e.target.value }))\n              }}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <CFormLabel htmlFor=\"vendor\">Vendor</CFormLabel>\n            <CFormSelect\n              id=\"vendor\"\n              defaultValue={service.vendor_slug}\n              onChange={(e) => {\n                setService((service) => ({ ...service, vendor_slug: e.target.value }))\n              }}\n            >\n              {service.vendors.map((vendor, key) => {\n                return (\n                  <option key={key} value={vendor}>\n                    {vendor.toUpperCase()}\n                  </option>\n                )\n              })}\n            </CFormSelect>\n          </div>\n          <h5>Margin by</h5>\n          <CRow xs={{ cols: 1 }} md={{ cols: 2 }} className=\"mb-3 mt-3 align-items-center\">\n            <CCol>\n              <CFormCheck\n                inline\n                type=\"radio\"\n                name=\"inlineRadioOptions\"\n                id=\"inlineCheckbox1\"\n                value=\"all\"\n                label=\"All (Default)\"\n                defaultChecked={service.margin_by === 'all'}\n                onChange={() => {\n                  setService((service) => ({ ...service, margin_by: 'all' }))\n                }}\n              />\n              <CFormCheck\n                inline\n                type=\"radio\"\n                name=\"inlineRadioOptions\"\n                id=\"inlineCheckbox2\"\n                value=\"percent\"\n                label=\"Percent\"\n                defaultChecked={service.margin_by === 'percent'}\n                onChange={() => {\n                  setService((service) => ({ ...service, margin_by: 'percent' }))\n                }}\n              />\n              <CFormCheck\n                inline\n                type=\"radio\"\n                name=\"inlineRadioOptions\"\n                id=\"inlineCheckbox3\"\n                value=\"fix\"\n                label=\"Fix\"\n                defaultChecked={service.margin_by === 'fix_cost'}\n                onChange={() => {\n                  setService((service) => ({ ...service, margin_by: 'fix_cost' }))\n                }}\n              />\n            </CCol>\n            <CCol>\n              <CFormInput\n                type=\"number\"\n                id=\"nominal\"\n                required\n                max={service.margin_by === 'percent' ? 100 : 100000}\n                value={service.margin_by === 'all' ? '' : service.nominal}\n                disabled={service.margin_by === 'all'}\n                onChange={(e) => {\n                  setService((service) => ({ ...service, nominal: tryParseInt(e.target.value) }))\n                }}\n              />\n            </CCol>\n          </CRow>\n          <CRow className=\"mb-3 align-items-center\">\n            <CCol xs={5}>Retail Price (after margin added)</CCol>\n            <CCol>\n              <CFormInput type=\"text\" id=\"retail_price\" />\n            </CCol>\n          </CRow>\n          <CFormLabel htmlFor=\"status\">Status</CFormLabel>\n          <CFormSelect\n            id=\"status\"\n            defaultValue={service.active}\n            onChange={(e) => {\n              setService((service) => ({\n                ...service,\n                active: e.target.value === 'true',\n              }))\n            }}\n          >\n            <option value=\"true\">Active</option>\n            <option value=\"false\">Inactive</option>\n          </CFormSelect>\n        </CCol>\n      </CRow>\n      <CRow xs={{ cols: 1 }} md={{ cols: 2 }}>\n        <CCol className=\"d-grid d-md-flex justify-content-md-start mb-2\">\n          <RestrictedComponent\n            allowedRoles={[\n              Roles['koperasi-owner'],\n              Roles['credit-analyst'],\n              Roles['account-officer'],\n            ]}\n          >\n            <CButton\n              color=\"primary\"\n              variant=\"outline\"\n              onClick={() => {\n                history.push('/products/ppob/' + id + '/buy')\n              }}\n            >\n              Buy\n            </CButton>\n          </RestrictedComponent>\n        </CCol>\n        <CCol className=\"d-grid d-md-flex justify-content-md-end mb-3\">\n          <RestrictedComponent\n            allowedRoles={[\n              Roles['koperasi-owner'],\n              Roles['credit-analyst'],\n              Roles['account-officer'],\n            ]}\n          >\n            <CButton color=\"primary\" type=\"submit\">\n              Edit\n            </CButton>\n          </RestrictedComponent>\n        </CCol>\n      </CRow>\n    </CForm>\n  ) : (\n    Loader()\n  )\n}\n\nexport default ProductPpobDetails\n","export const Services = {\n  changePassword: 'change-password',\n  clientRegister: 'client-register',\n  clientApprove: 'client-approve',\n  clientReject: 'client-reject',\n  userCreate: 'user-create',\n  userEdit: 'user-edit',\n  nasabahCreate: 'nasabah-create',\n  nasabahEdit: 'nasabah-edit',\n  profileEdit: 'profile-edit',\n  packageCreate: 'package-create',\n  packageEdit: 'package-edit',\n  productCreate: 'product-create',\n  productEdit: 'product-edit',\n  ppobAllMarginEdit: 'ppob-all-margin-edit',\n  ppobEdit: 'ppob-edit',\n}\n\nexport const Titles = {\n  'change-password': 'Password changed',\n  'client-register': 'New client registered',\n  'client-approve': 'Request approved',\n  'client-reject': 'Request rejected',\n  'user-create': 'New user created',\n  'user-edit': 'User updated',\n  'nasabah-create': 'New nasabah created',\n  'nasabah-edit': 'Nasabah updated',\n  'profile-edit': 'Profile updated',\n  'package-create': 'New package created',\n  'package-edit': 'Package updated',\n  'product-create': 'New product created',\n  'product-edit': 'Product updated',\n  'ppob-all-margin-edit': 'All services margin updated',\n  'ppob-edit': 'PPOB updated',\n}\n\nexport const Contents = {\n  'change-password': \"User's password changed\",\n  'client-register': 'New client registration request created',\n  'client-approve': 'Client registration request approved',\n  'client-reject': 'Client registration request rejected',\n  'user-create': 'New user created: ',\n  'user-edit': 'User`s info edited: ',\n  'nasabah-create': 'New nasabah created: ',\n  'nasabah-edit': 'Nasabah`s info updated: ',\n  'profile-edit': 'Profile`s info updated',\n  'package-create': 'New package created: ',\n  'package-edit': 'Package`s info updated: ',\n  'product-create': 'New product created: ',\n  'product-edit': 'Product`s info updated: ',\n  'ppob-all-margin-edit': 'All services margin updated',\n  'ppob-edit': 'PPOB`s info updated: ',\n}\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\nimport { Contents, Titles } from '../helpers/notification_types'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getNotifications(skip) {\n  return axios\n    .get(API_URL + '/users/notification?skip=' + skip, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getNotification(id) {\n  return axios\n    .get(API_URL + '/users/notification/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function createNotification(sender, service, extra) {\n  const notification = {\n    sender: sender,\n    service: service,\n    title: Titles[service],\n    content: Contents[service] + extra,\n    reference_id: '',\n  }\n\n  return axios\n    .post(API_URL + '/users/notification', notification, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n","export function tryParseInt(text) {\n  const parsed = parseInt(text)\n  if (isNaN(parsed)) {\n    return ''\n  }\n  return parsed\n}\n","import PropTypes from 'prop-types'\nimport { getUserRole } from '../helpers/user'\n\nconst RestrictedComponent = ({ children, allowedRoles }) => {\n  const userRole = getUserRole()\n  const isAllowed = allowedRoles.includes(userRole)\n  return isAllowed && children\n}\n\nRestrictedComponent.propTypes = {\n  children: PropTypes.element,\n  request: PropTypes.array,\n}\n\nexport default RestrictedComponent\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getServices(searchQuery, category, active, marginBy) {\n  return axios\n    .get(\n      API_URL +\n        '/transaction/services?search=' +\n        searchQuery +\n        '&category=' +\n        category +\n        '&active=' +\n        active +\n        '&margin_by=' +\n        marginBy,\n      { headers: authHeader() },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function getService(id) {\n  return axios\n    .get(API_URL + '/transaction/services/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function updateService(id, service) {\n  return axios\n    .put(API_URL + '/transaction/services/' + id, service, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function getServicesMargin() {\n  return axios\n    .get(API_URL + '/transaction/service_margin', {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function updateServicesMargin(servicesMargin) {\n  return axios\n    .put(\n      API_URL + '/transaction/service_margin',\n      {\n        margin_by: servicesMargin.margin_by,\n        nominal: servicesMargin.nominal,\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n"],"sourceRoot":""}