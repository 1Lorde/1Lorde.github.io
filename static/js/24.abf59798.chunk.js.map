{"version":3,"sources":["views/products/products_ppob_details/ProductPpobDetails.js"],"names":["ProductPpobDetails","props","history","useHistory","service","setService","useState","hasLoaded","setHasLoaded","tryParseInt","text","parsed","parseInt","isNaN","useEffect","location","state","push","xs","cols","md","className","htmlFor","id","defaultValue","category","onChange","e","target","value","fluid","thumbnail","rounded","src","name","width","height","type","rows","desc","vendor_slug_selected","inline","label","defaultChecked","margin_by","readOnly","nominal","active","color","variant","onClick","pathname","disabled","Loader"],"mappings":"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","file":"static/js/24.abf59798.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCol,\n  CContainer,\n  CForm,\n  CFormCheck,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CFormTextarea,\n  CImage,\n  CRow,\n} from '@coreui/react'\nimport { useHistory } from 'react-router-dom'\nimport Loader from '../../../components/Loader'\n\nconst ProductPpobDetails = (props) => {\n  const history = useHistory()\n  const [service, setService] = useState()\n  const [hasLoaded, setHasLoaded] = useState()\n\n  useEffect(\n    () => {\n      // eslint-disable-next-line react/prop-types\n      if (!props.location.state) {\n        history.push('/products/ppob')\n      }\n      // eslint-disable-next-line react/prop-types\n      setService(props.location.state)\n      setHasLoaded(true)\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  )\n\n  function tryParseInt(text) {\n    const parsed = parseInt(text)\n    if (isNaN(parsed)) {\n      return ''\n    }\n    return parsed\n  }\n\n  return hasLoaded ? (\n    <CForm>\n      <CRow xs={{ cols: 1 }} md={{ cols: 2 }} className=\"mb-4\">\n        <CCol>\n          <CFormLabel htmlFor=\"category\">Category</CFormLabel>\n          <CFormSelect\n            id=\"category\"\n            defaultValue={service.category}\n            onChange={(e) => {\n              setService((service) => ({ ...service, category: e.target.value }))\n            }}\n          >\n            <option value=\"postpaid\">Postpaid</option>\n          </CFormSelect>\n          <CContainer fluid className=\"d-flex justify-content-center mt-4 mb-3\">\n            <CImage\n              thumbnail\n              rounded\n              src={'https://via.placeholder.com/550x390.png?text=' + service.name}\n              width={500}\n              height={500}\n            />\n          </CContainer>\n        </CCol>\n        <CCol>\n          <div className=\"mb-2\">\n            <CFormLabel htmlFor=\"name\">PPOB Name</CFormLabel>\n            <CFormInput\n              type=\"text\"\n              id=\"name\"\n              defaultValue={service.name}\n              onChange={(e) => {\n                setService((service) => ({ ...service, name: e.target.value }))\n              }}\n            />\n          </div>\n          <div className=\"mb-2\">\n            <CFormLabel htmlFor=\"description\">Description</CFormLabel>\n            <CFormTextarea\n              type=\"text\"\n              id=\"description\"\n              rows=\"3\"\n              defaultValue={service.desc}\n              onChange={(e) => {\n                setService((service) => ({ ...service, desc: e.target.value }))\n              }}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <CFormLabel htmlFor=\"vendor\">Vendor</CFormLabel>\n            <CFormSelect id=\"vendor\" defaultValue={service.vendor_slug_selected}>\n              <option defaultValue=\"rajabiller\">Rajabiller</option>\n            </CFormSelect>\n          </div>\n          <h5>Margin by</h5>\n          <CRow xs={{ cols: 1 }} md={{ cols: 2 }} className=\"mb-3 mt-3 align-items-center\">\n            <CCol>\n              <CFormCheck\n                inline\n                type=\"radio\"\n                name=\"inlineRadioOptions\"\n                id=\"inlineCheckbox1\"\n                value=\"all\"\n                label=\"All (Default)\"\n                defaultChecked={service.margin_by === 'all'}\n              />\n              <CFormCheck\n                inline\n                type=\"radio\"\n                name=\"inlineRadioOptions\"\n                id=\"inlineCheckbox2\"\n                value=\"percent\"\n                readOnly\n                label=\"Percent\"\n                defaultChecked={service.margin_by === 'percent'}\n              />\n              <CFormCheck\n                inline\n                type=\"radio\"\n                name=\"inlineRadioOptions\"\n                id=\"inlineCheckbox3\"\n                value=\"fix\"\n                readOnly\n                label=\"Fix\"\n                defaultChecked={service.margin_by === 'fix_cost'}\n              />\n            </CCol>\n            <CCol>\n              <CFormInput\n                type=\"text\"\n                id=\"nominal\"\n                defaultValue={service.nominal}\n                onChange={(e) => {\n                  setService((service) => ({ ...service, nominal: tryParseInt(e.target.value) }))\n                }}\n              />\n            </CCol>\n          </CRow>\n          <CRow className=\"mb-3 align-items-center\">\n            <CCol xs={5}>Retail Price (after margin added)</CCol>\n            <CCol>\n              <CFormInput type=\"text\" id=\"retail_price\" />\n            </CCol>\n          </CRow>\n          <CFormLabel htmlFor=\"status\">Status</CFormLabel>\n          <CFormSelect\n            id=\"status\"\n            defaultValue={service.active}\n            onChange={(e) => {\n              setService((service) => ({\n                ...service,\n                active: e.target.value === 'true',\n              }))\n            }}\n          >\n            <option value=\"true\">Active</option>\n            <option value=\"false\">Inactive</option>\n          </CFormSelect>\n        </CCol>\n      </CRow>\n      <CRow xs={{ cols: 1 }} md={{ cols: 2 }}>\n        <CCol className=\"d-grid d-md-flex justify-content-md-start mb-2\">\n          <CButton\n            color=\"primary\"\n            variant=\"outline\"\n            onClick={() => {\n              history.push({ pathname: '/products/ppob/details/buy', state: service })\n            }}\n          >\n            Buy\n          </CButton>\n        </CCol>\n        <CCol className=\"d-grid d-md-flex justify-content-md-end mb-3\">\n          <CButton color=\"primary\" disabled>\n            Edit\n          </CButton>\n        </CCol>\n      </CRow>\n    </CForm>\n  ) : (\n    Loader()\n  )\n}\n\nexport default ProductPpobDetails\n"],"sourceRoot":""}