{"version":3,"sources":["views/my_profile/MyProfile.js","helpers/notification_types.js","api/api_notification.js"],"names":["MyProfile","history","useHistory","userState","userDispatch","useContext","UserContext","fullName","setFullname","useState","address","setAddress","className","style","width","orientation","src","user","avatar","avatar_placeholder","htmlFor","type","id","defaultValue","name","onChange","e","target","value","ktp_id","disabled","wa_number","Roles","role","status","color","onClick","push","variant","changes","updateProfile","then","data","ok","createNotification","Services","profileEdit","resp","console","log","store","addNotification","success","message","company","danger","changePassword","clientRegister","clientApprove","clientReject","userCreate","userEdit","nasabahCreate","nasabahEdit","packageCreate","packageEdit","productCreate","productEdit","ppobAllMarginEdit","ppobEdit","Titles","Contents","API_URL","getNotifications","skip","axios","get","headers","authHeader","response","catch","reason","getNotification","sender","service","extra","notification","title","content","reference_id","post"],"mappings":"kGAAA,+GA2IeA,UApHG,KAChB,MAAMC,EAAUC,eACV,UAAEC,EAAF,aAAaC,GAAiBC,qBAAWC,MACxCC,EAAUC,GAAeC,mBAAS,KAClCC,EAASC,GAAcF,mBAAS,IA+BvC,OACE,cAAC,IAAD,CAAYG,UAAU,gCAAtB,SACE,eAAC,IAAD,CAAOC,MAAO,CAAEC,MAAO,SAAvB,UACE,cAAC,IAAD,CACEC,YAAY,MACZC,IAAMb,EAAUc,KAAKC,OAA8Bf,EAAUc,KAAKC,OAApCC,MAEhC,cAAC,IAAD,UACE,eAAC,IAAD,WACE,sBAAKP,UAAU,OAAf,UACE,cAAC,IAAD,CAAYQ,QAAQ,gBAApB,uBACA,cAAC,IAAD,CACEC,KAAK,OACLC,GAAG,gBACHC,aAAcpB,EAAUc,KAAKO,KAC7BC,SAAWC,GAAMlB,EAAYkB,EAAEC,OAAOC,YAG1C,sBAAKhB,UAAU,OAAf,UACE,cAAC,IAAD,CAAYQ,QAAQ,iBAApB,wBACA,cAAC,IAAD,CACEC,KAAK,OACLC,GAAG,iBACHC,aAAcpB,EAAUc,KAAKY,OAC7BC,UAAQ,OAGZ,sBAAKlB,UAAU,OAAf,UACE,cAAC,IAAD,CAAYQ,QAAQ,gBAApB,6BACA,cAAC,IAAD,CACEC,KAAK,OACLC,GAAG,gBACHC,aAAcpB,EAAUc,KAAKc,UAC7BD,UAAQ,OAGZ,sBAAKlB,UAAU,OAAf,UACE,cAAC,IAAD,CAAYQ,QAAQ,eAApB,qBACA,cAAC,IAAD,CACEC,KAAK,OACLC,GAAG,eACHC,aAAcpB,EAAUc,KAAKP,QAC7Be,SAAWC,GAAMf,EAAWe,EAAEC,OAAOC,YAGzC,sBAAKhB,UAAU,OAAf,UACE,cAAC,IAAD,CAAYQ,QAAQ,gBAApB,sBACA,cAAC,IAAD,CACEC,KAAK,OACLC,GAAG,gBACHC,aAAcS,IAAM7B,EAAUc,KAAKgB,MACnCH,UAAQ,OAGZ,sBAAKlB,UAAU,OAAf,UACE,cAAC,IAAD,CAAYQ,QAAQ,cAApB,oBACA,eAAC,IAAD,CACEC,KAAK,OACLC,GAAG,cACHC,aAAcpB,EAAUc,KAAKiB,OAC7BJ,UAAQ,EAJV,UAME,wBAAQF,MAAM,WAAd,sBACA,wBAAQA,MAAM,SAAd,0BAGJ,sBAAKhB,UAAU,iCAAf,UACE,cAAC,IAAD,CAASuB,MAAM,UAAUC,QAhGjB,KAClBnC,EAAQoC,KAAK,6BA+FH,6BAGA,cAAC,IAAD,CAASF,MAAM,UAAUG,QAAQ,UAAUF,QA/FpC,KACjB,MAAMG,EAAU,GACZhC,IACFgC,EAAQf,KAAOjB,GAEbG,IACF6B,EAAQ7B,QAAUA,GAEpB8B,YAAcD,GAASE,MAAMC,IACvBA,EAAKC,IACPC,YAAmBzC,EAAUc,KAAKc,UAAWc,IAASC,YAAa,IAAIL,MAAMM,IAC3EC,QAAQC,IAAI,yBAA2BF,EAAKzB,OAE9C4B,QAAMC,gBAAgBC,YAAQV,EAAKW,UACnCjD,EAAa,CACXiB,KAAM,QACNJ,KAAM,IAAKd,EAAUc,KAAMO,KAAMe,EAAQf,KAAMd,QAAS6B,EAAQ7B,SAChE4C,QAASnD,EAAUmD,WAGrBJ,QAAMC,gBAAgBI,YAAOb,EAAKW,cA2E5B,iC,iCChId,sGAAO,MAAMR,EAAW,CACtBW,eAAgB,kBAChBC,eAAgB,kBAChBC,cAAe,iBACfC,aAAc,gBACdC,WAAY,cACZC,SAAU,YACVC,cAAe,iBACfC,YAAa,eACbjB,YAAa,eACbkB,cAAe,iBACfC,YAAa,eACbC,cAAe,iBACfC,YAAa,eACbC,kBAAmB,uBACnBC,SAAU,aAGCC,EAAS,CACpB,kBAAmB,mBACnB,kBAAmB,wBACnB,iBAAkB,mBAClB,gBAAiB,mBACjB,cAAe,mBACf,YAAa,eACb,iBAAkB,sBAClB,eAAgB,kBAChB,eAAgB,kBAChB,iBAAkB,sBAClB,eAAgB,kBAChB,iBAAkB,sBAClB,eAAgB,kBAChB,uBAAwB,8BACxB,YAAa,gBAGFC,EAAW,CACtB,kBAAmB,0BACnB,kBAAmB,0CACnB,iBAAkB,uCAClB,gBAAiB,uCACjB,cAAe,qBACf,YAAa,uBACb,iBAAkB,wBAClB,eAAgB,2BAChB,eAAgB,yBAChB,iBAAkB,wBAClB,eAAgB,2BAChB,iBAAkB,wBAClB,eAAgB,2BAChB,uBAAwB,8BACxB,YAAa,0B,iCCnDf,8IAIA,MAAMC,EAAU,2BAET,SAASC,EAAiBC,GAC/B,OAAOC,IACJC,IAAIJ,EAAU,4BAA8BE,EAAM,CAAEG,QAASC,gBAC7DrC,MAAMsC,GACEA,EAASrC,OAEjBsC,OAAOC,IACN,GAA+B,MAA3BA,EAAOF,SAAS7C,OAElB,OADAc,QAAQC,IAAIgC,EAAO5B,SACZ,QAKR,SAAS6B,EAAgB5D,GAC9B,OAAOqD,IACJC,IAAIJ,EAAU,uBAAyBlD,EAAI,CAAEuD,QAASC,gBACtDrC,MAAMsC,GACEA,EAASrC,OAEjBsC,OAAOC,IACN,GAA+B,MAA3BA,EAAOF,SAAS7C,OAElB,OADAc,QAAQC,IAAIgC,EAAO5B,SACZ,QAKR,SAAST,EAAmBuC,EAAQC,EAASC,GAClD,MAAMC,EAAe,CACnBH,OAAQA,EACRC,QAASA,EACTG,MAAOjB,IAAOc,GACdI,QAASjB,IAASa,GAAWC,EAC7BI,aAAc,IAGhB,OAAOd,IACJe,KAAKlB,EAAU,sBAAuBc,EAAc,CACnDT,QAASC,gBAEVrC,MAAMsC,GACEA,EAASrC,OAEjBsC,OAAOC,IACNjC,QAAQC,IAAIgC,EAAOF,SAASrC","file":"static/js/15.fc2363c7.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardImage,\n  CContainer,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n} from '@coreui/react'\n\nimport avatar_placeholder from '../../assets/images/avatar_placeholder.png'\nimport { useHistory } from 'react-router-dom'\nimport { store } from 'react-notifications-component'\nimport { danger, success } from '../../helpers/notifications'\nimport { Roles } from '../../helpers/role'\nimport { UserContext } from '../../helpers/user'\nimport { updateProfile } from '../../api/api_profile'\nimport { Services } from '../../helpers/notification_types'\nimport { createNotification } from '../../api/api_notification'\n\nconst MyProfile = () => {\n  const history = useHistory()\n  const { userState, userDispatch } = useContext(UserContext)\n  const [fullName, setFullname] = useState('')\n  const [address, setAddress] = useState('')\n\n  const handleClick = () => {\n    history.push('/profile/change_password')\n  }\n\n  const handleEdit = () => {\n    const changes = {}\n    if (fullName) {\n      changes.name = fullName\n    }\n    if (address) {\n      changes.address = address\n    }\n    updateProfile(changes).then((data) => {\n      if (data.ok) {\n        createNotification(userState.user.wa_number, Services.profileEdit, '').then((resp) => {\n          console.log('Notification created: ' + resp.id)\n        })\n        store.addNotification(success(data.message))\n        userDispatch({\n          type: 'login',\n          user: { ...userState.user, name: changes.name, address: changes.address },\n          company: userState.company,\n        })\n      } else {\n        store.addNotification(danger(data.message))\n      }\n    })\n  }\n\n  return (\n    <CContainer className=\"d-flex justify-content-center\">\n      <CCard style={{ width: '35rem' }}>\n        <CCardImage\n          orientation=\"top\"\n          src={!userState.user.avatar ? avatar_placeholder : userState.user.avatar}\n        />\n        <CCardBody>\n          <CForm>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"fullnameInput\">Full Name</CFormLabel>\n              <CFormInput\n                type=\"text\"\n                id=\"fullnameInput\"\n                defaultValue={userState.user.name}\n                onChange={(e) => setFullname(e.target.value)}\n              />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"ktpnumberInput\">KTP Number</CFormLabel>\n              <CFormInput\n                type=\"text\"\n                id=\"ktpnumberInput\"\n                defaultValue={userState.user.ktp_id}\n                disabled\n              />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"wanumberInput\">WhatsApp Number</CFormLabel>\n              <CFormInput\n                type=\"text\"\n                id=\"wanumberInput\"\n                defaultValue={userState.user.wa_number}\n                disabled\n              />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"addressInput\">Address</CFormLabel>\n              <CFormInput\n                type=\"text\"\n                id=\"addressInput\"\n                defaultValue={userState.user.address}\n                onChange={(e) => setAddress(e.target.value)}\n              />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"positionInput\">Position</CFormLabel>\n              <CFormInput\n                type=\"text\"\n                id=\"positionInput\"\n                defaultValue={Roles[userState.user.role]}\n                disabled\n              />\n            </div>\n            <div className=\"mb-4\">\n              <CFormLabel htmlFor=\"statusInput\">Status</CFormLabel>\n              <CFormSelect\n                type=\"text\"\n                id=\"statusInput\"\n                defaultValue={userState.user.status}\n                disabled\n              >\n                <option value=\"inactive\">Inactive</option>\n                <option value=\"active\">Active</option>\n              </CFormSelect>\n            </div>\n            <div className=\"d-flex justify-content-between\">\n              <CButton color=\"primary\" onClick={handleClick}>\n                Change password\n              </CButton>\n              <CButton color=\"primary\" variant=\"outline\" onClick={handleEdit}>\n                Edit\n              </CButton>\n            </div>\n          </CForm>\n        </CCardBody>\n      </CCard>\n    </CContainer>\n  )\n}\n\nexport default MyProfile\n","export const Services = {\n  changePassword: 'change-password',\n  clientRegister: 'client-register',\n  clientApprove: 'client-approve',\n  clientReject: 'client-reject',\n  userCreate: 'user-create',\n  userEdit: 'user-edit',\n  nasabahCreate: 'nasabah-create',\n  nasabahEdit: 'nasabah-edit',\n  profileEdit: 'profile-edit',\n  packageCreate: 'package-create',\n  packageEdit: 'package-edit',\n  productCreate: 'product-create',\n  productEdit: 'product-edit',\n  ppobAllMarginEdit: 'ppob-all-margin-edit',\n  ppobEdit: 'ppob-edit',\n}\n\nexport const Titles = {\n  'change-password': 'Password changed',\n  'client-register': 'New client registered',\n  'client-approve': 'Request approved',\n  'client-reject': 'Request rejected',\n  'user-create': 'New user created',\n  'user-edit': 'User updated',\n  'nasabah-create': 'New nasabah created',\n  'nasabah-edit': 'Nasabah updated',\n  'profile-edit': 'Profile updated',\n  'package-create': 'New package created',\n  'package-edit': 'Package updated',\n  'product-create': 'New product created',\n  'product-edit': 'Product updated',\n  'ppob-all-margin-edit': 'All services margin updated',\n  'ppob-edit': 'PPOB updated',\n}\n\nexport const Contents = {\n  'change-password': \"User's password changed\",\n  'client-register': 'New client registration request created',\n  'client-approve': 'Client registration request approved',\n  'client-reject': 'Client registration request rejected',\n  'user-create': 'New user created: ',\n  'user-edit': 'User`s info edited: ',\n  'nasabah-create': 'New nasabah created: ',\n  'nasabah-edit': 'Nasabah`s info updated: ',\n  'profile-edit': 'Profile`s info updated',\n  'package-create': 'New package created: ',\n  'package-edit': 'Package`s info updated: ',\n  'product-create': 'New product created: ',\n  'product-edit': 'Product`s info updated: ',\n  'ppob-all-margin-edit': 'All services margin updated',\n  'ppob-edit': 'PPOB`s info updated: ',\n}\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\nimport { Contents, Titles } from '../helpers/notification_types'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getNotifications(skip) {\n  return axios\n    .get(API_URL + '/users/notification?skip=' + skip, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getNotification(id) {\n  return axios\n    .get(API_URL + '/users/notification/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function createNotification(sender, service, extra) {\n  const notification = {\n    sender: sender,\n    service: service,\n    title: Titles[service],\n    content: Contents[service] + extra,\n    reference_id: '',\n  }\n\n  return axios\n    .post(API_URL + '/users/notification', notification, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n"],"sourceRoot":""}