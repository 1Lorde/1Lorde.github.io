{"version":3,"sources":["views/notifications/notification_detail/NotificationDetail.js","helpers/notification_types.js","api/api_notification.js"],"names":["NotificationDetail","t","useTranslation","history","useHistory","id","useParams","notification","setNotification","useState","hasLoaded","setHasLoaded","useEffect","getNotification","then","data","className","style","width","htmlFor","type","readOnly","defaultValue","created","sender","title","content","onClick","push","Loader","Services","changePassword","clientRegister","clientApprove","clientReject","userCreate","userEdit","nasabahCreate","nasabahEdit","profileEdit","packageCreate","packageEdit","productCreate","productEdit","ppobAllMarginEdit","ppobEdit","Titles","Contents","API_URL","getNotifications","skip","axios","get","headers","authHeader","response","catch","reason","status","console","log","message","createNotification","service","extra","reference_id","post"],"mappings":"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","file":"static/js/45.5c8f69e0.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CContainer,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CFormTextarea,\n} from '@coreui/react'\n\nimport { useHistory, useParams } from 'react-router-dom'\nimport Loader from '../../../components/Loader'\nimport { getNotification } from '../../../api/api_notification'\nimport { useTranslation } from 'react-i18next'\n\nconst NotificationDetail = () => {\n  const { t } = useTranslation()\n  const history = useHistory()\n  let { id } = useParams()\n  const [notification, setNotification] = useState()\n  const [hasLoaded, setHasLoaded] = useState()\n\n  useEffect(\n    () => {\n      getNotification(id).then((data) => {\n        setNotification(data.data)\n        setHasLoaded(true)\n      })\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  )\n\n  return hasLoaded ? (\n    <CContainer className=\"d-flex justify-content-center\">\n      <CCard style={{ width: '35rem' }}>\n        <CCardBody>\n          <CForm>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"date\">{t('date')}</CFormLabel>\n              <CFormInput type=\"text\" id=\"date\" readOnly defaultValue={notification.created} />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"sender\">{t('sender')}</CFormLabel>\n              <CFormInput type=\"text\" id=\"sender\" readOnly defaultValue={notification.sender} />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"title\">{t('title')}</CFormLabel>\n              <CFormInput type=\"text\" id=\"title\" readOnly defaultValue={notification.title} />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"content\">{t('content')}</CFormLabel>\n              <CFormTextarea\n                type=\"text\"\n                id=\"content\"\n                readOnly\n                defaultValue={notification.content}\n              />\n            </div>\n            <div className=\"mb-3\">\n              <CButton\n                onClick={() => {\n                  history.push('/notifications')\n                }}\n              >\n                {t('return_back')}\n              </CButton>\n            </div>\n          </CForm>\n        </CCardBody>\n      </CCard>\n    </CContainer>\n  ) : (\n    Loader()\n  )\n}\n\nexport default NotificationDetail\n","export const Services = {\n  changePassword: 'change-password',\n  clientRegister: 'client-register',\n  clientApprove: 'client-approve',\n  clientReject: 'client-reject',\n  userCreate: 'user-create',\n  userEdit: 'user-edit',\n  nasabahCreate: 'nasabah-create',\n  nasabahEdit: 'nasabah-edit',\n  profileEdit: 'profile-edit',\n  packageCreate: 'package-create',\n  packageEdit: 'package-edit',\n  productCreate: 'product-create',\n  productEdit: 'product-edit',\n  ppobAllMarginEdit: 'ppob-all-margin-edit',\n  ppobEdit: 'ppob-edit',\n}\n\nexport const Titles = {\n  'change-password': 'Password changed',\n  'client-register': 'New client registered',\n  'client-approve': 'Request approved',\n  'client-reject': 'Request rejected',\n  'user-create': 'New user created',\n  'user-edit': 'User updated',\n  'nasabah-create': 'New nasabah created',\n  'nasabah-edit': 'Nasabah updated',\n  'profile-edit': 'Profile updated',\n  'package-create': 'New package created',\n  'package-edit': 'Package updated',\n  'product-create': 'New product created',\n  'product-edit': 'Product updated',\n  'ppob-all-margin-edit': 'All services margin updated',\n  'ppob-edit': 'PPOB updated',\n}\n\nexport const Contents = {\n  'change-password': \"User's password changed\",\n  'client-register': 'New client registration request created',\n  'client-approve': 'Client registration request approved',\n  'client-reject': 'Client registration request rejected',\n  'user-create': 'New user created: ',\n  'user-edit': 'User`s info edited: ',\n  'nasabah-create': 'New nasabah created: ',\n  'nasabah-edit': 'Nasabah`s info updated: ',\n  'profile-edit': 'Profile`s info updated',\n  'package-create': 'New package created: ',\n  'package-edit': 'Package`s info updated: ',\n  'product-create': 'New product created: ',\n  'product-edit': 'Product`s info updated: ',\n  'ppob-all-margin-edit': 'All services margin updated',\n  'ppob-edit': 'PPOB`s info updated: ',\n}\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\nimport { Contents, Titles } from '../helpers/notification_types'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getNotifications(skip) {\n  return axios\n    .get(API_URL + '/users/notification?skip=' + skip, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getNotification(id) {\n  return axios\n    .get(API_URL + '/users/notification/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function createNotification(sender, service, extra) {\n  const notification = {\n    sender: sender,\n    service: service,\n    title: Titles[service],\n    content: Contents[service] + extra,\n    reference_id: '',\n  }\n\n  return axios\n    .post(API_URL + '/users/notification', notification, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n"],"sourceRoot":""}