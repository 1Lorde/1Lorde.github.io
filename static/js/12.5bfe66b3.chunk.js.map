{"version":3,"sources":["views/user/user_details/UserDetails.js","helpers/notification_types.js","api/api_notification.js","api/api_user.js"],"names":["UserDetails","userState","useContext","UserContext","history","useHistory","id","useParams","user","setUser","useState","hasLoaded","setHasLoaded","useEffect","getUser","then","profile_data","className","style","width","orientation","src","avatar","avatar_placeholder","htmlFor","type","value","name","onChange","e","target","ktp_id","wa_number","address","role","userRole","AdminRoles","KoperasiRoles","console","log","status","disabled","color","variant","onClick","updateUser","data","ok","store","addNotification","success","message","createNotification","Services","userEdit","resp","push","danger","Loader","changePassword","clientRegister","clientApprove","clientReject","userCreate","nasabahCreate","nasabahEdit","profileEdit","packageCreate","packageEdit","productCreate","productEdit","ppobAllMarginEdit","ppobEdit","Titles","Contents","API_URL","getNotifications","skip","axios","get","headers","authHeader","response","catch","reason","getNotification","sender","service","extra","notification","title","content","reference_id","post","getUsers","searchQuery","sort","put","createUser"],"mappings":"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","file":"static/js/12.5bfe66b3.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardImage,\n  CContainer,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n} from '@coreui/react'\n\nimport avatar_placeholder from '../../../assets/images/avatar_placeholder.png'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { store } from 'react-notifications-component'\nimport { danger, success } from '../../../helpers/notifications'\nimport Loader from '../../../components/Loader'\nimport { AdminRoles, KoperasiRoles } from '../../../helpers/role'\nimport { getUser, updateUser } from '../../../api/api_user'\nimport { createNotification } from '../../../api/api_notification'\nimport { Services } from '../../../helpers/notification_types'\nimport { UserContext } from '../../../helpers/user'\n\nconst UserDetails = () => {\n  const { userState } = useContext(UserContext)\n\n  const history = useHistory()\n  let { id } = useParams()\n  const [user, setUser] = useState()\n  const [hasLoaded, setHasLoaded] = useState()\n\n  function getPositions(userRole) {\n    if (userRole in AdminRoles) {\n      return (\n        <>\n          <option value=\"app-owner\">App Owner</option>\n          <option value=\"product-technical\">Product & Technical</option>\n          <option value=\"marketing-finance\">Marketing & Finance</option>\n        </>\n      )\n    } else if (userRole in KoperasiRoles) {\n      return (\n        <>\n          <option value=\"koperasi-owner\">Koperasi Owner</option>\n          <option value=\"credit-analyst\">Credit & Analyst</option>\n          <option value=\"account-officer\">Account Officer</option>\n        </>\n      )\n    } else {\n      console.log('Not valid role: ' + userRole)\n    }\n  }\n\n  useEffect(\n    () => {\n      getUser(id).then((profile_data) => {\n        setUser(profile_data)\n        setHasLoaded(true)\n      })\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  )\n\n  const handleEdit = () => {\n    console.log(user)\n    updateUser(user).then((data) => {\n      if (data.ok) {\n        store.addNotification(success(data.message))\n        createNotification(userState.user.wa_number, Services.userEdit, user.name).then((resp) => {\n          console.log('Notification created: ' + resp.id)\n        })\n        history.push('/users')\n      } else {\n        store.addNotification(danger(data.message))\n      }\n    })\n  }\n\n  return hasLoaded ? (\n    <CContainer className=\"d-flex justify-content-center\">\n      <CCard style={{ width: '35rem' }}>\n        <CCardImage orientation=\"top\" src={!user.avatar ? avatar_placeholder : user.avatar} />\n        <CCardBody>\n          <CForm>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"fullnameInput\">Full Name</CFormLabel>\n              <CFormInput\n                type=\"text\"\n                id=\"fullnameInput\"\n                value={user.name}\n                onChange={(e) => {\n                  setUser((user) => ({ ...user, name: e.target.value }))\n                }}\n              />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"ktpnumberInput\">KTP Number</CFormLabel>\n              <CFormInput\n                type=\"text\"\n                id=\"ktpnumberInput\"\n                value={user.ktp_id}\n                onChange={(e) => {\n                  setUser((user) => ({ ...user, ktp_id: e.target.value }))\n                }}\n              />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"wanumberInput\">WhatsApp Number</CFormLabel>\n              <CFormInput\n                type=\"text\"\n                id=\"wanumberInput\"\n                value={user.wa_number}\n                onChange={(e) => {\n                  setUser((user) => ({ ...user, wa_number: e.target.value }))\n                }}\n              />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"addressInput\">Address</CFormLabel>\n              <CFormInput\n                type=\"text\"\n                id=\"addressInput\"\n                value={user.address}\n                onChange={(e) => {\n                  setUser((user) => ({ ...user, address: e.target.value }))\n                }}\n              />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"positionInput\">Position</CFormLabel>\n              <CFormSelect\n                aria-label=\"Position\"\n                value={user.role}\n                onChange={(e) => {\n                  setUser((user) => ({ ...user, role: e.target.value }))\n                }}\n              >\n                {getPositions(user.role)}\n              </CFormSelect>\n            </div>\n            <div className=\"mb-4\">\n              <CFormLabel htmlFor=\"statusInput\">Status</CFormLabel>\n              <CFormSelect\n                aria-label=\"Status\"\n                value={user.status}\n                onChange={(e) => {\n                  setUser((user) => ({ ...user, status: e.target.value }))\n                }}\n              >\n                <option disabled>Please select</option>\n                <option value=\"active\">Active</option>\n                <option value=\"inactive\">Inactive</option>\n              </CFormSelect>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n              <CButton color=\"primary\" variant=\"outline\" onClick={handleEdit}>\n                Save changes\n              </CButton>\n            </div>\n          </CForm>\n        </CCardBody>\n      </CCard>\n    </CContainer>\n  ) : (\n    Loader()\n  )\n}\n\nexport default UserDetails\n","export const Services = {\n  changePassword: 'change-password',\n  clientRegister: 'client-register',\n  clientApprove: 'client-approve',\n  clientReject: 'client-reject',\n  userCreate: 'user-create',\n  userEdit: 'user-edit',\n  nasabahCreate: 'nasabah-create',\n  nasabahEdit: 'nasabah-edit',\n  profileEdit: 'profile-edit',\n  packageCreate: 'package-create',\n  packageEdit: 'package-edit',\n  productCreate: 'product-create',\n  productEdit: 'product-edit',\n  ppobAllMarginEdit: 'ppob-all-margin-edit',\n  ppobEdit: 'ppob-edit',\n}\n\nexport const Titles = {\n  'change-password': 'Password changed',\n  'client-register': 'New client registered',\n  'client-approve': 'Request approved',\n  'client-reject': 'Request rejected',\n  'user-create': 'New user created',\n  'user-edit': 'User updated',\n  'nasabah-create': 'New nasabah created',\n  'nasabah-edit': 'Nasabah updated',\n  'profile-edit': 'Profile updated',\n  'package-create': 'New package created',\n  'package-edit': 'Package updated',\n  'product-create': 'New product created',\n  'product-edit': 'Product updated',\n  'ppob-all-margin-edit': 'All services margin updated',\n  'ppob-edit': 'PPOB updated',\n}\n\nexport const Contents = {\n  'change-password': \"User's password changed\",\n  'client-register': 'New client registration request created',\n  'client-approve': 'Client registration request approved',\n  'client-reject': 'Client registration request rejected',\n  'user-create': 'New user created: ',\n  'user-edit': 'User`s info edited: ',\n  'nasabah-create': 'New nasabah created: ',\n  'nasabah-edit': 'Nasabah`s info updated: ',\n  'profile-edit': 'Profile`s info updated',\n  'package-create': 'New package created: ',\n  'package-edit': 'Package`s info updated: ',\n  'product-create': 'New product created: ',\n  'product-edit': 'Product`s info updated: ',\n  'ppob-all-margin-edit': 'All services margin updated',\n  'ppob-edit': 'PPOB`s info updated: ',\n}\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\nimport { Contents, Titles } from '../helpers/notification_types'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getNotifications(skip) {\n  return axios\n    .get(API_URL + '/users/notification?skip=' + skip, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getNotification(id) {\n  return axios\n    .get(API_URL + '/users/notification/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function createNotification(sender, service, extra) {\n  const notification = {\n    sender: sender,\n    service: service,\n    title: Titles[service],\n    content: Contents[service] + extra,\n    reference_id: '',\n  }\n\n  return axios\n    .post(API_URL + '/users/notification', notification, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getUsers(skip, searchQuery, status, role, sort) {\n  return axios\n    .get(\n      API_URL +\n        '/auth/user?search=' +\n        searchQuery +\n        '&status=' +\n        status +\n        '&role=' +\n        role +\n        '&sort=' +\n        sort +\n        '&skip=' +\n        skip,\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.message)\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getUser(id) {\n  return axios\n    .get(API_URL + '/auth/user/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function updateUser(user) {\n  return axios\n    .put(\n      API_URL + '/auth/user/' + user.id,\n      {\n        wa_number: user.wa_number,\n        name: user.name,\n        address: user.address,\n        role: user.role,\n        status: user.status,\n        // avatar: user.avatar,\n        // ktp_image: user.ktp_image,\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function createUser(user) {\n  return axios\n    .post(API_URL + '/auth/user', user, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n"],"sourceRoot":""}