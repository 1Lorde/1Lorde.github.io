{"version":3,"sources":["views/products/product_details/ProductDetails.js","helpers/notification_types.js","api/api_notification.js","helpers/utils.js","api/api_product.js"],"names":["ProductDetails","userState","useContext","UserContext","id","useParams","product","setProduct","useState","hasLoaded","setHasLoaded","useEffect","getProduct","then","data","ok","message","console","log","store","addNotification","danger","error","xs","cols","md","className","htmlFor","value","tipe","disabled","fluid","thumbnail","rounded","src","name","width","height","type","onChange","e","target","rows","description","balance_start","tryParseInt","percent_rate","defaultValue","rate_type","limit_min","limit_max","active","color","variant","onClick","updateProduct","createNotification","user","wa_number","Services","productCreate","resp","success","Loader","changePassword","clientRegister","clientApprove","clientReject","userCreate","userEdit","nasabahCreate","nasabahEdit","profileEdit","packageCreate","packageEdit","productEdit","ppobAllMarginEdit","ppobEdit","Titles","Contents","API_URL","getNotifications","skip","axios","get","headers","authHeader","response","catch","reason","status","getNotification","sender","service","extra","notification","title","content","reference_id","post","text","parsed","parseInt","isNaN","getProducts","searchQuery","createProduct","changes","put","credit_simulation_id"],"mappings":"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","file":"static/js/8.b812ce72.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CFormTextarea,\n  CImage,\n  CRow,\n} from '@coreui/react'\nimport Loader from '../../../components/Loader'\nimport { store } from 'react-notifications-component'\nimport { danger, success } from '../../../helpers/notifications'\nimport { useParams } from 'react-router-dom'\nimport { getProduct, updateProduct } from '../../../api/api_product'\nimport { tryParseInt } from '../../../helpers/utils'\nimport { createNotification } from '../../../api/api_notification'\nimport { Services } from '../../../helpers/notification_types'\nimport { UserContext } from '../../../helpers/user'\n\nconst ProductDetails = () => {\n  const { userState } = useContext(UserContext)\n  const { id } = useParams()\n  const [product, setProduct] = useState()\n  const [hasLoaded, setHasLoaded] = useState()\n\n  useEffect(\n    () => {\n      getProduct(id).then((data) => {\n        if (data.ok) {\n          setProduct(data.data)\n          setHasLoaded(true)\n        } else {\n          if (data.message) {\n            console.log(data)\n            store.addNotification(danger(data.message))\n          } else {\n            console.log(data)\n            store.addNotification(danger(data.error))\n          }\n        }\n      })\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  )\n\n  function handleEdit() {\n    console.log(product)\n    updateProduct(product).then((data) => {\n      console.log(data)\n      if (data.ok) {\n        createNotification(\n          userState.user.wa_number,\n          Services.productCreate,\n          product.name + ' (' + product.tipe + ')',\n        ).then((resp) => {\n          console.log('Notification created: ' + resp.id)\n        })\n        store.addNotification(success('Product updated'))\n      } else {\n        store.addNotification(danger(data.message))\n      }\n    })\n  }\n\n  return hasLoaded ? (\n    <CForm>\n      <CRow xs={{ cols: 1 }} md={{ cols: 2 }} className=\"mb-4\">\n        <CCol>\n          <CFormLabel htmlFor=\"type\">Type of Product</CFormLabel>\n          <CFormSelect id=\"type\" value={product.tipe} disabled>\n            <option value=\"savings\">Savings</option>\n            <option value=\"credits\">Credits</option>\n          </CFormSelect>\n          <CContainer fluid className=\"d-flex justify-content-center mb-5\">\n            <CImage\n              thumbnail\n              rounded\n              src={'https://via.placeholder.com/550x390.png?text=' + product.name}\n              width={500}\n              height={500}\n              className=\"mt-5\"\n            />\n          </CContainer>\n        </CCol>\n        <CCol>\n          <div className=\"mb-2\">\n            <CFormLabel htmlFor=\"name\">Products Name</CFormLabel>\n            <CFormInput\n              type=\"text\"\n              id=\"name\"\n              value={product.name}\n              onChange={(e) => {\n                setProduct((product) => ({ ...product, name: e.target.value }))\n              }}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <CFormLabel htmlFor=\"description\">Description</CFormLabel>\n            <CFormTextarea\n              type=\"text\"\n              id=\"description\"\n              rows=\"3\"\n              value={product.description}\n              onChange={(e) => {\n                setProduct((product) => ({ ...product, description: e.target.value }))\n              }}\n            />\n          </div>\n\n          <h5>Balance</h5>\n          <div className=\"ms-4 mb-2\">\n            <CFormLabel htmlFor=\"start\">Start</CFormLabel>\n            <CFormInput\n              type=\"number\"\n              id=\"start\"\n              value={product.balance_start}\n              onChange={(e) => {\n                setProduct((product) => ({\n                  ...product,\n                  balance_start: tryParseInt(e.target.value),\n                }))\n              }}\n            />\n          </div>\n          <div className=\"ms-4 mb-2\">\n            <CFormLabel htmlFor=\"min\">Minimal</CFormLabel>\n            <CFormInput type=\"number\" id=\"min\" />\n          </div>\n\n          <h5>Rate</h5>\n          <CRow className=\"ms-3 mb-3\">\n            <CCol xs={4}>\n              <CFormLabel htmlFor=\"percent_rate\">Percentage</CFormLabel>\n              <CFormInput\n                type=\"number\"\n                id=\"percent_rate\"\n                value={product.percent_rate}\n                onChange={(e) => {\n                  setProduct((product) => ({\n                    ...product,\n                    percent_rate: tryParseInt(e.target.value),\n                  }))\n                }}\n              />\n            </CCol>\n            <CCol>\n              <CFormLabel htmlFor=\"rate_type\">Type</CFormLabel>\n              <CFormSelect\n                id=\"rate_type\"\n                defaultValue={product.rate_type}\n                onChange={(e) => {\n                  setProduct((product) => ({\n                    ...product,\n                    rate_type: e.target.value,\n                  }))\n                }}\n              >\n                <option value=\"fix\">Fix</option>\n                <option value=\"efektif\">Efektif</option>\n                <option value=\"syaria\">Syaria</option>\n              </CFormSelect>\n            </CCol>\n          </CRow>\n\n          <h5>Requirements</h5>\n          <CRow className=\"mb-3 ms-3\">\n            <CCol>\n              <CFormLabel htmlFor=\"limit_min\">Limit Min</CFormLabel>\n              <CFormInput\n                type=\"number\"\n                id=\"limit_min\"\n                value={product.limit_min}\n                onChange={(e) => {\n                  setProduct((product) => ({\n                    ...product,\n                    limit_min: tryParseInt(e.target.value),\n                  }))\n                }}\n              />\n            </CCol>\n            <CCol>\n              <CFormLabel htmlFor=\"limit_max\">Limit Max</CFormLabel>\n              <CFormInput\n                type=\"number\"\n                id=\"limit_max\"\n                value={product.limit_max}\n                onChange={(e) => {\n                  setProduct((product) => ({\n                    ...product,\n                    limit_max: tryParseInt(e.target.value),\n                  }))\n                }}\n              />\n            </CCol>\n          </CRow>\n\n          <CFormLabel htmlFor=\"status\">Status</CFormLabel>\n          <CFormSelect\n            id=\"status\"\n            value={product.active}\n            onChange={(e) => {\n              setProduct((product) => ({\n                ...product,\n                active: e.target.value === 'true',\n              }))\n            }}\n          >\n            <option value=\"true\">Active</option>\n            <option value=\"false\">Inactive</option>\n          </CFormSelect>\n        </CCol>\n      </CRow>\n      <CRow xs={{ cols: 1 }} md={{ cols: 2 }}>\n        <CCol className=\"d-grid d-md-flex justify-content-md-start mb-3\">\n          <CButton color=\"primary\" variant=\"outline\">\n            Register Nasabah to this Product\n          </CButton>\n        </CCol>\n        <CCol className=\"d-grid d-md-flex justify-content-md-end mb-3\" onClick={handleEdit}>\n          <CButton color=\"primary\">Edit</CButton>\n        </CCol>\n      </CRow>\n    </CForm>\n  ) : (\n    Loader()\n  )\n}\n\nexport default ProductDetails\n","export const Services = {\n  changePassword: 'change-password',\n  clientRegister: 'client-register',\n  clientApprove: 'client-approve',\n  clientReject: 'client-reject',\n  userCreate: 'user-create',\n  userEdit: 'user-edit',\n  nasabahCreate: 'nasabah-create',\n  nasabahEdit: 'nasabah-edit',\n  profileEdit: 'profile-edit',\n  packageCreate: 'package-create',\n  packageEdit: 'package-edit',\n  productCreate: 'product-create',\n  productEdit: 'product-edit',\n  ppobAllMarginEdit: 'ppob-all-margin-edit',\n  ppobEdit: 'ppob-edit',\n}\n\nexport const Titles = {\n  'change-password': 'Password changed',\n  'client-register': 'New client registered',\n  'client-approve': 'Request approved',\n  'client-reject': 'Request rejected',\n  'user-create': 'New user created',\n  'user-edit': 'User updated',\n  'nasabah-create': 'New nasabah created',\n  'nasabah-edit': 'Nasabah updated',\n  'profile-edit': 'Profile updated',\n  'package-create': 'New package created',\n  'package-edit': 'Package updated',\n  'product-create': 'New product created',\n  'product-edit': 'Product updated',\n  'ppob-all-margin-edit': 'All services margin updated',\n  'ppob-edit': 'PPOB updated',\n}\n\nexport const Contents = {\n  'change-password': \"User's password changed\",\n  'client-register': 'New client registration request created',\n  'client-approve': 'Client registration request approved',\n  'client-reject': 'Client registration request rejected',\n  'user-create': 'New user created: ',\n  'user-edit': 'User`s info edited: ',\n  'nasabah-create': 'New nasabah created: ',\n  'nasabah-edit': 'Nasabah`s info updated: ',\n  'profile-edit': 'Profile`s info updated',\n  'package-create': 'New package created: ',\n  'package-edit': 'Package`s info updated: ',\n  'product-create': 'New product created: ',\n  'product-edit': 'Product`s info updated: ',\n  'ppob-all-margin-edit': 'All services margin updated',\n  'ppob-edit': 'PPOB`s info updated: ',\n}\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\nimport { Contents, Titles } from '../helpers/notification_types'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getNotifications(skip) {\n  return axios\n    .get(API_URL + '/users/notification?skip=' + skip, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getNotification(id) {\n  return axios\n    .get(API_URL + '/users/notification/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function createNotification(sender, service, extra) {\n  const notification = {\n    sender: sender,\n    service: service,\n    title: Titles[service],\n    content: Contents[service] + extra,\n    reference_id: '',\n  }\n\n  return axios\n    .post(API_URL + '/users/notification', notification, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n","export function tryParseInt(text) {\n  const parsed = parseInt(text)\n  if (isNaN(parsed)) {\n    return ''\n  }\n  return parsed\n}\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getProducts(searchQuery, type) {\n  return axios\n    .get(API_URL + '/transaction/products?search=' + searchQuery + '&tipe=' + type, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function getProduct(id) {\n  return axios\n    .get(API_URL + '/transaction/products/' + id, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function createProduct(product) {\n  return axios\n    .post(API_URL + '/transaction/products', product, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n\nexport function updateProduct(product) {\n  const changes = {\n    name: product.name,\n    description: product.description,\n    balance_start: product.balance_start,\n    percent_rate: product.percent_rate,\n    limit_min: product.limit_min,\n    limit_max: product.limit_max,\n    active: product.active,\n    rate_type: product.rate_type,\n  }\n\n  return axios\n    .put(API_URL + '/transaction/products/' + product.credit_simulation_id, changes, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n"],"sourceRoot":""}