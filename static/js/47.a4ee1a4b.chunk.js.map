{"version":3,"sources":["views/vendor/vendor_details/VendorDetails.js","api/api_vendors.js"],"names":["VendorDetails","history","useHistory","t","useTranslation","id","useParams","vendor","setVendor","useState","hasLoaded","setHasLoaded","useEffect","getVendor","then","data","ok","message","store","addNotification","success","console","log","danger","error","className","style","width","htmlFor","type","defaultValue","name","onChange","e","target","value","desc","api_base_url","status","color","variant","onClick","updateVendor","push","Loader","API_URL","getVendors","searchQuery","axios","get","headers","authHeader","response","catch","reason","put","createVendor","post","slug","api_credential_params","username","api_username","api_key","uid","pin"],"mappings":"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","file":"static/js/47.a4ee1a4b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CContainer,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CFormTextarea,\n} from '@coreui/react'\nimport Loader from '../../../components/Loader'\nimport { store } from 'react-notifications-component'\nimport { danger, success } from '../../../helpers/notifications'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { getVendor, updateVendor } from '../../../api/api_vendors'\nimport { useTranslation } from 'react-i18next'\n\nconst VendorDetails = () => {\n  const history = useHistory()\n  const { t } = useTranslation()\n  const { id } = useParams()\n  const [vendor, setVendor] = useState()\n  const [hasLoaded, setHasLoaded] = useState()\n\n  useEffect(\n    () => {\n      getVendor(id).then((data) => {\n        if (data.ok) {\n          setVendor(data.vendor)\n          setHasLoaded(true)\n        } else {\n          if (data.message) {\n            store.addNotification(success(data.message))\n          } else {\n            console.log(data)\n            store.addNotification(danger(data.error))\n          }\n        }\n      })\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  )\n\n  function handleEdit() {\n    console.log(vendor)\n    updateVendor(vendor).then((data) => {\n      console.log(data)\n      if (data.ok) {\n        store.addNotification(success('Vendor updated'))\n        history.push('/ppob/vendors')\n      } else {\n        store.addNotification(danger(data.message))\n      }\n    })\n  }\n\n  return hasLoaded ? (\n    <CContainer className=\"d-flex justify-content-center\">\n      <CCard style={{ width: '35rem' }}>\n        <CCardBody>\n          <CForm>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"fullnameInput\">{t('company_name')}</CFormLabel>\n              <CFormInput\n                type=\"text\"\n                id=\"nameInput\"\n                defaultValue={vendor.name}\n                onChange={(e) => {\n                  setVendor((vendor) => ({ ...vendor, name: e.target.value }))\n                }}\n              />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"descInput\">{t('description')}</CFormLabel>\n              <CFormTextarea\n                type=\"text\"\n                id=\"descInput\"\n                defaultValue={vendor.desc}\n                onChange={(e) => {\n                  setVendor((vendor) => ({ ...vendor, desc: e.target.value }))\n                }}\n              />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"apiInput\">API URL</CFormLabel>\n              <CFormInput\n                type=\"text\"\n                id=\"apiInput\"\n                defaultValue={vendor.api_base_url}\n                onChange={(e) => {\n                  setVendor((vendor) => ({ ...vendor, api_base_url: e.target.value }))\n                }}\n              />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"statusInput\">{t('status')}</CFormLabel>\n              <CFormSelect\n                type=\"text\"\n                id=\"statusInput\"\n                defaultValue={vendor.status}\n                onChange={(e) => {\n                  setVendor((vendor) => ({ ...vendor, status: e.target.value }))\n                }}\n              >\n                <option value=\"NOT-ACTIVE\">Inactive</option>\n                <option value=\"ACTIVE\">Active</option>\n              </CFormSelect>\n            </div>\n            <div className=\"d-flex justify-content-between\">\n              <CButton color=\"primary\" variant=\"outline\" onClick={handleEdit}>\n                {t('edit')}\n              </CButton>\n            </div>\n          </CForm>\n        </CCardBody>\n      </CCard>\n    </CContainer>\n  ) : (\n    Loader()\n  )\n}\n\nexport default VendorDetails\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getVendors(searchQuery, status) {\n  return axios\n    .get(API_URL + '/transaction/vendors?search=' + searchQuery + '&status=' + status, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function getVendor(id) {\n  return axios\n    .get(API_URL + '/transaction/vendors/' + id, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function updateVendor(vendor) {\n  return axios\n    .put(\n      API_URL + '/transaction/vendors/' + vendor.id,\n      {\n        name: vendor.name,\n        desc: vendor.desc,\n        api_base_url: vendor.api_base_url,\n        status: vendor.status,\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function createVendor(vendor) {\n  return axios\n    .post(\n      API_URL + '/transaction/vendors',\n      {\n        name: vendor.name,\n        slug: vendor.type,\n        desc: vendor.desc,\n        api_base_url: vendor.api_base_url,\n        api_credential_params:\n          vendor.type === 'mobilepulsa'\n            ? {\n                username: vendor.api_username,\n                api_key: vendor.api_key,\n              }\n            : { uid: vendor.api_username, pin: vendor.api_key },\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n"],"sourceRoot":""}