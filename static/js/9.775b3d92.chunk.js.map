{"version":3,"sources":["views/packages/package_create/PackageCreate.js","api/api_package.js","helpers/utils.js"],"names":["PackageCreate","history","useHistory","pack","setPack","useState","validated","setValidated","className","style","width","orientation","src","name","noValidate","onSubmit","event","preventDefault","form","currentTarget","checkValidity","stopPropagation","console","log","createPackage","then","data","ok","store","addNotification","success","push","message","danger","error","htmlFor","type","id","required","onChange","e","target","value","description","slug","price","monthly","tryParseInt","yearly","quota","account_officer","nasabah","color","API_URL","getPackages","axios","get","headers","apiHeader","response","catch","reason","getAdminPackages","authHeader","getPackage","updatePackage","put","price_monthly","price_yearly","quota_AO","quota_nasabah","active","post","text","parsed","parseInt","isNaN"],"mappings":"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","file":"static/js/9.775b3d92.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardImage,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CRow,\n} from '@coreui/react'\n\nimport { useHistory } from 'react-router-dom'\nimport { store } from 'react-notifications-component'\nimport { danger, success } from '../../../helpers/notifications'\nimport { createPackage } from '../../../api/api_package'\nimport { tryParseInt } from '../../../helpers/utils'\n\nconst PackageCreate = () => {\n  const history = useHistory()\n  const [pack, setPack] = useState({})\n  const [validated, setValidated] = useState(false)\n\n  function handleCreate(event) {\n    event.preventDefault()\n\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.stopPropagation()\n    }\n    setValidated(true)\n\n    if (form.checkValidity()) {\n      console.log(pack)\n      createPackage(pack).then((data) => {\n        if (data.ok) {\n          store.addNotification(success('Package ' + pack.name + ' created successfully.'))\n          history.push('/packages')\n        } else {\n          if (data.message) {\n            console.log(data)\n            store.addNotification(danger(data.message))\n          } else {\n            console.log(data)\n            store.addNotification(danger(data.error))\n          }\n        }\n      })\n    }\n  }\n\n  return (\n    <CContainer className=\"d-flex justify-content-center\">\n      <CCard style={{ width: '35rem' }}>\n        <CCardImage\n          orientation=\"top\"\n          src={\n            'https://via.placeholder.com/550x390.png?text=' +\n            (pack.name ? pack.name : 'New package')\n          }\n        />\n        <CCardBody>\n          <CForm noValidate validated={validated} onSubmit={handleCreate}>\n            <CRow>\n              <CCol>\n                <div className=\"mb-3\">\n                  <CFormLabel htmlFor=\"name\">Name</CFormLabel>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"name\"\n                    required\n                    onChange={(e) => {\n                      setPack((pack) => ({ ...pack, name: e.target.value }))\n                    }}\n                  />\n                </div>\n                <div className=\"mb-3\">\n                  <CFormLabel htmlFor=\"description\">Description</CFormLabel>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"description\"\n                    onChange={(e) => {\n                      setPack((pack) => ({ ...pack, description: e.target.value }))\n                    }}\n                  />\n                </div>\n                <div className=\"mb-3\">\n                  <CFormLabel htmlFor=\"slug\">Slug</CFormLabel>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"slug\"\n                    required\n                    onChange={(e) => {\n                      setPack((pack) => ({ ...pack, slug: e.target.value }))\n                    }}\n                  />\n                </div>\n                <div className=\"pt-1\">\n                  <hr />\n                  <h3>Price</h3>\n                  <CRow className=\"pt-2\">\n                    <CCol>\n                      <div className=\"mb-3\">\n                        <CFormLabel htmlFor=\"monthly\">Monthly</CFormLabel>\n                        <CFormInput\n                          type=\"number\"\n                          id=\"monthly\"\n                          required\n                          onChange={(e) => {\n                            setPack((pack) => ({\n                              ...pack,\n                              price: {\n                                ...pack.price,\n                                monthly: tryParseInt(e.target.value),\n                              },\n                            }))\n                          }}\n                        />\n                      </div>\n                    </CCol>\n                    <CCol>\n                      <div className=\"mb-3\">\n                        <CFormLabel htmlFor=\"yearly\">Yearly</CFormLabel>\n                        <CFormInput\n                          type=\"number\"\n                          id=\"yearly\"\n                          required\n                          onChange={(e) => {\n                            setPack((pack) => ({\n                              ...pack,\n                              price: {\n                                ...pack.price,\n                                yearly: tryParseInt(e.target.value),\n                              },\n                            }))\n                          }}\n                        />\n                      </div>\n                    </CCol>\n                  </CRow>\n                </div>\n\n                <div>\n                  <hr />\n                  <h3>Quota</h3>\n                  <CRow className=\"pt-2\">\n                    <CCol>\n                      <div className=\"mb-3\">\n                        <CFormLabel htmlFor=\"account_officer\">Account Officer</CFormLabel>\n                        <CFormInput\n                          type=\"number\"\n                          id=\"account_officer\"\n                          required\n                          onChange={(e) => {\n                            setPack((pack) => ({\n                              ...pack,\n                              quota: {\n                                ...pack.quota,\n                                account_officer: tryParseInt(e.target.value),\n                              },\n                            }))\n                          }}\n                        />\n                      </div>\n                    </CCol>\n                    <CCol>\n                      <div className=\"mb-3\">\n                        <CFormLabel htmlFor=\"nasabah\">Nasabah</CFormLabel>\n                        <CFormInput\n                          type=\"number\"\n                          id=\"nasabah\"\n                          required\n                          onChange={(e) => {\n                            setPack((pack) => ({\n                              ...pack,\n                              quota: {\n                                ...pack.quota,\n                                nasabah: tryParseInt(e.target.value),\n                              },\n                            }))\n                          }}\n                        />\n                      </div>\n                    </CCol>\n                  </CRow>\n                </div>\n              </CCol>\n            </CRow>\n            <CRow className=\"mb-3\">\n              <div className=\"d-flex justify-content-end\">\n                <CButton color=\"primary\" type=\"submit\">\n                  Create\n                </CButton>\n              </div>\n            </CRow>\n          </CForm>\n        </CCardBody>\n      </CCard>\n    </CContainer>\n  )\n}\nexport default PackageCreate\n","import axios from 'axios'\nimport { apiHeader, authHeader } from './requestHeaders'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getPackages() {\n  return axios\n    .get(API_URL + '/users/packages', { headers: apiHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function getAdminPackages() {\n  return axios\n    .get(API_URL + '/users/admin/packages', { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function getPackage(id) {\n  return axios\n    .get(API_URL + '/users/admin/packages/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function updatePackage(id, pack) {\n  return axios\n    .put(\n      API_URL + '/users/admin/packages/' + id,\n      {\n        name: pack.name,\n        slug: pack.slug,\n        description: pack.description,\n        price_monthly: pack.price.monthly,\n        price_yearly: pack.price.yearly,\n        quota_AO: pack.quota.account_officer,\n        quota_nasabah: pack.quota.nasabah,\n        active: pack.active === 'true',\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function createPackage(pack) {\n  return axios\n    .post(\n      API_URL + '/users/admin/packages',\n      {\n        name: pack.name,\n        slug: pack.slug,\n        description: pack.description,\n        price_monthly: pack.price.monthly,\n        price_yearly: pack.price.yearly,\n        quota_AO: pack.quota.account_officer,\n        quota_nasabah: pack.quota.nasabah,\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n","export function tryParseInt(text) {\n  const parsed = parseInt(text)\n  if (isNaN(parsed)) {\n    return ''\n  }\n  return parsed\n}\n"],"sourceRoot":""}