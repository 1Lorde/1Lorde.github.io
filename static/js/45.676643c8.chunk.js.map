{"version":3,"sources":["views/packages/package_detail/PackageDetail.js","helpers/notification_types.js","api/api_notification.js","api/api_package.js"],"names":["PackageDetail","t","useTranslation","userState","useContext","UserContext","history","useHistory","id","useParams","pack","setPack","useState","hasLoaded","setHasLoaded","useEffect","getPackage","then","data","ok","console","log","message","store","addNotification","danger","error","className","style","width","orientation","src","name","htmlFor","type","required","placeholder","value","onChange","e","target","description","slug","active","price","monthly","parseInt","yearly","quota","account_officer","nasabah","color","onClick","updatePackage","createNotification","user","wa_number","Services","packageEdit","resp","success","push","Loader","changePassword","clientRegister","clientApprove","clientReject","userCreate","userEdit","nasabahCreate","nasabahEdit","profileEdit","packageCreate","productCreate","productEdit","ppobAllMarginEdit","ppobEdit","Titles","Contents","API_URL","process","getNotifications","skip","axios","get","headers","authHeader","response","catch","reason","status","getNotification","sender","service","extra","notification","title","content","reference_id","post","getPackages","apiHeader","getAdminPackages","put","price_monthly","price_yearly","quota_AO","quota_nasabah","createPackage"],"mappings":"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","file":"static/js/45.676643c8.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardImage,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CRow,\n} from '@coreui/react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport Loader from '../../../components/Loader'\nimport { store } from 'react-notifications-component'\nimport { danger, success } from '../../../helpers/notifications'\nimport { getPackage, updatePackage } from '../../../api/api_package'\nimport { createNotification } from '../../../api/api_notification'\nimport { Services } from '../../../helpers/notification_types'\nimport { UserContext } from '../../../helpers/user'\nimport { useTranslation } from 'react-i18next'\n\nconst PackageDetail = () => {\n  const { t } = useTranslation()\n  const { userState } = useContext(UserContext)\n  const history = useHistory()\n  let { id } = useParams()\n  const [pack, setPack] = useState({})\n  const [hasLoaded, setHasLoaded] = useState()\n\n  useEffect(\n    () => {\n      getPackage(id).then((data) => {\n        if (data.ok) {\n          setPack(data.data)\n          console.log(data.data)\n          setHasLoaded(true)\n        } else {\n          if (data.message) {\n            console.log(data)\n            store.addNotification(danger(data.message))\n          } else {\n            console.log(data)\n            store.addNotification(danger(data.error))\n          }\n        }\n      })\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  )\n\n  useEffect(() => {\n    console.log(pack)\n  }, [pack])\n\n  const handleEdit = () => {\n    console.log(pack)\n    updatePackage(pack.id, pack).then((data) => {\n      if (data.ok) {\n        createNotification(userState.user.wa_number, Services.packageEdit, pack.name).then(\n          (resp) => {\n            console.log('Notification created: ' + resp.id)\n          },\n        )\n        store.addNotification(success(t('notifications.package_update', { name: pack.name })))\n        history.push('/packages')\n      } else {\n        if (data.message) {\n          console.log(data)\n          store.addNotification(danger(data.message))\n        } else {\n          console.log(data)\n          store.addNotification(danger(data.error))\n        }\n      }\n    })\n  }\n\n  return hasLoaded ? (\n    <CContainer className=\"d-flex justify-content-center\">\n      <CCard style={{ width: '35rem' }}>\n        <CCardImage\n          orientation=\"top\"\n          src={\n            'https://via.placeholder.com/550x390.png?text=' + (pack.name ? pack.name : t('no_name'))\n          }\n        />\n        <CCardBody>\n          <CForm>\n            <CRow>\n              <CCol>\n                <div className=\"mb-3\">\n                  <CFormLabel htmlFor=\"name\">{t('name')}</CFormLabel>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"name\"\n                    required\n                    placeholder={t('no_data')}\n                    value={pack.name}\n                    onChange={(e) => {\n                      setPack((pack) => ({ ...pack, name: e.target.value }))\n                    }}\n                  />\n                </div>\n                <div className=\"mb-3\">\n                  <CFormLabel htmlFor=\"description\">{t('description')}</CFormLabel>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"description\"\n                    placeholder={t('no_data')}\n                    value={pack.description}\n                    onChange={(e) => {\n                      setPack((pack) => ({ ...pack, description: e.target.value }))\n                    }}\n                  />\n                </div>\n                <div className=\"mb-3\">\n                  <CFormLabel htmlFor=\"slug\">{t('slug')}</CFormLabel>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"slug\"\n                    required\n                    placeholder={t('no_data')}\n                    value={pack.slug}\n                    onChange={(e) => {\n                      setPack((pack) => ({ ...pack, slug: e.target.value }))\n                    }}\n                  />\n                </div>\n                <div className=\"mb-3\">\n                  <CFormLabel htmlFor=\"status\">{t('status')}</CFormLabel>\n                  <CFormSelect\n                    id=\"status\"\n                    value={pack.active}\n                    onChange={(e) => {\n                      setPack((pack) => ({ ...pack, active: e.target.value }))\n                    }}\n                  >\n                    <option value=\"true\">{t('active')}</option>\n                    <option value=\"false\">{t('inactive')}</option>\n                  </CFormSelect>\n                </div>\n                <div className=\"pt-1\">\n                  <hr />\n                  <h3>{t('price')}</h3>\n                  <CRow className=\"pt-2\">\n                    <CCol>\n                      <div className=\"mb-3\">\n                        <CFormLabel htmlFor=\"monthly\">{t('monthly')}</CFormLabel>\n                        <CFormInput\n                          type=\"number\"\n                          id=\"monthly\"\n                          required\n                          placeholder={t('no_data')}\n                          value={pack.price.monthly}\n                          onChange={(e) => {\n                            setPack((pack) => ({\n                              ...pack,\n                              price: {\n                                ...pack.price,\n                                monthly: parseInt(e.target.value),\n                              },\n                            }))\n                          }}\n                        />\n                      </div>\n                    </CCol>\n                    <CCol>\n                      <div className=\"mb-3\">\n                        <CFormLabel htmlFor=\"yearly\">{t('yearly')}</CFormLabel>\n                        <CFormInput\n                          type=\"number\"\n                          id=\"yearly\"\n                          required\n                          placeholder={t('no_data')}\n                          value={pack.price.yearly}\n                          onChange={(e) => {\n                            setPack((pack) => ({\n                              ...pack,\n                              price: {\n                                ...pack.price,\n                                yearly: parseInt(e.target.value),\n                              },\n                            }))\n                          }}\n                        />\n                      </div>\n                    </CCol>\n                  </CRow>\n                </div>\n\n                <div>\n                  <hr />\n                  <h3>{t('quota')}</h3>\n                  <CRow className=\"pt-2\">\n                    <CCol>\n                      <div className=\"mb-3\">\n                        <CFormLabel htmlFor=\"account_officer\">{t('account_officer')}</CFormLabel>\n                        <CFormInput\n                          type=\"number\"\n                          id=\"account_officer\"\n                          required\n                          placeholder={t('no_data')}\n                          value={pack.quota.account_officer}\n                          onChange={(e) => {\n                            setPack((pack) => ({\n                              ...pack,\n                              quota: {\n                                ...pack.quota,\n                                account_officer: parseInt(e.target.value),\n                              },\n                            }))\n                          }}\n                        />\n                      </div>\n                    </CCol>\n                    <CCol>\n                      <div className=\"mb-3\">\n                        <CFormLabel htmlFor=\"nasabah\">{t('nasabah')}</CFormLabel>\n                        <CFormInput\n                          type=\"number\"\n                          id=\"nasabah\"\n                          required\n                          placeholder={t('no_data')}\n                          value={pack.quota.nasabah}\n                          onChange={(e) => {\n                            setPack((pack) => ({\n                              ...pack,\n                              quota: {\n                                ...pack.quota,\n                                nasabah: parseInt(e.target.value),\n                              },\n                            }))\n                          }}\n                        />\n                      </div>\n                    </CCol>\n                  </CRow>\n                </div>\n              </CCol>\n            </CRow>\n            <CRow className=\"mt-3 mb-1\">\n              <div className=\"d-flex justify-content-end\">\n                <CButton color=\"primary\" onClick={handleEdit}>\n                  {t('edit')}\n                </CButton>\n              </div>\n            </CRow>\n          </CForm>\n        </CCardBody>\n      </CCard>\n    </CContainer>\n  ) : (\n    Loader()\n  )\n}\n\nexport default PackageDetail\n","export const Services = {\n  changePassword: 'change-password',\n  clientRegister: 'client-register',\n  clientApprove: 'client-approve',\n  clientReject: 'client-reject',\n  userCreate: 'user-create',\n  userEdit: 'user-edit',\n  nasabahCreate: 'nasabah-create',\n  nasabahEdit: 'nasabah-edit',\n  profileEdit: 'profile-edit',\n  packageCreate: 'package-create',\n  packageEdit: 'package-edit',\n  productCreate: 'product-create',\n  productEdit: 'product-edit',\n  ppobAllMarginEdit: 'ppob-all-margin-edit',\n  ppobEdit: 'ppob-edit',\n}\n\nexport const Titles = {\n  'change-password': 'Password changed',\n  'client-register': 'New client registered',\n  'client-approve': 'Request approved',\n  'client-reject': 'Request rejected',\n  'user-create': 'New user created',\n  'user-edit': 'User updated',\n  'nasabah-create': 'New nasabah created',\n  'nasabah-edit': 'Nasabah updated',\n  'profile-edit': 'Profile updated',\n  'package-create': 'New package created',\n  'package-edit': 'Package updated',\n  'product-create': 'New product created',\n  'product-edit': 'Product updated',\n  'ppob-all-margin-edit': 'All services margin updated',\n  'ppob-edit': 'PPOB updated',\n}\n\nexport const Contents = {\n  'change-password': \"User's password changed\",\n  'client-register': 'New client registration request created',\n  'client-approve': 'Client registration request approved',\n  'client-reject': 'Client registration request rejected',\n  'user-create': 'New user created: ',\n  'user-edit': 'User`s info edited: ',\n  'nasabah-create': 'New nasabah created: ',\n  'nasabah-edit': 'Nasabah`s info updated: ',\n  'profile-edit': 'Profile`s info updated',\n  'package-create': 'New package created: ',\n  'package-edit': 'Package`s info updated: ',\n  'product-create': 'New product created: ',\n  'product-edit': 'Product`s info updated: ',\n  'ppob-all-margin-edit': 'All services margin updated',\n  'ppob-edit': 'PPOB`s info updated: ',\n}\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\nimport { Contents, Titles } from '../helpers/notification_types'\n\nconst API_URL = process.env.REACT_APP_API_URL\n\nexport function getNotifications(skip) {\n  return axios\n    .get(API_URL + '/users/notification?skip=' + skip, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getNotification(id) {\n  return axios\n    .get(API_URL + '/users/notification/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function createNotification(sender, service, extra) {\n  const notification = {\n    sender: sender,\n    service: service,\n    title: Titles[service],\n    content: Contents[service] + extra,\n    reference_id: '',\n  }\n\n  return axios\n    .post(API_URL + '/users/notification', notification, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n","import axios from 'axios'\nimport { apiHeader, authHeader } from './requestHeaders'\n\nconst API_URL = process.env.REACT_APP_API_URL\n\nexport function getPackages() {\n  return axios\n    .get(API_URL + '/users/packages', { headers: apiHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function getAdminPackages() {\n  return axios\n    .get(API_URL + '/users/admin/packages', { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function getPackage(id) {\n  return axios\n    .get(API_URL + '/users/admin/packages/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function updatePackage(id, pack) {\n  return axios\n    .put(\n      API_URL + '/users/admin/packages/' + id,\n      {\n        name: pack.name,\n        slug: pack.slug,\n        description: pack.description,\n        price_monthly: pack.price.monthly,\n        price_yearly: pack.price.yearly,\n        quota_AO: pack.quota.account_officer,\n        quota_nasabah: pack.quota.nasabah,\n        active: pack.active === 'true',\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function createPackage(pack) {\n  return axios\n    .post(\n      API_URL + '/users/admin/packages',\n      {\n        name: pack.name,\n        slug: pack.slug,\n        description: pack.description,\n        price_monthly: pack.price.monthly,\n        price_yearly: pack.price.yearly,\n        quota_AO: pack.quota.account_officer,\n        quota_nasabah: pack.quota.nasabah,\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n"],"sourceRoot":""}