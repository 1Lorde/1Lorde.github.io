{"version":3,"sources":["views/notifications/notification_list/Notifications.js","helpers/notification_types.js","api/api_notification.js","../node_modules/@coreui/icons/js/free/cil-sad.js","components/Table.js"],"names":["Notifications","t","useTranslation","history","useHistory","notifications","setNotifications","useState","pageCount","setPageCount","hasLoaded","setHasLoaded","fetchIdRef","useRef","fetchData","useCallback","skip","current","getNotifications","then","data","ok","console","log","pages","Math","floor","pagination","total","limit","map","item","created","sender","title","content","action","color","size","onClick","push","id","columns","React","useMemo","Header","accessor","fluid","controlledPageCount","Services","changePassword","clientRegister","clientApprove","clientReject","userCreate","userEdit","nasabahCreate","nasabahEdit","profileEdit","packageCreate","packageEdit","productCreate","productEdit","ppobAllMarginEdit","ppobEdit","Titles","Contents","API_URL","process","axios","get","headers","authHeader","response","catch","reason","status","message","getNotification","createNotification","service","extra","notification","reference_id","post","cilSad","Table","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","gotoPage","nextPage","previousPage","state","pageIndex","useTable","initialState","pageSize","manualPagination","usePagination","useEffect","length","hover","responsive","style","minWidth","headerGroup","index","getHeaderGroupProps","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","className","min","max","type","defaultValue","onChange","e","target","value","Number","width","align","disabled","pointerEvents","icon"],"mappings":"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","file":"static/js/14.916c3fac.chunk.js","sourcesContent":["import React, { useCallback, useRef, useState } from 'react'\nimport { CButton, CCard, CCardBody, CContainer, CRow } from '@coreui/react'\nimport { getNotifications } from '../../../api/api_notification'\nimport { Table } from '../../../components/Table'\nimport { useHistory } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\n\nconst Notifications = () => {\n  const { t } = useTranslation()\n  const history = useHistory()\n  const [notifications, setNotifications] = useState([])\n  const [pageCount, setPageCount] = useState(0)\n  const [hasLoaded, setHasLoaded] = useState(false)\n  const fetchIdRef = useRef(0)\n\n  const fetchData = useCallback(({ skip }) => {\n    const fetchId = ++fetchIdRef.current\n    if (fetchId === fetchIdRef.current) {\n      setHasLoaded(false)\n      getNotifications(skip).then((data) => {\n        if (data.ok) {\n          console.log(data)\n          let pages = Math.floor(data.pagination.total / data.pagination.limit)\n          if (data.pagination.total / data.pagination.limit > pageCount) {\n            pages += 1\n          }\n          setPageCount(pages)\n          setNotifications(\n            data.data?.map((item) => {\n              return {\n                created: item.created,\n                sender: item.sender,\n                title: item.title,\n                content: item.content,\n                action: (\n                  <CButton\n                    color=\"dark\"\n                    size={'sm'}\n                    onClick={() => history.push('/notifications/' + item.id)}\n                  >\n                    {t('view')}\n                  </CButton>\n                ),\n              }\n            }),\n          )\n          setHasLoaded(true)\n        }\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: t('date'),\n        accessor: 'created',\n      },\n      {\n        Header: t('sender'),\n        accessor: 'sender',\n      },\n      {\n        Header: t('title'),\n        accessor: 'title',\n      },\n      {\n        Header: t('content'),\n        accessor: 'content',\n      },\n      {\n        Header: t('action'),\n        accessor: 'action',\n      },\n    ],\n    [t],\n  )\n\n  return (\n    <CContainer fluid>\n      <CRow>\n        <CCard>\n          <CCardBody>\n            <Table\n              columns={columns}\n              data={notifications}\n              controlledPageCount={pageCount}\n              fetchData={fetchData}\n              hasLoaded={hasLoaded}\n            />\n          </CCardBody>\n        </CCard>\n      </CRow>\n    </CContainer>\n  )\n}\n\nexport default Notifications\n","export const Services = {\n  changePassword: 'change-password',\n  clientRegister: 'client-register',\n  clientApprove: 'client-approve',\n  clientReject: 'client-reject',\n  userCreate: 'user-create',\n  userEdit: 'user-edit',\n  nasabahCreate: 'nasabah-create',\n  nasabahEdit: 'nasabah-edit',\n  profileEdit: 'profile-edit',\n  packageCreate: 'package-create',\n  packageEdit: 'package-edit',\n  productCreate: 'product-create',\n  productEdit: 'product-edit',\n  ppobAllMarginEdit: 'ppob-all-margin-edit',\n  ppobEdit: 'ppob-edit',\n}\n\nexport const Titles = {\n  'change-password': 'Password changed',\n  'client-register': 'New client registered',\n  'client-approve': 'Request approved',\n  'client-reject': 'Request rejected',\n  'user-create': 'New user created',\n  'user-edit': 'User updated',\n  'nasabah-create': 'New nasabah created',\n  'nasabah-edit': 'Nasabah updated',\n  'profile-edit': 'Profile updated',\n  'package-create': 'New package created',\n  'package-edit': 'Package updated',\n  'product-create': 'New product created',\n  'product-edit': 'Product updated',\n  'ppob-all-margin-edit': 'All services margin updated',\n  'ppob-edit': 'PPOB updated',\n}\n\nexport const Contents = {\n  'change-password': \"User's password changed\",\n  'client-register': 'New client registration request created',\n  'client-approve': 'Client registration request approved',\n  'client-reject': 'Client registration request rejected',\n  'user-create': 'New user created: ',\n  'user-edit': 'User`s info edited: ',\n  'nasabah-create': 'New nasabah created: ',\n  'nasabah-edit': 'Nasabah`s info updated: ',\n  'profile-edit': 'Profile`s info updated',\n  'package-create': 'New package created: ',\n  'package-edit': 'Package`s info updated: ',\n  'product-create': 'New product created: ',\n  'product-edit': 'Product`s info updated: ',\n  'ppob-all-margin-edit': 'All services margin updated',\n  'ppob-edit': 'PPOB`s info updated: ',\n}\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\nimport { Contents, Titles } from '../helpers/notification_types'\n\nconst API_URL = process.env.REACT_APP_API_URL\n\nexport function getNotifications(skip) {\n  return axios\n    .get(API_URL + '/users/notification?skip=' + skip, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getNotification(id) {\n  return axios\n    .get(API_URL + '/users/notification/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function createNotification(sender, service, extra) {\n  const notification = {\n    sender: sender,\n    service: service,\n    title: Titles[service],\n    content: Contents[service] + extra,\n    reference_id: '',\n  }\n\n  return axios\n    .post(API_URL + '/users/notification', notification, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n","export const cilSad = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M256,16C123.452,16,16,123.452,16,256S123.452,496,256,496,496,388.548,496,256,388.548,16,256,16ZM403.078,403.078a207.253,207.253,0,1,1,44.589-66.125A207.332,207.332,0,0,1,403.078,403.078Z' class='ci-primary'/><rect width='40' height='40' x='152' y='200' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='40' height='40' x='320' y='200' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M256,288a88.1,88.1,0,0,0-88,88h32a56,56,0,0,1,112,0h32A88.1,88.1,0,0,0,256,288Z' class='ci-primary'/>\"]","import { usePagination, useTable } from 'react-table'\nimport {\n  CCol,\n  CContainer,\n  CFormInput,\n  CHeaderText,\n  CPagination,\n  CPaginationItem,\n  CSpinner,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport React, { useEffect } from 'react'\nimport CIcon from '@coreui/icons-react'\nimport { cilSad } from '@coreui/icons'\nimport { useTranslation } from 'react-i18next'\n\n// eslint-disable-next-line react/prop-types\nexport function Table({ columns, data, controlledPageCount, fetchData, hasLoaded }) {\n  const { t } = useTranslation()\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    gotoPage,\n    nextPage,\n    previousPage,\n    state: { pageIndex },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: {\n        pageIndex: 0,\n        pageSize: 10,\n      },\n      manualPagination: true,\n      pageCount: controlledPageCount,\n    },\n    usePagination,\n  )\n\n  useEffect(() => {\n    const skip = pageIndex * 10\n    fetchData && fetchData({ skip })\n  }, [fetchData, pageIndex])\n  return hasLoaded ? (\n    page.length > 0 ? (\n      <>\n        <CTable hover responsive style={{ minWidth: '45rem' }} {...getTableProps()}>\n          <CTableHead>\n            {headerGroups.map((headerGroup, index) => (\n              <CTableRow key={index} {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column, index) => (\n                  <CTableHeaderCell key={index} {...column.getHeaderProps()}>\n                    {column.render('Header')}\n                  </CTableHeaderCell>\n                ))}\n              </CTableRow>\n            ))}\n          </CTableHead>\n          <CTableBody {...getTableBodyProps()}>\n            {page.map((row, index) => {\n              prepareRow(row)\n              return (\n                <CTableRow key={index} {...row.getRowProps()}>\n                  {row.cells.map((cell, index) => {\n                    return (\n                      <CTableDataCell key={index} {...cell.getCellProps()}>\n                        {cell.render('Cell')}\n                      </CTableDataCell>\n                    )\n                  })}\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n\n        <CContainer className={'d-flex justify-content-end align-items-center'}>\n          <CHeaderText className={'pe-2'}>{t('go_to_page') + ':'}</CHeaderText>\n          <CFormInput\n            min={1}\n            max={controlledPageCount}\n            type=\"number\"\n            defaultValue={pageIndex + 1}\n            onChange={(e) => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\n              gotoPage(page)\n            }}\n            style={{ width: '100px' }}\n          />\n        </CContainer>\n\n        <CPagination align=\"center\" aria-label=\"Page navigation\">\n          <CPaginationItem\n            aria-label=\"First\"\n            onClick={() => gotoPage(0)}\n            disabled={!canPreviousPage}\n          >\n            {'<<'}\n          </CPaginationItem>\n          <CPaginationItem\n            aria-label=\"Previous\"\n            onClick={() => previousPage()}\n            disabled={!canPreviousPage}\n          >\n            {'<'}\n          </CPaginationItem>\n          <CPaginationItem aria-label=\"Current\" style={{ pointerEvents: 'none' }}>\n            {t('page')} <strong>{pageIndex + 1}</strong> of <strong>{pageOptions.length}</strong>\n          </CPaginationItem>\n          <CPaginationItem aria-label=\"Next\" onClick={() => nextPage()} disabled={!canNextPage}>\n            {'>'}\n          </CPaginationItem>\n          <CPaginationItem\n            aria-label=\"Last\"\n            onClick={() => gotoPage(controlledPageCount - 1)}\n            disabled={!canNextPage}\n          >\n            {'>>'}\n          </CPaginationItem>\n        </CPagination>\n      </>\n    ) : (\n      <CCol className=\"d-flex justify-content-center\">\n        <CHeaderText>\n          {t('nothing_there')} <CIcon icon={cilSad} />{' '}\n        </CHeaderText>\n      </CCol>\n    )\n  ) : (\n    <CCol className=\"d-flex justify-content-center\">\n      <CSpinner color=\"primary\" />\n    </CCol>\n  )\n}\n"],"sourceRoot":""}