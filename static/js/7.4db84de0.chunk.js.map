{"version":3,"sources":["views/nasabah/nasabah_list/NasabahList.js","components/Table.js","api/api_nasabah.js"],"names":["NasabahList","history","useHistory","hasLoaded","setHasLoaded","useState","nasabahList","setNasabah","searchQuery","setSearchQuery","status","setStatus","useEffect","getNasabahList","then","data","console","log","map","item","name","number","wa_number","location","address","active","className","color","shape","action","size","onClick","push","id","icon","cilPen","columns","React","useMemo","Header","accessor","htmlFor","type","placeholder","onChange","e","target","value","length","Loader","Table","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","state","pageIndex","useTable","autoResetPageIndex","usePagination","hover","responsive","style","minWidth","headerGroup","index","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","min","max","defaultValue","Number","width","align","disabled","pointerEvents","API_URL","axios","get","authHeader","response","nasabah_list","catch","reason","message","getNasabah","updateNasabah","nasabah","put","ktp_id","group","createNasabah","post"],"mappings":"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","file":"static/js/7.4db84de0.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  CBadge,\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CHeaderText,\n  CRow,\n} from '@coreui/react'\nimport { useHistory } from 'react-router-dom'\nimport Loader from '../../../components/Loader'\nimport { Table } from '../../../components/Table'\nimport { getNasabahList } from '../../../api/api_nasabah'\nimport { cilPen } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\n\nconst NasabahList = () => {\n  const history = useHistory()\n  const [hasLoaded, setHasLoaded] = useState()\n  const [nasabahList, setNasabah] = useState([])\n  const [searchQuery, setSearchQuery] = useState('')\n  const [status, setStatus] = useState('')\n\n  useEffect(() => {\n    getNasabahList(searchQuery, status).then((data) => {\n      console.log(data)\n      setNasabah(\n        data?.map((item) => {\n          return {\n            name: item.name,\n            number: item.wa_number,\n            location: item.address,\n            status: item.active ? (\n              <CBadge className=\"mt-1\" color=\"success\" shape=\"rounded-pill\">\n                ACTIVE\n              </CBadge>\n            ) : (\n              <CBadge className=\"mt-1\" color=\"secondary\" shape=\"rounded-pill\">\n                INACTIVE\n              </CBadge>\n            ),\n            action: (\n              <CButton color=\"dark\" size={'sm'} onClick={() => history.push('/nasabah/' + item.id)}>\n                <CIcon icon={cilPen} className=\"me-1\" />\n                Edit\n              </CButton>\n            ),\n          }\n        }),\n      )\n      setHasLoaded(true)\n    })\n  }, [history, searchQuery, status])\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Name',\n        accessor: 'name',\n      },\n      {\n        Header: 'WhatsApp Number',\n        accessor: 'number',\n      },\n      {\n        Header: 'Location',\n        accessor: 'location',\n      },\n      {\n        Header: 'Status',\n        accessor: 'status',\n      },\n      {\n        Header: 'Action',\n        accessor: 'action',\n      },\n    ],\n    [],\n  )\n\n  return hasLoaded ? (\n    <CContainer>\n      <CRow className=\"align-items-center\">\n        <CCol>\n          <CFormLabel htmlFor=\"searchInput\">Search</CFormLabel>\n          <CFormInput\n            type=\"text\"\n            id=\"searchInput\"\n            placeholder=\"Enter search query..\"\n            onChange={(e) => {\n              setSearchQuery(e.target.value)\n            }}\n          />\n        </CCol>\n        <CCol>\n          <CFormLabel htmlFor=\"statusInput\">Status</CFormLabel>\n          <CFormSelect\n            id=\"statusInput\"\n            onChange={(e) => {\n              setStatus(e.target.value)\n            }}\n          >\n            <option value=\"\">All</option>\n            <option value=\"false\">Inactive</option>\n            <option value=\"true\">Active</option>\n          </CFormSelect>\n        </CCol>\n        <CCol className={'d-flex justify-content-end'}>\n          <CButton color=\"primary\" onClick={() => history.push('/nasabah/create')}>\n            Add New\n          </CButton>\n        </CCol>\n      </CRow>\n      <br />\n      <CRow>\n        <CCard>\n          <CCardBody>\n            {nasabahList.length > 0 ? (\n              <Table columns={columns} data={nasabahList} />\n            ) : (\n              <>\n                <div className=\"d-flex justify-content-center\">\n                  <CHeaderText>No nasabah found</CHeaderText>\n                </div>\n              </>\n            )}\n          </CCardBody>\n        </CCard>\n      </CRow>\n    </CContainer>\n  ) : (\n    Loader()\n  )\n}\n\nexport default NasabahList\n","import { usePagination, useTable } from 'react-table'\nimport {\n  CContainer,\n  CFormInput,\n  CHeaderText,\n  CPagination,\n  CPaginationItem,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport React from 'react'\n\n// eslint-disable-next-line react/prop-types\nexport function Table({ columns, data }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    state: { pageIndex },\n  } = useTable({ columns, data, autoResetPageIndex: true }, usePagination)\n\n  return (\n    <>\n      <CTable hover responsive style={{ minWidth: '45rem' }} {...getTableProps()}>\n        <CTableHead>\n          {headerGroups.map((headerGroup, index) => (\n            <CTableRow key={index} {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column, index) => (\n                <CTableHeaderCell key={index} {...column.getHeaderProps()}>\n                  {column.render('Header')}\n                </CTableHeaderCell>\n              ))}\n            </CTableRow>\n          ))}\n        </CTableHead>\n        <CTableBody {...getTableBodyProps()}>\n          {page.map((row, index) => {\n            prepareRow(row)\n            return (\n              <CTableRow key={index} {...row.getRowProps()}>\n                {row.cells.map((cell, index) => {\n                  return (\n                    <CTableDataCell key={index} {...cell.getCellProps()}>\n                      {cell.render('Cell')}\n                    </CTableDataCell>\n                  )\n                })}\n              </CTableRow>\n            )\n          })}\n        </CTableBody>\n      </CTable>\n\n      <CContainer className={'d-flex justify-content-end align-items-center'}>\n        <CHeaderText className={'pe-2'}>Go to page:</CHeaderText>\n        <CFormInput\n          min={1}\n          max={pageCount}\n          type=\"number\"\n          defaultValue={pageIndex + 1}\n          onChange={(e) => {\n            const page = e.target.value ? Number(e.target.value) - 1 : 0\n            gotoPage(page)\n          }}\n          style={{ width: '100px' }}\n        />\n      </CContainer>\n\n      <CPagination align=\"center\" aria-label=\"Page navigation\">\n        <CPaginationItem aria-label=\"First\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {'<<'}\n        </CPaginationItem>\n        <CPaginationItem\n          aria-label=\"Previous\"\n          onClick={() => previousPage()}\n          disabled={!canNextPage}\n        >\n          {'<'}\n        </CPaginationItem>\n        <CPaginationItem aria-label=\"Current\" style={{ pointerEvents: 'none' }}>\n          Page <strong>{pageIndex + 1}</strong> of <strong>{pageOptions.length}</strong>\n        </CPaginationItem>\n        <CPaginationItem aria-label=\"Next\" onClick={() => nextPage()} disabled={!canPreviousPage}>\n          {'>'}\n        </CPaginationItem>\n        <CPaginationItem\n          aria-label=\"Last\"\n          onClick={() => gotoPage(pageCount - 1)}\n          disabled={!canNextPage}\n        >\n          {'>>'}\n        </CPaginationItem>\n      </CPagination>\n    </>\n  )\n}\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getNasabahList(searchQuery, status) {\n  return axios\n    .get(API_URL + '/nasabah/nasabah?search=' + searchQuery + '&status=' + status, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data.nasabah_list\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getNasabah(id) {\n  return axios\n    .get(API_URL + '/nasabah/nasabah/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function updateNasabah(id, nasabah) {\n  return axios\n    .put(\n      API_URL + '/nasabah/nasabah/' + id,\n      {\n        name: nasabah.name,\n        ktp_id: nasabah.ktp_id,\n        wa_number: nasabah.wa_number,\n        address: nasabah.address,\n        reason: nasabah.reason,\n        group: nasabah.group,\n        active: nasabah.active === 'true',\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function createNasabah(nasabah) {\n  return axios\n    .post(API_URL + '/nasabah/nasabah', nasabah, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n"],"sourceRoot":""}