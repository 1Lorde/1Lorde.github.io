{"version":3,"sources":["views/packages/package_create/PackageCreate.js","helpers/notification_types.js","api/api_notification.js","helpers/utils.js","api/api_package.js"],"names":["PackageCreate","t","useTranslation","userState","useContext","UserContext","history","useHistory","pack","setPack","useState","validated","setValidated","className","style","width","orientation","src","name","noValidate","onSubmit","event","preventDefault","form","currentTarget","checkValidity","stopPropagation","console","log","createPackage","then","data","ok","createNotification","user","wa_number","Services","packageCreate","resp","id","store","addNotification","success","push","message","danger","error","htmlFor","type","required","onChange","e","target","value","description","slug","price","monthly","tryParseInt","yearly","quota","account_officer","nasabah","color","changePassword","clientRegister","clientApprove","clientReject","userCreate","userEdit","nasabahCreate","nasabahEdit","profileEdit","packageEdit","productCreate","productEdit","ppobAllMarginEdit","ppobEdit","Titles","Contents","API_URL","process","getNotifications","skip","axios","get","headers","authHeader","response","catch","reason","status","getNotification","sender","service","extra","notification","title","content","reference_id","post","text","parsed","parseInt","isNaN","getPackages","apiHeader","getAdminPackages","getPackage","updatePackage","put","price_monthly","price_yearly","quota_AO","quota_nasabah","active"],"mappings":"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","file":"static/js/6.644e504f.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardImage,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CRow,\n} from '@coreui/react'\n\nimport { useHistory } from 'react-router-dom'\nimport { store } from 'react-notifications-component'\nimport { danger, success } from '../../../helpers/notifications'\nimport { createPackage } from '../../../api/api_package'\nimport { tryParseInt } from '../../../helpers/utils'\nimport { createNotification } from '../../../api/api_notification'\nimport { Services } from '../../../helpers/notification_types'\nimport { UserContext } from '../../../helpers/user'\nimport { useTranslation } from 'react-i18next'\n\nconst PackageCreate = () => {\n  const { t } = useTranslation()\n  const { userState } = useContext(UserContext)\n  const history = useHistory()\n  const [pack, setPack] = useState({})\n  const [validated, setValidated] = useState(false)\n\n  function handleCreate(event) {\n    event.preventDefault()\n\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.stopPropagation()\n    }\n    setValidated(true)\n\n    if (form.checkValidity()) {\n      console.log(pack)\n      createPackage(pack).then((data) => {\n        if (data.ok) {\n          createNotification(userState.user.wa_number, Services.packageCreate, pack.name).then(\n            (resp) => {\n              console.log('Notification created: ' + resp.id)\n            },\n          )\n          store.addNotification(success(t('notifications.package_create', { name: pack.name })))\n          history.push('/packages')\n        } else {\n          if (data.message) {\n            console.log(data)\n            store.addNotification(danger(data.message))\n          } else {\n            console.log(data)\n            store.addNotification(danger(data.error))\n          }\n        }\n      })\n    }\n  }\n\n  return (\n    <CContainer className=\"d-flex justify-content-center\">\n      <CCard style={{ width: '35rem' }}>\n        <CCardImage\n          orientation=\"top\"\n          src={\n            'https://via.placeholder.com/550x390.png?text=' +\n            (pack.name ? pack.name : t('new_package'))\n          }\n        />\n        <CCardBody>\n          <CForm noValidate validated={validated} onSubmit={handleCreate}>\n            <CRow>\n              <CCol>\n                <div className=\"mb-3\">\n                  <CFormLabel htmlFor=\"name\">{t('name')}</CFormLabel>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"name\"\n                    required\n                    onChange={(e) => {\n                      setPack((pack) => ({ ...pack, name: e.target.value }))\n                    }}\n                  />\n                </div>\n                <div className=\"mb-3\">\n                  <CFormLabel htmlFor=\"description\">{t('description')}</CFormLabel>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"description\"\n                    onChange={(e) => {\n                      setPack((pack) => ({ ...pack, description: e.target.value }))\n                    }}\n                  />\n                </div>\n                <div className=\"mb-3\">\n                  <CFormLabel htmlFor=\"slug\">{t('slug')}</CFormLabel>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"slug\"\n                    required\n                    onChange={(e) => {\n                      setPack((pack) => ({ ...pack, slug: e.target.value }))\n                    }}\n                  />\n                </div>\n                <div className=\"pt-1\">\n                  <hr />\n                  <h3>{t('price')}</h3>\n                  <CRow className=\"pt-2\">\n                    <CCol>\n                      <div className=\"mb-3\">\n                        <CFormLabel htmlFor=\"monthly\">{t('monthly')}</CFormLabel>\n                        <CFormInput\n                          type=\"number\"\n                          id=\"monthly\"\n                          required\n                          onChange={(e) => {\n                            setPack((pack) => ({\n                              ...pack,\n                              price: {\n                                ...pack.price,\n                                monthly: tryParseInt(e.target.value),\n                              },\n                            }))\n                          }}\n                        />\n                      </div>\n                    </CCol>\n                    <CCol>\n                      <div className=\"mb-3\">\n                        <CFormLabel htmlFor=\"yearly\">{t('yearly')}</CFormLabel>\n                        <CFormInput\n                          type=\"number\"\n                          id=\"yearly\"\n                          required\n                          onChange={(e) => {\n                            setPack((pack) => ({\n                              ...pack,\n                              price: {\n                                ...pack.price,\n                                yearly: tryParseInt(e.target.value),\n                              },\n                            }))\n                          }}\n                        />\n                      </div>\n                    </CCol>\n                  </CRow>\n                </div>\n\n                <div>\n                  <hr />\n                  <h3>{t('quota')}</h3>\n                  <CRow className=\"pt-2\">\n                    <CCol>\n                      <div className=\"mb-3\">\n                        <CFormLabel htmlFor=\"account_officer\">{t('account_officer')}</CFormLabel>\n                        <CFormInput\n                          type=\"number\"\n                          id=\"account_officer\"\n                          required\n                          onChange={(e) => {\n                            setPack((pack) => ({\n                              ...pack,\n                              quota: {\n                                ...pack.quota,\n                                account_officer: tryParseInt(e.target.value),\n                              },\n                            }))\n                          }}\n                        />\n                      </div>\n                    </CCol>\n                    <CCol>\n                      <div className=\"mb-3\">\n                        <CFormLabel htmlFor=\"nasabah\">{t('nasabah')}</CFormLabel>\n                        <CFormInput\n                          type=\"number\"\n                          id=\"nasabah\"\n                          required\n                          onChange={(e) => {\n                            setPack((pack) => ({\n                              ...pack,\n                              quota: {\n                                ...pack.quota,\n                                nasabah: tryParseInt(e.target.value),\n                              },\n                            }))\n                          }}\n                        />\n                      </div>\n                    </CCol>\n                  </CRow>\n                </div>\n              </CCol>\n            </CRow>\n            <CRow className=\"mb-3\">\n              <div className=\"d-flex justify-content-end\">\n                <CButton color=\"primary\" type=\"submit\">\n                  {t('create')}\n                </CButton>\n              </div>\n            </CRow>\n          </CForm>\n        </CCardBody>\n      </CCard>\n    </CContainer>\n  )\n}\nexport default PackageCreate\n","export const Services = {\n  changePassword: 'change-password',\n  clientRegister: 'client-register',\n  clientApprove: 'client-approve',\n  clientReject: 'client-reject',\n  userCreate: 'user-create',\n  userEdit: 'user-edit',\n  nasabahCreate: 'nasabah-create',\n  nasabahEdit: 'nasabah-edit',\n  profileEdit: 'profile-edit',\n  packageCreate: 'package-create',\n  packageEdit: 'package-edit',\n  productCreate: 'product-create',\n  productEdit: 'product-edit',\n  ppobAllMarginEdit: 'ppob-all-margin-edit',\n  ppobEdit: 'ppob-edit',\n}\n\nexport const Titles = {\n  'change-password': 'Password changed',\n  'client-register': 'New client registered',\n  'client-approve': 'Request approved',\n  'client-reject': 'Request rejected',\n  'user-create': 'New user created',\n  'user-edit': 'User updated',\n  'nasabah-create': 'New nasabah created',\n  'nasabah-edit': 'Nasabah updated',\n  'profile-edit': 'Profile updated',\n  'package-create': 'New package created',\n  'package-edit': 'Package updated',\n  'product-create': 'New product created',\n  'product-edit': 'Product updated',\n  'ppob-all-margin-edit': 'All services margin updated',\n  'ppob-edit': 'PPOB updated',\n}\n\nexport const Contents = {\n  'change-password': \"User's password changed\",\n  'client-register': 'New client registration request created',\n  'client-approve': 'Client registration request approved',\n  'client-reject': 'Client registration request rejected',\n  'user-create': 'New user created: ',\n  'user-edit': 'User`s info edited: ',\n  'nasabah-create': 'New nasabah created: ',\n  'nasabah-edit': 'Nasabah`s info updated: ',\n  'profile-edit': 'Profile`s info updated',\n  'package-create': 'New package created: ',\n  'package-edit': 'Package`s info updated: ',\n  'product-create': 'New product created: ',\n  'product-edit': 'Product`s info updated: ',\n  'ppob-all-margin-edit': 'All services margin updated',\n  'ppob-edit': 'PPOB`s info updated: ',\n}\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\nimport { Contents, Titles } from '../helpers/notification_types'\n\nconst API_URL = process.env.REACT_APP_API_URL\n\nexport function getNotifications(skip) {\n  return axios\n    .get(API_URL + '/users/notification?skip=' + skip, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getNotification(id) {\n  return axios\n    .get(API_URL + '/users/notification/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function createNotification(sender, service, extra) {\n  const notification = {\n    sender: sender,\n    service: service,\n    title: Titles[service],\n    content: Contents[service] + extra,\n    reference_id: '',\n  }\n\n  return axios\n    .post(API_URL + '/users/notification', notification, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n","export function tryParseInt(text) {\n  const parsed = parseInt(text)\n  if (isNaN(parsed)) {\n    return ''\n  }\n  return parsed\n}\n","import axios from 'axios'\nimport { apiHeader, authHeader } from './requestHeaders'\n\nconst API_URL = process.env.REACT_APP_API_URL\n\nexport function getPackages() {\n  return axios\n    .get(API_URL + '/users/packages', { headers: apiHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function getAdminPackages() {\n  return axios\n    .get(API_URL + '/users/admin/packages', { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function getPackage(id) {\n  return axios\n    .get(API_URL + '/users/admin/packages/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function updatePackage(id, pack) {\n  return axios\n    .put(\n      API_URL + '/users/admin/packages/' + id,\n      {\n        name: pack.name,\n        slug: pack.slug,\n        description: pack.description,\n        price_monthly: pack.price.monthly,\n        price_yearly: pack.price.yearly,\n        quota_AO: pack.quota.account_officer,\n        quota_nasabah: pack.quota.nasabah,\n        active: pack.active === 'true',\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function createPackage(pack) {\n  return axios\n    .post(\n      API_URL + '/users/admin/packages',\n      {\n        name: pack.name,\n        slug: pack.slug,\n        description: pack.description,\n        price_monthly: pack.price.monthly,\n        price_yearly: pack.price.yearly,\n        quota_AO: pack.quota.account_officer,\n        quota_nasabah: pack.quota.nasabah,\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n"],"sourceRoot":""}