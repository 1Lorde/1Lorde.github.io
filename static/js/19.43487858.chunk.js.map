{"version":3,"sources":["components/SimpleTable.js","views/vendor/vendor_list/VendorList.js","api/api_vendors.js","../node_modules/@coreui/icons/js/free/cil-pen.js"],"names":["SimpleTable","columns","data","fetchData","hasLoaded","getTableProps","getTableBodyProps","headerGroups","prepareRow","rows","useTable","useEffect","hover","responsive","style","minWidth","map","headerGroup","index","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","className","color","VendorList","t","useTranslation","history","useHistory","setHasLoaded","useState","vendorList","setVendorList","searchQuery","setSearchQuery","status","setStatus","fetchIdRef","useRef","useCallback","current","getVendors","then","console","log","vendors","item","name","url","api_base_url","location","address","shape","action","size","onClick","push","id","icon","cilPen","React","useMemo","Header","accessor","htmlFor","type","placeholder","onChange","e","target","value","API_URL","process","axios","get","authHeader","response","catch","reason","getVendor","updateVendor","vendor","put","desc","createVendor","post","slug","api_credential_params","username","api_username","api_key","uid","pin"],"mappings":"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","file":"static/js/19.43487858.chunk.js","sourcesContent":["import { useTable } from 'react-table'\nimport {\n  CCol,\n  CSpinner,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport React, { useEffect } from 'react'\n\n// eslint-disable-next-line react/prop-types\nexport function SimpleTable({ columns, data, fetchData, hasLoaded }) {\n  const { getTableProps, getTableBodyProps, headerGroups, prepareRow, rows } = useTable({\n    columns,\n    data,\n  })\n\n  useEffect(() => {\n    fetchData()\n  }, [fetchData])\n  return hasLoaded ? (\n    <>\n      <CTable hover responsive style={{ minWidth: '45rem' }} {...getTableProps()}>\n        <CTableHead>\n          {headerGroups.map((headerGroup, index) => (\n            <CTableRow key={index} {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column, index) => (\n                <CTableHeaderCell key={index} {...column.getHeaderProps()}>\n                  {column.render('Header')}\n                </CTableHeaderCell>\n              ))}\n            </CTableRow>\n          ))}\n        </CTableHead>\n        <CTableBody {...getTableBodyProps()}>\n          {rows.map((row, index) => {\n            prepareRow(row)\n            return (\n              <CTableRow key={index} {...row.getRowProps()}>\n                {row.cells.map((cell, index) => {\n                  return (\n                    <CTableDataCell key={index} {...cell.getCellProps()}>\n                      {cell.render('Cell')}\n                    </CTableDataCell>\n                  )\n                })}\n              </CTableRow>\n            )\n          })}\n        </CTableBody>\n      </CTable>\n    </>\n  ) : (\n    <CCol className=\"d-flex justify-content-center\">\n      <CSpinner color=\"primary\" />\n    </CCol>\n  )\n}\n","import React, { useCallback, useRef, useState } from 'react'\nimport {\n  CBadge,\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CRow,\n} from '@coreui/react'\nimport { useHistory } from 'react-router-dom'\nimport { cilPen } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport { SimpleTable } from '../../../components/SimpleTable'\nimport { getVendors } from '../../../api/api_vendors'\nimport { useTranslation } from 'react-i18next'\n\nconst VendorList = () => {\n  const { t } = useTranslation()\n  const history = useHistory()\n  const [hasLoaded, setHasLoaded] = useState()\n  const [vendorList, setVendorList] = useState([])\n  const [searchQuery, setSearchQuery] = useState('')\n  const [status, setStatus] = useState('')\n  const fetchIdRef = useRef(0)\n\n  const fetchData = useCallback(\n    () => {\n      const fetchId = ++fetchIdRef.current\n      if (fetchId === fetchIdRef.current) {\n        setHasLoaded(false)\n        getVendors(searchQuery, status).then((data) => {\n          console.log(data)\n          setVendorList(\n            data.vendors?.map((item) => {\n              return {\n                name: item.name,\n                url: item.api_base_url,\n                location: item.address,\n                status:\n                  item.status === 'ACTIVE' ? (\n                    <CBadge className=\"mt-1\" color=\"success\" shape=\"rounded-pill\">\n                      {t('active')}\n                    </CBadge>\n                  ) : (\n                    <CBadge className=\"mt-1\" color=\"secondary\" shape=\"rounded-pill\">\n                      {t('inactive')}\n                    </CBadge>\n                  ),\n                action: (\n                  <CButton\n                    color=\"dark\"\n                    size={'sm'}\n                    onClick={() => history.push('/ppob/vendors/' + item.id)}\n                  >\n                    <CIcon icon={cilPen} className=\"me-1\" />\n                    {t('edit')}\n                  </CButton>\n                ),\n              }\n            }),\n          )\n          setHasLoaded(true)\n        })\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [history, searchQuery, status],\n  )\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: t('company_name'),\n        accessor: 'name',\n      },\n      {\n        Header: 'API URL',\n        accessor: 'url',\n      },\n      {\n        Header: t('status'),\n        accessor: 'status',\n      },\n      {\n        Header: t('action'),\n        accessor: 'action',\n      },\n    ],\n    [t],\n  )\n\n  return (\n    <CContainer>\n      <CRow className=\"align-items-center\">\n        <CCol>\n          <CFormLabel htmlFor=\"searchInput\">{t('search')}</CFormLabel>\n          <CFormInput\n            type=\"text\"\n            id=\"searchInput\"\n            placeholder={t('enter_search_query')}\n            onChange={(e) => {\n              setSearchQuery(e.target.value)\n            }}\n          />\n        </CCol>\n        <CCol>\n          <CFormLabel htmlFor=\"statusInput\">{t('status')}</CFormLabel>\n          <CFormSelect\n            id=\"statusInput\"\n            onChange={(e) => {\n              setStatus(e.target.value)\n            }}\n          >\n            <option value=\"\">{t('all')}</option>\n            <option value=\"ACTIVE\">{t('active')}</option>\n            <option value=\"NOT-ACTIVE\">{t('inactive')}</option>\n          </CFormSelect>\n        </CCol>\n        <CCol className={'d-flex justify-content-end'}>\n          <CButton color=\"primary\" onClick={() => history.push('/ppob/vendors/create')}>\n            {t('add_new')}\n          </CButton>\n        </CCol>\n      </CRow>\n      <br />\n      <CRow>\n        <CCard>\n          <CCardBody>\n            <SimpleTable\n              columns={columns}\n              data={vendorList}\n              fetchData={fetchData}\n              hasLoaded={hasLoaded}\n            />\n          </CCardBody>\n        </CCard>\n      </CRow>\n    </CContainer>\n  )\n}\n\nexport default VendorList\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\n\nconst API_URL = process.env.REACT_APP_API_URL\n\nexport function getVendors(searchQuery, status) {\n  return axios\n    .get(API_URL + '/transaction/vendors?search=' + searchQuery + '&status=' + status, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function getVendor(id) {\n  return axios\n    .get(API_URL + '/transaction/vendors/' + id, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function updateVendor(vendor) {\n  return axios\n    .put(\n      API_URL + '/transaction/vendors/' + vendor.id,\n      {\n        name: vendor.name,\n        desc: vendor.desc,\n        api_base_url: vendor.api_base_url,\n        status: vendor.status,\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function createVendor(vendor) {\n  return axios\n    .post(\n      API_URL + '/transaction/vendors',\n      {\n        name: vendor.name,\n        slug: vendor.type,\n        desc: vendor.desc,\n        api_base_url: vendor.api_base_url,\n        api_credential_params:\n          vendor.type === 'mobilepulsa'\n            ? {\n                username: vendor.api_username,\n                api_key: vendor.api_key,\n              }\n            : { uid: vendor.api_username, pin: vendor.api_key },\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n","export const cilPen = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M345.994,42.019,179.531,208.481A646.3,646.3,0,0,0,25.325,456.521a24.845,24.845,0,0,0,6,25.708l.087.087a24.84,24.84,0,0,0,17.611,7.342,25.172,25.172,0,0,0,8.1-1.344,646.283,646.283,0,0,0,248.04-154.207L471.62,167.646A88.831,88.831,0,0,0,345.994,42.019ZM282.531,311.48A614.445,614.445,0,0,1,60.419,453.221,614.435,614.435,0,0,1,202.158,231.108l99.162-99.161,80.372,80.372ZM448.993,145.019l-44.674,44.673L323.947,109.32l44.674-44.674a56.832,56.832,0,1,1,80.372,80.373Z' class='ci-primary'/>\"]"],"sourceRoot":""}