{"version":3,"sources":["../node_modules/@coreui/icons/js/free/cil-check.js","../node_modules/@coreui/icons/js/free/cil-x-circle.js","views/client/client_list/ClientList.js","helpers/notification_types.js","api/api_notification.js","api/api_client.js","components/Table.js"],"names":["cilCheck","cilXCircle","ClientList","history","useHistory","userState","useContext","UserContext","hasLoaded","setHasLoaded","useState","clients","setClients","searchQuery","setSearchQuery","status","setStatus","sort","setSort","pageCount","setPageCount","fetchIdRef","useRef","handleApprove","id","name","approveClient","then","data","ok","createNotification","user","wa_number","Services","clientReject","resp","console","log","store","addNotification","info","danger","getStatusBadge","toLowerCase","className","color","shape","getApprovalBar","role","variant","size","onClick","icon","rejectClient","clientApprove","handleReject","fetchData","useCallback","skip","current","getClients","pages","Math","floor","pagination","total","limit","map","item","company","contact_wa_number","contact","contact_name","dir_name","actions","push","cilPen","approval","columns","React","useMemo","Header","accessor","htmlFor","type","placeholder","onChange","e","target","value","Table","controlledPageCount","changePassword","clientRegister","userCreate","userEdit","nasabahCreate","nasabahEdit","profileEdit","packageCreate","packageEdit","productCreate","productEdit","ppobAllMarginEdit","ppobEdit","Titles","Contents","API_URL","getNotifications","axios","get","headers","authHeader","response","catch","reason","message","getNotification","sender","service","extra","notification","title","content","reference_id","post","getClient","updateClient","clientId","client","put","contact_dir_name","address","registerClient","apiHeader","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","gotoPage","nextPage","previousPage","state","pageIndex","useTable","initialState","pageSize","manualPagination","usePagination","useEffect","hover","responsive","style","minWidth","headerGroup","index","getHeaderGroupProps","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","min","max","defaultValue","Number","width","align","disabled","pointerEvents","length","Loader"],"mappings":"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","file":"static/js/4.6a136b5c.chunk.js","sourcesContent":["export const cilCheck = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M199.066,456l-7.379-7.514-3.94-3.9-86.2-86.2.053-.055L17.936,274.665l97.614-97.613,83.565,83.565L398.388,61.344,496,158.958,296.729,358.229,285.469,369.6ZM146.6,358.183l52.459,52.46.1-.1.054.054,52.311-52.311,11.259-11.368L450.746,158.958,398.388,106.6,199.115,305.871,115.55,222.306,63.191,274.665l83.464,83.463Z' class='ci-primary'/>\"]","export const cilXCircle = [\"512 512\",\"<polygon fill='var(--ci-primary-color, currentColor)' points='348.071 141.302 260.308 229.065 172.545 141.302 149.917 163.929 237.681 251.692 149.917 339.456 172.545 362.083 260.308 274.32 348.071 362.083 370.699 339.456 282.935 251.692 370.699 163.929 348.071 141.302' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M425.706,86.294A240,240,0,0,0,86.294,425.706,240,240,0,0,0,425.706,86.294ZM256,464C141.309,464,48,370.691,48,256S141.309,48,256,48s208,93.309,208,208S370.691,464,256,464Z' class='ci-primary'/>\"]","import React, { useCallback, useContext, useRef, useState } from 'react'\nimport {\n  CBadge,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CRow,\n} from '@coreui/react'\nimport { useHistory } from 'react-router-dom'\nimport { Table } from '../../../components/Table'\nimport { approveClient, getClients, rejectClient } from '../../../api/api_client'\nimport CIcon from '@coreui/icons-react'\nimport { cilCheck, cilPen, cilXCircle } from '@coreui/icons'\nimport { store } from 'react-notifications-component'\nimport { danger, info } from '../../../helpers/notifications'\nimport { createNotification } from '../../../api/api_notification'\nimport { Services } from '../../../helpers/notification_types'\nimport { UserContext } from '../../../helpers/user'\n\nconst ClientList = () => {\n  const history = useHistory()\n  const { userState } = useContext(UserContext)\n  const [hasLoaded, setHasLoaded] = useState()\n  const [clients, setClients] = useState([])\n  const [searchQuery, setSearchQuery] = useState('')\n  const [status, setStatus] = useState('')\n  const [sort, setSort] = useState('')\n  const [pageCount, setPageCount] = useState(0)\n  const fetchIdRef = useRef(0)\n\n  function handleApprove(id, name) {\n    approveClient(id).then((data) => {\n      if (data.ok) {\n        createNotification(userState.user.wa_number, Services.clientReject, '').then((resp) => {\n          console.log('Notification created: ' + resp.id)\n        })\n        store.addNotification(info('Client ' + name + ' has been approved.'))\n      } else {\n        console.log(data)\n        store.addNotification(danger('Error occurred.'))\n      }\n    })\n  }\n\n  function handleReject(id, name) {\n    rejectClient(id).then((data) => {\n      if (data.ok) {\n        createNotification(userState.user.wa_number, Services.clientApprove, '').then((resp) => {\n          console.log('Notification created: ' + resp)\n        })\n        store.addNotification(info('Client ' + name + ' has been rejected.'))\n      } else {\n        console.log(data)\n        store.addNotification(danger('Error occurred.'))\n      }\n    })\n  }\n\n  function getStatusBadge(status) {\n    switch (status.toLowerCase()) {\n      case 'request':\n        return (\n          <CBadge className=\"mt-1\" color=\"warning\" shape=\"rounded-pill\">\n            {status}\n          </CBadge>\n        )\n      case 'verified':\n        return (\n          <CBadge className=\"mt-1\" color=\"info\" shape=\"rounded-pill\">\n            {status}\n          </CBadge>\n        )\n      case 'active':\n        return (\n          <CBadge className=\"mt-1\" color=\"success\" shape=\"rounded-pill\">\n            {status}\n          </CBadge>\n        )\n      case 'reject':\n        return (\n          <CBadge className=\"mt-1\" color=\"danger\" shape=\"rounded-pill\">\n            {status}\n          </CBadge>\n        )\n      default:\n        return (\n          <CBadge className=\"mt-1\" color=\"secondary\" shape=\"rounded-pill\">\n            unknown\n          </CBadge>\n        )\n    }\n  }\n\n  function getApprovalBar(status, id, name) {\n    switch (status) {\n      case 'verified':\n        return (\n          <CButtonGroup role=\"group\" className=\"ms-3\">\n            <CButton\n              color=\"success\"\n              variant=\"outline\"\n              size={'sm'}\n              onClick={() => {\n                handleApprove(id, name)\n              }}\n            >\n              <div className=\"d-inline-flex align-items-center\">\n                <span>Approve</span>\n                <CIcon icon={cilCheck} className=\"ms-1\" />\n              </div>\n            </CButton>\n            <CButton\n              color=\"danger\"\n              variant=\"outline\"\n              size={'sm'}\n              onClick={() => handleReject(id, name)}\n            >\n              <div className=\"d-inline-flex align-items-center\">\n                <span>Reject</span>\n                <CIcon icon={cilXCircle} className=\"ms-1\" />\n              </div>\n            </CButton>\n          </CButtonGroup>\n        )\n      case 'reject':\n        return (\n          <CButton\n            color=\"success\"\n            variant=\"outline\"\n            size={'sm'}\n            onClick={() => handleApprove(id, name)}\n          >\n            <div className=\"d-inline-flex align-items-center\">\n              <span>Approve</span>\n              <CIcon icon={cilCheck} className=\"ms-1\" />\n            </div>\n          </CButton>\n        )\n      default:\n        return <p className=\"text-medium-emphasis\">No actions</p>\n    }\n  }\n\n  const fetchData = useCallback(\n    ({ skip }) => {\n      const fetchId = ++fetchIdRef.current\n      if (fetchId === fetchIdRef.current) {\n        setHasLoaded(false)\n        getClients(skip, searchQuery, status, sort).then((data) => {\n          console.log(data)\n          let pages = Math.floor(data.pagination.total / data.pagination.limit)\n          if (data.pagination.total / data.pagination.limit > pageCount) {\n            pages += 1\n          }\n          setPageCount(pages)\n          setClients(\n            data.data?.map((item) => {\n              return {\n                name: item.company,\n                contact_wa_number: item.contact.wa_number,\n                contact_name: item.contact.dir_name,\n                status: getStatusBadge(item.status),\n                actions: (\n                  <CCol>\n                    <CButton\n                      color=\"dark\"\n                      size={'sm'}\n                      onClick={() => history.push('/clients/' + item.id)}\n                    >\n                      <CIcon icon={cilPen} className=\"me-1\" />\n                      <span>Edit</span>\n                    </CButton>\n                  </CCol>\n                ),\n                approval: getApprovalBar(item.status.toLowerCase(), item.id, item.company),\n              }\n            }),\n          )\n          setHasLoaded(true)\n        })\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [history, searchQuery, status, sort],\n  )\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Company Name',\n        accessor: 'name',\n      },\n      {\n        Header: 'WhatsApp number',\n        accessor: 'contact_wa_number',\n      },\n      {\n        Header: 'Director Name',\n        accessor: 'contact_name',\n      },\n      {\n        Header: 'Status',\n        accessor: 'status',\n      },\n      {\n        Header: 'Approval',\n        accessor: 'approval',\n      },\n      {\n        Header: '',\n        accessor: 'actions',\n      },\n    ],\n    [],\n  )\n\n  return (\n    <CContainer>\n      <CRow className=\"align-items-center\">\n        <CCol>\n          <CFormLabel htmlFor=\"searchInput\">Search</CFormLabel>\n          <CFormInput\n            type=\"text\"\n            id=\"searchInput\"\n            placeholder=\"Enter search query..\"\n            onChange={(e) => {\n              setSearchQuery(e.target.value)\n            }}\n          />\n        </CCol>\n        <CCol>\n          <CFormLabel htmlFor=\"statusInput\">Status</CFormLabel>\n          <CFormSelect\n            id=\"statusInput\"\n            onChange={(e) => {\n              setStatus(e.target.value)\n            }}\n          >\n            <option value=\"\">All</option>\n            <option value=\"REQUEST\">Request</option>\n            <option value=\"VERIFIED\">Verified</option>\n            <option value=\"ACTIVE\">Active</option>\n            <option value=\"REJECT\">Reject</option>\n            <option value=\"NON_ACTIVE\">Non active</option>\n            <option value=\"FAILED\">Failed</option>\n          </CFormSelect>\n        </CCol>\n        <CCol>\n          <CFormLabel htmlFor=\"sortInput\">Sort By</CFormLabel>\n          <CFormSelect\n            id=\"sortInput\"\n            onChange={(e) => {\n              setSort(e.target.value)\n            }}\n          >\n            <option value=\"created_at:desc\">Creation date (new first)</option>\n            <option value=\"created_at:asc\">Creation date (old first)</option>\n            <option value=\"company:asc\">Company name (ascending)</option>\n            <option value=\"company:desc\">Company name (descending)</option>\n            <option value=\"NPWP:asc\">NPWP (ascending)</option>\n            <option value=\"NPWP:desc\">NPWP (descending)</option>\n            <option value=\"contact_dir_name:asc\">Contact name (ascending)</option>\n            <option value=\"contact_dir_name:desc\">Contact name (descending)</option>\n            <option value=\"contact_ktp_id:asc\">Contact KTP ID (ascending)</option>\n            <option value=\"contact_ktp_id:desc\">Contact KTP ID (descending)</option>\n          </CFormSelect>\n        </CCol>\n        <CCol className={'d-flex justify-content-end'}>\n          <CButton color=\"primary\" onClick={() => history.push('/register')}>\n            Register New\n          </CButton>\n        </CCol>\n      </CRow>\n      <br />\n      <CRow>\n        <CCard>\n          <CCardBody>\n            <Table\n              columns={columns}\n              data={clients}\n              controlledPageCount={pageCount}\n              fetchData={fetchData}\n              hasLoaded={hasLoaded}\n            />\n          </CCardBody>\n        </CCard>\n      </CRow>\n    </CContainer>\n  )\n}\n\nexport default ClientList\n","export const Services = {\n  changePassword: 'change-password',\n  clientRegister: 'client-register',\n  clientApprove: 'client-approve',\n  clientReject: 'client-reject',\n  userCreate: 'user-create',\n  userEdit: 'user-edit',\n  nasabahCreate: 'nasabah-create',\n  nasabahEdit: 'nasabah-edit',\n  profileEdit: 'profile-edit',\n  packageCreate: 'package-create',\n  packageEdit: 'package-edit',\n  productCreate: 'product-create',\n  productEdit: 'product-edit',\n  ppobAllMarginEdit: 'ppob-all-margin-edit',\n  ppobEdit: 'ppob-edit',\n}\n\nexport const Titles = {\n  'change-password': 'Password changed',\n  'client-register': 'New client registered',\n  'client-approve': 'Request approved',\n  'client-reject': 'Request rejected',\n  'user-create': 'New user created',\n  'user-edit': 'User updated',\n  'nasabah-create': 'New nasabah created',\n  'nasabah-edit': 'Nasabah updated',\n  'profile-edit': 'Profile updated',\n  'package-create': 'New package created',\n  'package-edit': 'Package updated',\n  'product-create': 'New product created',\n  'product-edit': 'Product updated',\n  'ppob-all-margin-edit': 'All services margin updated',\n  'ppob-edit': 'PPOB updated',\n}\n\nexport const Contents = {\n  'change-password': \"User's password changed\",\n  'client-register': 'New client registration request created',\n  'client-approve': 'Client registration request approved',\n  'client-reject': 'Client registration request rejected',\n  'user-create': 'New user created: ',\n  'user-edit': 'User`s info edited: ',\n  'nasabah-create': 'New nasabah created: ',\n  'nasabah-edit': 'Nasabah`s info updated: ',\n  'profile-edit': 'Profile`s info updated',\n  'package-create': 'New package created: ',\n  'package-edit': 'Package`s info updated: ',\n  'product-create': 'New product created: ',\n  'product-edit': 'Product`s info updated: ',\n  'ppob-all-margin-edit': 'All services margin updated',\n  'ppob-edit': 'PPOB`s info updated: ',\n}\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\nimport { Contents, Titles } from '../helpers/notification_types'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getNotifications(skip) {\n  return axios\n    .get(API_URL + '/users/notification?skip=' + skip, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getNotification(id) {\n  return axios\n    .get(API_URL + '/users/notification/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function createNotification(sender, service, extra) {\n  const notification = {\n    sender: sender,\n    service: service,\n    title: Titles[service],\n    content: Contents[service] + extra,\n    reference_id: '',\n  }\n\n  return axios\n    .post(API_URL + '/users/notification', notification, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n","import axios from 'axios'\nimport { apiHeader, authHeader } from './requestHeaders'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getClient(id) {\n  return axios\n    .get(API_URL + '/users/admin/client/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function updateClient(clientId, client) {\n  return axios\n    .put(\n      API_URL + '/users/admin/client/' + clientId,\n      {\n        company: client.company,\n        contact_dir_name: client.contact.dir_name,\n        address: client.address,\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function registerClient(client) {\n  return axios\n    .post(API_URL + '/users/clients/register', client, {\n      headers: apiHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function approveClient(clientId) {\n  const status = {\n    status: 'ACTIVE',\n  }\n  return axios\n    .put(API_URL + '/users/admin/client/status/' + clientId, status, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function rejectClient(clientId) {\n  const status = {\n    status: 'REJECT',\n  }\n  return axios\n    .put(API_URL + '/users/admin/client/status/' + clientId, status, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function getClients(skip, searchQuery, status, sort) {\n  if (sort === '') sort = 'created_at:desc'\n\n  return axios\n    .get(\n      API_URL +\n        '/users/admin/client?search=' +\n        searchQuery +\n        '&status=' +\n        status +\n        '&sort=' +\n        sort +\n        '&skip=' +\n        skip,\n      { headers: authHeader() },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n","import { usePagination, useTable } from 'react-table'\nimport {\n  CContainer,\n  CFormInput,\n  CHeaderText,\n  CPagination,\n  CPaginationItem,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport React, { useEffect } from 'react'\nimport Loader from './Loader'\n\n// eslint-disable-next-line react/prop-types\nexport function Table({ columns, data, controlledPageCount, fetchData, hasLoaded }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    gotoPage,\n    nextPage,\n    previousPage,\n    state: { pageIndex },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: {\n        pageIndex: 0,\n        pageSize: 10,\n      },\n      manualPagination: true,\n      pageCount: controlledPageCount,\n    },\n    usePagination,\n  )\n\n  useEffect(() => {\n    const skip = pageIndex * 10\n    fetchData && fetchData({ skip })\n  }, [fetchData, pageIndex])\n  return hasLoaded ? (\n    <>\n      <CTable hover responsive style={{ minWidth: '45rem' }} {...getTableProps()}>\n        <CTableHead>\n          {headerGroups.map((headerGroup, index) => (\n            <CTableRow key={index} {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column, index) => (\n                <CTableHeaderCell key={index} {...column.getHeaderProps()}>\n                  {column.render('Header')}\n                </CTableHeaderCell>\n              ))}\n            </CTableRow>\n          ))}\n        </CTableHead>\n        <CTableBody {...getTableBodyProps()}>\n          {page.map((row, index) => {\n            prepareRow(row)\n            return (\n              <CTableRow key={index} {...row.getRowProps()}>\n                {row.cells.map((cell, index) => {\n                  return (\n                    <CTableDataCell key={index} {...cell.getCellProps()}>\n                      {cell.render('Cell')}\n                    </CTableDataCell>\n                  )\n                })}\n              </CTableRow>\n            )\n          })}\n        </CTableBody>\n      </CTable>\n\n      <CContainer className={'d-flex justify-content-end align-items-center'}>\n        <CHeaderText className={'pe-2'}>Go to page:</CHeaderText>\n        <CFormInput\n          min={1}\n          max={controlledPageCount}\n          type=\"number\"\n          defaultValue={pageIndex + 1}\n          onChange={(e) => {\n            const page = e.target.value ? Number(e.target.value) - 1 : 0\n            gotoPage(page)\n          }}\n          style={{ width: '100px' }}\n        />\n      </CContainer>\n\n      <CPagination align=\"center\" aria-label=\"Page navigation\">\n        <CPaginationItem aria-label=\"First\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {'<<'}\n        </CPaginationItem>\n        <CPaginationItem\n          aria-label=\"Previous\"\n          onClick={() => previousPage()}\n          disabled={!canPreviousPage}\n        >\n          {'<'}\n        </CPaginationItem>\n        <CPaginationItem aria-label=\"Current\" style={{ pointerEvents: 'none' }}>\n          Page <strong>{pageIndex + 1}</strong> of <strong>{pageOptions.length}</strong>\n        </CPaginationItem>\n        <CPaginationItem aria-label=\"Next\" onClick={() => nextPage()} disabled={!canNextPage}>\n          {'>'}\n        </CPaginationItem>\n        <CPaginationItem\n          aria-label=\"Last\"\n          onClick={() => gotoPage(controlledPageCount - 1)}\n          disabled={!canNextPage}\n        >\n          {'>>'}\n        </CPaginationItem>\n      </CPagination>\n    </>\n  ) : (\n    Loader()\n  )\n}\n"],"sourceRoot":""}