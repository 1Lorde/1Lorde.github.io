{"version":3,"sources":["views/products/products_ppob/ProductsPpob.js","helpers/notification_types.js","api/api_notification.js","helpers/utils.js","api/api_service.js"],"names":["ProductsPpob","userState","useContext","UserContext","history","useHistory","services","setServices","useState","hasLoaded","setHasLoaded","servicesMargin","setServicesMargin","validated","setValidated","searchQuery","setSearchQuery","category","setCategory","active","setActive","marginBy","setMarginBy","useEffect","console","log","getServices","then","data","ok","getServicesMargin","service_margin","className","xl","htmlFor","type","id","placeholder","onChange","e","target","value","noValidate","onSubmit","event","preventDefault","form","currentTarget","checkValidity","stopPropagation","updateServicesMargin","createNotification","user","wa_number","Services","ppobAllMarginEdit","resp","store","addNotification","success","danger","error","defaultValue","margin_by","nominal","max","tryParseInt","size","length","map","service","index","xxl","md","style","width","height","cursor","onClick","push","orientation","src","name","desc","color","shape","Loader","changePassword","clientRegister","clientApprove","clientReject","userCreate","userEdit","nasabahCreate","nasabahEdit","profileEdit","packageCreate","packageEdit","productCreate","productEdit","ppobEdit","Titles","Contents","API_URL","getNotifications","skip","axios","get","headers","authHeader","response","catch","reason","status","message","getNotification","sender","extra","notification","title","content","reference_id","post","text","parsed","parseInt","isNaN","getService","updateService","put"],"mappings":"iGAAA,gHAwOeA,UA3MM,KACnB,MAAM,UAAEC,GAAcC,qBAAWC,KAC3BC,EAAUC,eACTC,EAAUC,GAAeC,mBAAS,KAClCC,EAAWC,GAAgBF,sBAC3BG,EAAgBC,GAAqBJ,mBAAS,KAC9CK,EAAWC,GAAgBN,oBAAS,IACpCO,EAAaC,GAAkBR,mBAAS,KACxCS,EAAUC,GAAeV,mBAAS,KAClCW,EAAQC,GAAaZ,mBAAS,KAC9Ba,EAAUC,GAAed,mBAAS,IAmDzC,OApBAe,qBAAU,KACRC,QAAQC,IAAIJ,GACZK,YAAYX,EAAaE,EAAUE,EAAQE,GAAUM,MAAMC,KACzC,IAAZA,EAAKC,KACPL,QAAQC,IAAIG,GACZrB,EAAYqB,EAAKtB,UACZG,GACHqB,cAAoBH,MAAMC,KACR,IAAZA,EAAKC,KACPL,QAAQC,IAAIG,GACZhB,EAAkBgB,EAAKG,gBACvBrB,GAAa,aAOtB,CAACK,EAAaE,EAAUE,EAAQE,IAE5BZ,EACL,eAAC,IAAD,WACE,eAAC,IAAD,CAAMuB,UAAU,0BAAhB,UACE,eAAC,IAAD,CAAMC,GAAI,EAAV,UACE,cAAC,IAAD,CAAYC,QAAQ,cAApB,oBACA,cAAC,IAAD,CACEC,KAAK,OACLC,GAAG,cACHC,YAAY,uBACZC,SAAWC,IACTvB,EAAeuB,EAAEC,OAAOC,aAI9B,eAAC,IAAD,WACE,cAAC,IAAD,CAAYP,QAAQ,gBAApB,sBACA,eAAC,IAAD,CACEE,GAAG,gBACHE,SAAWC,IACTrB,EAAYqB,EAAEC,OAAOC,QAHzB,UAME,wBAAQA,MAAM,GAAd,iBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,UAAd,2BAGJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAYP,QAAQ,cAApB,oBACA,eAAC,IAAD,CACEE,GAAG,cACHE,SAAWC,IACTnB,EAAUmB,EAAEC,OAAOC,QAHvB,UAME,wBAAQA,MAAM,GAAd,iBACA,wBAAQA,MAAO,EAAf,oBACA,wBAAQA,MAAO,EAAf,4BAGJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAYP,QAAQ,gBAApB,uBACA,eAAC,IAAD,CACEE,GAAG,gBACHE,SAAWC,IACTjB,EAAYiB,EAAEC,OAAOC,QAHzB,UAME,wBAAQA,MAAM,GAAd,iBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,UAAd,8BAIN,cAAC,IAAD,CAAOC,YAAU,EAAC7B,UAAWA,EAAW8B,SAvGRC,IAClCA,EAAMC,iBAEN,MAAMC,EAAOF,EAAMG,eACU,IAAzBD,EAAKE,kBACPJ,EAAMC,iBACND,EAAMK,mBAERnC,GAAa,GAETgC,EAAKE,kBACPxB,QAAQC,IAAId,GACZuC,YAAqBvC,GAAgBgB,MAAMC,IACrCA,EAAKC,IACPL,QAAQC,IAAIG,GACZuB,YAAmBlD,EAAUmD,KAAKC,UAAWC,IAASC,kBAAmB,IAAI5B,MAC1E6B,IACChC,QAAQC,IAAI,yBAA2B+B,EAAKpB,OAGhDqB,QAAMC,gBAAgBC,YAAQ,2CAE9BnC,QAAQC,IAAIG,GACZ6B,QAAMC,gBAAgBE,YAAOhC,EAAKiC,cAgFtC,SACE,eAAC,IAAD,CAAM7B,UAAU,0BAAhB,UACE,eAAC,IAAD,CAAMC,GAAI,EAAV,UACE,cAAC,IAAD,CAAYC,QAAQ,YAApB,iCACA,eAAC,IAAD,CACEE,GAAG,YACH0B,aAAcnD,EAAeoD,UAC7BzB,SAAWC,IACT3B,GAAmBD,IAAD,IACbA,EACHoD,UAAWxB,EAAEC,OAAOC,WAN1B,UAUE,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,UAAd,2BAIJ,eAAC,IAAD,CAAMR,GAAI,EAAV,UACE,cAAC,IAAD,CAAYC,QAAQ,UAApB,qBACA,cAAC,IAAD,CACEE,GAAG,UACHD,KAAK,SACL2B,aAAcnD,EAAeqD,QAC7BC,IAAkC,YAA7BtD,EAAeoD,UAA0B,IAAM,IACpDzB,SAAWC,IACT3B,GAAmBD,IAAD,IACbA,EACHqD,QAASE,YAAY3B,EAAEC,OAAOC,iBAKtC,cAAC,IAAD,CAAMR,GAAI,EAAV,SACE,cAAC,IAAD,CAASD,UAAU,OAAOmC,KAAK,KAAKhC,KAAK,SAAzC,kCAON,cAAC,IAAD,CAAMH,UAAU,wBAAhB,SACG1B,EAAS8D,OAAS,EAAlB,OACC9D,QADD,IACCA,OADD,EACCA,EAAU+D,KAAI,CAACC,EAASC,IAEpB,cAAC,IAAD,CAAkBC,IAAK,EAAGC,GAAI,EAAGzC,UAAU,OAA3C,SACE,eAAC,IAAD,CACE0C,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,OAAQ,WACjDC,QAAS,KACP1E,EAAQ2E,KAAK,kBAAoBT,EAAQlC,KAH7C,UAME,cAAC,IAAD,CACE4C,YAAY,MACZC,IAAK,gDAAkDX,EAAQY,OAEjE,eAAC,IAAD,CAAWlD,UAAU,cAArB,UACE,cAAC,IAAD,UAAasC,EAAQY,OACrB,cAAC,IAAD,UAAYZ,EAAQa,OACnBb,EAAQnD,OACP,cAAC,IAAD,CAAQiE,MAAM,UAAUC,MAAM,eAA9B,oBAIA,cAAC,IAAD,CAAQD,MAAM,OAAOC,MAAM,eAA3B,6BAnBGd,KA6Bf,mCACE,qBAAKvC,UAAU,gCAAf,SACE,cAAC,IAAD,qCAOVsD,gB,iCCpOJ,sGAAO,MAAMhC,EAAW,CACtBiC,eAAgB,kBAChBC,eAAgB,kBAChBC,cAAe,iBACfC,aAAc,gBACdC,WAAY,cACZC,SAAU,YACVC,cAAe,iBACfC,YAAa,eACbC,YAAa,eACbC,cAAe,iBACfC,YAAa,eACbC,cAAe,iBACfC,YAAa,eACb5C,kBAAmB,uBACnB6C,SAAU,aAGCC,EAAS,CACpB,kBAAmB,mBACnB,kBAAmB,wBACnB,iBAAkB,mBAClB,gBAAiB,mBACjB,cAAe,mBACf,YAAa,eACb,iBAAkB,sBAClB,eAAgB,kBAChB,eAAgB,kBAChB,iBAAkB,sBAClB,eAAgB,kBAChB,iBAAkB,sBAClB,eAAgB,kBAChB,uBAAwB,8BACxB,YAAa,gBAGFC,EAAW,CACtB,kBAAmB,0BACnB,kBAAmB,0CACnB,iBAAkB,uCAClB,gBAAiB,uCACjB,cAAe,qBACf,YAAa,uBACb,iBAAkB,wBAClB,eAAgB,2BAChB,eAAgB,yBAChB,iBAAkB,wBAClB,eAAgB,2BAChB,iBAAkB,wBAClB,eAAgB,2BAChB,uBAAwB,8BACxB,YAAa,0B,iCCnDf,8IAIA,MAAMC,EAAU,2BAET,SAASC,EAAiBC,GAC/B,OAAOC,IACJC,IAAIJ,EAAU,4BAA8BE,EAAM,CAAEG,QAASC,gBAC7DlF,MAAMmF,GACEA,EAASlF,OAEjBmF,OAAOC,IACN,GAA+B,MAA3BA,EAAOF,SAASG,OAElB,OADAzF,QAAQC,IAAIuF,EAAOE,SACZ,QAKR,SAASC,EAAgB/E,GAC9B,OAAOsE,IACJC,IAAIJ,EAAU,uBAAyBnE,EAAI,CAAEwE,QAASC,gBACtDlF,MAAMmF,GACEA,EAASlF,OAEjBmF,OAAOC,IACN,GAA+B,MAA3BA,EAAOF,SAASG,OAElB,OADAzF,QAAQC,IAAIuF,EAAOE,SACZ,QAKR,SAAS/D,EAAmBiE,EAAQ9C,EAAS+C,GAClD,MAAMC,EAAe,CACnBF,OAAQA,EACR9C,QAASA,EACTiD,MAAOlB,IAAO/B,GACdkD,QAASlB,IAAShC,GAAW+C,EAC7BI,aAAc,IAGhB,OAAOf,IACJgB,KAAKnB,EAAU,sBAAuBe,EAAc,CACnDV,QAASC,gBAEVlF,MAAMmF,GACEA,EAASlF,OAEjBmF,OAAOC,IACNxF,QAAQC,IAAIuF,EAAOF,SAASlF,W,iCCnD3B,SAASsC,EAAYyD,GAC1B,MAAMC,EAASC,SAASF,GACxB,OAAIG,MAAMF,GACD,GAEFA,EALT,mC,iCCAA,yMAGA,MAAMrB,EAAU,2BAET,SAAS7E,EAAYX,EAAaE,EAAUE,EAAQE,GACzD,OAAOqF,IACJC,IACCJ,EACE,gCACAxF,EACA,aACAE,EACA,WACAE,EACA,cACAE,EACF,CAAEuF,QAASC,gBAEZlF,MAAMmF,GACEA,EAASlF,OAEjBmF,OAAOC,IACNxF,QAAQC,IAAIuF,MAIX,SAASe,EAAW3F,GACzB,OAAOsE,IACJC,IAAIJ,EAAU,yBAA2BnE,EAAI,CAAEwE,QAASC,gBACxDlF,MAAMmF,GACEA,EAASlF,OAEjBmF,OAAOC,IACNxF,QAAQC,IAAIuF,MAIX,SAASgB,EAAc5F,EAAIkC,GAChC,OAAOoC,IACJuB,IAAI1B,EAAU,yBAA2BnE,EAAIkC,EAAS,CACrDsC,QAASC,gBAEVlF,MAAMmF,GACEA,EAASlF,OAEjBmF,OAAOC,GACCA,EAAOF,SAASlF,OAItB,SAASE,IACd,OAAO4E,IACJC,IAAIJ,EAAU,8BAA+B,CAC5CK,QAASC,gBAEVlF,MAAMmF,GACEA,EAASlF,OAEjBmF,OAAOC,GACCA,EAAOF,SAASlF,OAItB,SAASsB,EAAqBvC,GACnC,OAAO+F,IACJuB,IACC1B,EAAU,8BACV,CACExC,UAAWpD,EAAeoD,UAC1BC,QAASrD,EAAeqD,SAE1B,CACE4C,QAASC,gBAGZlF,MAAMmF,GACEA,EAASlF,OAEjBmF,OAAOC,GACCA,EAAOF,SAASlF","file":"static/js/8.db5a8b33.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport {\n  CBadge,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardImage,\n  CCardText,\n  CCardTitle,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CHeaderText,\n  CRow,\n} from '@coreui/react'\n\nimport { useHistory } from 'react-router-dom'\nimport Loader from '../../../components/Loader'\nimport { getServices, getServicesMargin, updateServicesMargin } from '../../../api/api_service'\nimport { store } from 'react-notifications-component'\nimport { danger, success } from '../../../helpers/notifications'\nimport { tryParseInt } from '../../../helpers/utils'\nimport { createNotification } from '../../../api/api_notification'\nimport { Services } from '../../../helpers/notification_types'\nimport { UserContext } from '../../../helpers/user'\n\nconst ProductsPpob = () => {\n  const { userState } = useContext(UserContext)\n  const history = useHistory()\n  const [services, setServices] = useState([])\n  const [hasLoaded, setHasLoaded] = useState()\n  const [servicesMargin, setServicesMargin] = useState({})\n  const [validated, setValidated] = useState(false)\n  const [searchQuery, setSearchQuery] = useState('')\n  const [category, setCategory] = useState('')\n  const [active, setActive] = useState('')\n  const [marginBy, setMarginBy] = useState('')\n\n  const handleServicesMarginUpdate = (event) => {\n    event.preventDefault()\n\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    setValidated(true)\n\n    if (form.checkValidity()) {\n      console.log(servicesMargin)\n      updateServicesMargin(servicesMargin).then((data) => {\n        if (data.ok) {\n          console.log(data)\n          createNotification(userState.user.wa_number, Services.ppobAllMarginEdit, '').then(\n            (resp) => {\n              console.log('Notification created: ' + resp.id)\n            },\n          )\n          store.addNotification(success('Service margin updated successfully.'))\n        } else {\n          console.log(data)\n          store.addNotification(danger(data.error))\n        }\n      })\n    }\n  }\n\n  useEffect(() => {\n    console.log(marginBy)\n    getServices(searchQuery, category, active, marginBy).then((data) => {\n      if (data.ok === true) {\n        console.log(data)\n        setServices(data.services)\n        if (!hasLoaded) {\n          getServicesMargin().then((data) => {\n            if (data.ok === true) {\n              console.log(data)\n              setServicesMargin(data.service_margin)\n              setHasLoaded(true)\n            }\n          })\n        }\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchQuery, category, active, marginBy])\n\n  return hasLoaded ? (\n    <CContainer>\n      <CRow className=\"align-items-center mb-4\">\n        <CCol xl={4}>\n          <CFormLabel htmlFor=\"searchInput\">Search</CFormLabel>\n          <CFormInput\n            type=\"text\"\n            id=\"searchInput\"\n            placeholder=\"Enter search query..\"\n            onChange={(e) => {\n              setSearchQuery(e.target.value)\n            }}\n          />\n        </CCol>\n        <CCol>\n          <CFormLabel htmlFor=\"categoryInput\">Category</CFormLabel>\n          <CFormSelect\n            id=\"categoryInput\"\n            onChange={(e) => {\n              setCategory(e.target.value)\n            }}\n          >\n            <option value=\"\">All</option>\n            <option value=\"postpaid\">Postpaid</option>\n            <option value=\"prepaid\">Prepaid</option>\n          </CFormSelect>\n        </CCol>\n        <CCol>\n          <CFormLabel htmlFor=\"statusInput\">Status</CFormLabel>\n          <CFormSelect\n            id=\"statusInput\"\n            onChange={(e) => {\n              setActive(e.target.value)\n            }}\n          >\n            <option value=\"\">All</option>\n            <option value={1}>Active</option>\n            <option value={0}>Inactive</option>\n          </CFormSelect>\n        </CCol>\n        <CCol>\n          <CFormLabel htmlFor=\"marginByInput\">Margin By</CFormLabel>\n          <CFormSelect\n            id=\"marginByInput\"\n            onChange={(e) => {\n              setMarginBy(e.target.value)\n            }}\n          >\n            <option value=\"\">All</option>\n            <option value=\"fix_cost\">Fix Cost</option>\n            <option value=\"percent\">Percent</option>\n          </CFormSelect>\n        </CCol>\n      </CRow>\n      <CForm noValidate validated={validated} onSubmit={handleServicesMarginUpdate}>\n        <CRow className=\"align-items-center mb-5\">\n          <CCol xl={3}>\n            <CFormLabel htmlFor=\"margin_by\">Margin By (for all)</CFormLabel>\n            <CFormSelect\n              id=\"margin_by\"\n              defaultValue={servicesMargin.margin_by}\n              onChange={(e) => {\n                setServicesMargin((servicesMargin) => ({\n                  ...servicesMargin,\n                  margin_by: e.target.value,\n                }))\n              }}\n            >\n              <option value=\"fix_cost\">Fix Cost</option>\n              <option value=\"percent\">Percent</option>\n            </CFormSelect>\n          </CCol>\n\n          <CCol xl={3}>\n            <CFormLabel htmlFor=\"nominal\">Nominal</CFormLabel>\n            <CFormInput\n              id=\"nominal\"\n              type=\"number\"\n              defaultValue={servicesMargin.nominal}\n              max={servicesMargin.margin_by === 'percent' ? 100 : 100000}\n              onChange={(e) => {\n                setServicesMargin((servicesMargin) => ({\n                  ...servicesMargin,\n                  nominal: tryParseInt(e.target.value),\n                }))\n              }}\n            />\n          </CCol>\n          <CCol xl={3}>\n            <CButton className=\"mt-4\" size=\"sm\" type=\"submit\">\n              Update margin\n            </CButton>\n          </CCol>\n        </CRow>\n      </CForm>\n\n      <CRow className=\"justify-content-start\">\n        {services.length > 0 ? (\n          services?.map((service, index) => {\n            return (\n              <CCol key={index} xxl={3} md={5} className=\"mb-4\">\n                <CCard\n                  style={{ width: '18rem', height: '100%', cursor: 'pointer' }}\n                  onClick={() => {\n                    history.push('/products/ppob/' + service.id)\n                  }}\n                >\n                  <CCardImage\n                    orientation=\"top\"\n                    src={'https://via.placeholder.com/550x390.png?text=' + service.name}\n                  />\n                  <CCardBody className=\"text-center\">\n                    <CCardTitle>{service.name}</CCardTitle>\n                    <CCardText>{service.desc}</CCardText>\n                    {service.active ? (\n                      <CBadge color=\"success\" shape=\"rounded-pill\">\n                        Active\n                      </CBadge>\n                    ) : (\n                      <CBadge color=\"dark\" shape=\"rounded-pill\">\n                        Inactive\n                      </CBadge>\n                    )}\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            )\n          })\n        ) : (\n          <>\n            <div className=\"d-flex justify-content-center\">\n              <CHeaderText>No PPOB found</CHeaderText>\n            </div>\n          </>\n        )}\n      </CRow>\n    </CContainer>\n  ) : (\n    Loader()\n  )\n}\n\nexport default ProductsPpob\n","export const Services = {\n  changePassword: 'change-password',\n  clientRegister: 'client-register',\n  clientApprove: 'client-approve',\n  clientReject: 'client-reject',\n  userCreate: 'user-create',\n  userEdit: 'user-edit',\n  nasabahCreate: 'nasabah-create',\n  nasabahEdit: 'nasabah-edit',\n  profileEdit: 'profile-edit',\n  packageCreate: 'package-create',\n  packageEdit: 'package-edit',\n  productCreate: 'product-create',\n  productEdit: 'product-edit',\n  ppobAllMarginEdit: 'ppob-all-margin-edit',\n  ppobEdit: 'ppob-edit',\n}\n\nexport const Titles = {\n  'change-password': 'Password changed',\n  'client-register': 'New client registered',\n  'client-approve': 'Request approved',\n  'client-reject': 'Request rejected',\n  'user-create': 'New user created',\n  'user-edit': 'User updated',\n  'nasabah-create': 'New nasabah created',\n  'nasabah-edit': 'Nasabah updated',\n  'profile-edit': 'Profile updated',\n  'package-create': 'New package created',\n  'package-edit': 'Package updated',\n  'product-create': 'New product created',\n  'product-edit': 'Product updated',\n  'ppob-all-margin-edit': 'All services margin updated',\n  'ppob-edit': 'PPOB updated',\n}\n\nexport const Contents = {\n  'change-password': \"User's password changed\",\n  'client-register': 'New client registration request created',\n  'client-approve': 'Client registration request approved',\n  'client-reject': 'Client registration request rejected',\n  'user-create': 'New user created: ',\n  'user-edit': 'User`s info edited: ',\n  'nasabah-create': 'New nasabah created: ',\n  'nasabah-edit': 'Nasabah`s info updated: ',\n  'profile-edit': 'Profile`s info updated',\n  'package-create': 'New package created: ',\n  'package-edit': 'Package`s info updated: ',\n  'product-create': 'New product created: ',\n  'product-edit': 'Product`s info updated: ',\n  'ppob-all-margin-edit': 'All services margin updated',\n  'ppob-edit': 'PPOB`s info updated: ',\n}\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\nimport { Contents, Titles } from '../helpers/notification_types'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getNotifications(skip) {\n  return axios\n    .get(API_URL + '/users/notification?skip=' + skip, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getNotification(id) {\n  return axios\n    .get(API_URL + '/users/notification/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function createNotification(sender, service, extra) {\n  const notification = {\n    sender: sender,\n    service: service,\n    title: Titles[service],\n    content: Contents[service] + extra,\n    reference_id: '',\n  }\n\n  return axios\n    .post(API_URL + '/users/notification', notification, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n","export function tryParseInt(text) {\n  const parsed = parseInt(text)\n  if (isNaN(parsed)) {\n    return ''\n  }\n  return parsed\n}\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getServices(searchQuery, category, active, marginBy) {\n  return axios\n    .get(\n      API_URL +\n        '/transaction/services?search=' +\n        searchQuery +\n        '&category=' +\n        category +\n        '&active=' +\n        active +\n        '&margin_by=' +\n        marginBy,\n      { headers: authHeader() },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function getService(id) {\n  return axios\n    .get(API_URL + '/transaction/services/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function updateService(id, service) {\n  return axios\n    .put(API_URL + '/transaction/services/' + id, service, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function getServicesMargin() {\n  return axios\n    .get(API_URL + '/transaction/service_margin', {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function updateServicesMargin(servicesMargin) {\n  return axios\n    .put(\n      API_URL + '/transaction/service_margin',\n      {\n        margin_by: servicesMargin.margin_by,\n        nominal: servicesMargin.nominal,\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n"],"sourceRoot":""}