{"version":3,"sources":["views/nasabah/nasabah_list/NasabahList.js","helpers/api_requests.js","components/Table.js"],"names":["NasabahList","history","useHistory","hasLoaded","setHasLoaded","useState","nasabahList","setNasabah","searchQuery","setSearchQuery","status","setStatus","sort","setSort","useEffect","getNasabah","then","data","console","log","map","item","name","number","wa_number","location","address","active","action","color","size","onClick","push","id","columns","React","useMemo","Header","accessor","className","htmlFor","type","placeholder","onChange","e","target","value","length","Loader","API_URL","getUsers","role","axios","get","headers","authHeader","response","catch","reason","message","getUser","updateUser","user","put","createUser","post","getClient","updateClient","clientId","client","getClients","getProducts","createProduct","product","updateProduct","changes","description","balance_start","percent_rate","limit_min","limit_max","rate_type","credit_simulation_id","getServices","nasabah_list","getNasabahCount","getAccountOfficerCount","Table","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","state","pageIndex","useTable","autoResetPageIndex","usePagination","hover","responsive","style","minWidth","headerGroup","index","getHeaderGroupProps","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","min","max","defaultValue","Number","width","align","disabled","pointerEvents"],"mappings":"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","file":"static/js/4.68a8cbf4.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CHeaderText,\n  CRow,\n} from '@coreui/react'\nimport { useHistory } from 'react-router-dom'\nimport { getNasabah } from '../../../helpers/api_requests'\nimport Loader from '../../../components/Loader'\nimport { Table } from '../../../components/Table'\n\nconst NasabahList = () => {\n  const history = useHistory()\n  const [hasLoaded, setHasLoaded] = useState()\n  const [nasabahList, setNasabah] = useState([])\n  const [searchQuery, setSearchQuery] = useState('')\n  const [status, setStatus] = useState('')\n  const [sort, setSort] = useState('')\n\n  useEffect(() => {\n    getNasabah(searchQuery, status, sort).then((data) => {\n      console.log(data)\n      setNasabah(\n        data?.map((item) => {\n          return {\n            name: item.name,\n            number: item.wa_number,\n            location: item.address,\n            status: item.active ? 'active' : 'inactive',\n            action: (\n              <CButton color=\"dark\" size={'sm'} onClick={() => history.push('/nasabah/' + item.id)}>\n                Edit\n              </CButton>\n            ),\n          }\n        }),\n      )\n      setHasLoaded(true)\n    })\n  }, [history, searchQuery, status, sort])\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Name',\n        accessor: 'name',\n      },\n      {\n        Header: 'WhatsApp Number',\n        accessor: 'number',\n      },\n      {\n        Header: 'Location',\n        accessor: 'location',\n      },\n      {\n        Header: 'Status',\n        accessor: 'status',\n      },\n      {\n        Header: 'Action',\n        accessor: 'action',\n      },\n    ],\n    [],\n  )\n\n  return hasLoaded ? (\n    <CContainer>\n      <CRow className=\"align-items-center\">\n        <CCol>\n          <CFormLabel htmlFor=\"searchInput\">Search</CFormLabel>\n          <CFormInput\n            type=\"text\"\n            id=\"searchInput\"\n            placeholder=\"Enter search query..\"\n            onChange={(e) => {\n              setSearchQuery(e.target.value)\n            }}\n          />\n        </CCol>\n        <CCol>\n          <CFormLabel htmlFor=\"statusInput\">Status</CFormLabel>\n          <CFormSelect\n            id=\"statusInput\"\n            onChange={(e) => {\n              setStatus(e.target.value)\n            }}\n          >\n            <option value=\"\">All</option>\n            <option value=\"false\">Inactive</option>\n            <option value=\"true\">Active</option>\n          </CFormSelect>\n        </CCol>\n        <CCol>\n          <CFormLabel htmlFor=\"sortInput\">Sort By</CFormLabel>\n          <CFormSelect\n            id=\"sortInput\"\n            onChange={(e) => {\n              setSort(e.target.value)\n            }}\n          >\n            <option value=\"name:asc\">Name (ascending)</option>\n            <option value=\"name:desc\">Name (descending)</option>\n            <option value=\"created_at:desc\">Creation date (new first)</option>\n            <option value=\"created_at:asc\">Creation date (old first)</option>\n          </CFormSelect>\n        </CCol>\n        <CCol className={'d-flex justify-content-end'}>\n          <CButton color=\"primary\" onClick={() => history.push('/users/create')}>\n            Add New\n          </CButton>\n        </CCol>\n      </CRow>\n      <br />\n      <CRow>\n        <CCard>\n          <CCardBody>\n            {nasabahList.length > 0 ? (\n              <Table columns={columns} data={nasabahList} />\n            ) : (\n              <>\n                <div className=\"d-flex justify-content-center\">\n                  <CHeaderText>No nasabah found</CHeaderText>\n                </div>\n              </>\n            )}\n          </CCardBody>\n        </CCard>\n      </CRow>\n    </CContainer>\n  ) : (\n    Loader()\n  )\n}\n\nexport default NasabahList\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getUsers(searchQuery, status, role, sort) {\n  return axios\n    .get(\n      API_URL +\n        '/auth/user?search=' +\n        searchQuery +\n        '&status=' +\n        status +\n        '&role=' +\n        role +\n        '&sort=' +\n        sort,\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getUser(id) {\n  return axios\n    .get(API_URL + '/auth/user/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function updateUser(user) {\n  return axios\n    .put(\n      API_URL + '/auth/user/' + user.id,\n      {\n        wa_number: user.wa_number,\n        name: user.name,\n        address: user.address,\n        role: user.role,\n        status: user.status,\n        // avatar: user.avatar,\n        // ktp_image: user.ktp_image,\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function createUser(user) {\n  return axios\n    .post(API_URL + '/auth/user', user, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function getClient(id) {\n  return axios\n    .get(API_URL + '/users/admin/client/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function updateClient(clientId, client) {\n  return axios\n    .put(API_URL + '/users/admin/client/' + clientId, client, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function getClients(searchQuery, status, sort) {\n  return axios\n    .get(\n      API_URL + '/users/admin/client?search=' + searchQuery + '&status=' + status + '&sort=' + sort,\n      { headers: authHeader() },\n    )\n    .then((response) => {\n      return response.data.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getProducts(searchQuery, type) {\n  return axios\n    .get(API_URL + '/transaction/products?search=' + searchQuery + '&tipe=' + type, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function createProduct(product) {\n  return axios\n    .post(API_URL + '/transaction/products', product, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n\nexport function updateProduct(product) {\n  const changes = {\n    name: product.name,\n    description: product.description,\n    balance_start: product.balance_start,\n    percent_rate: product.percent_rate,\n    limit_min: product.limit_min,\n    limit_max: product.limit_max,\n    active: product.active,\n    rate_type: product.rate_type,\n  }\n\n  return axios\n    .put(API_URL + '/transaction/products/' + product.credit_simulation_id, changes, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function getServices() {\n  return axios\n    .get(API_URL + '/transaction/services', { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function getNasabah(searchQuery, status, sort) {\n  return axios\n    .get(\n      API_URL + '/nasabah/nasabah?search=' + searchQuery + '&status=' + status + '&sort=' + sort,\n      { headers: authHeader() },\n    )\n    .then((response) => {\n      return response.data.nasabah_list\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getNasabahCount() {\n  return axios\n    .get(API_URL + '/auth/stat/nasabah/all', { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getAccountOfficerCount() {\n  return axios\n    .get(API_URL + '/auth/stat/account_officer/all', { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getClientCount() {\n  return axios\n    .get(API_URL + '/auth/stat/clients/all', { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n","import { usePagination, useTable } from 'react-table'\nimport {\n  CContainer,\n  CFormInput,\n  CHeaderText,\n  CPagination,\n  CPaginationItem,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport React from 'react'\n\n// eslint-disable-next-line react/prop-types\nexport function Table({ columns, data }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    state: { pageIndex },\n  } = useTable({ columns, data, autoResetPageIndex: true }, usePagination)\n\n  return (\n    <>\n      <CTable hover responsive style={{ minWidth: '45rem' }} {...getTableProps()}>\n        <CTableHead>\n          {headerGroups.map((headerGroup, index) => (\n            <CTableRow key={index} {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column, index) => (\n                <CTableHeaderCell key={index} {...column.getHeaderProps()}>\n                  {column.render('Header')}\n                </CTableHeaderCell>\n              ))}\n            </CTableRow>\n          ))}\n        </CTableHead>\n        <CTableBody {...getTableBodyProps()}>\n          {page.map((row, index) => {\n            prepareRow(row)\n            return (\n              <CTableRow key={index} {...row.getRowProps()}>\n                {row.cells.map((cell, index) => {\n                  return (\n                    <CTableDataCell key={index} {...cell.getCellProps()}>\n                      {cell.render('Cell')}\n                    </CTableDataCell>\n                  )\n                })}\n              </CTableRow>\n            )\n          })}\n        </CTableBody>\n      </CTable>\n\n      <CContainer className={'d-flex justify-content-end align-items-center'}>\n        <CHeaderText className={'pe-2'}>Go to page:</CHeaderText>\n        <CFormInput\n          min={1}\n          max={pageCount}\n          type=\"number\"\n          defaultValue={pageIndex + 1}\n          onChange={(e) => {\n            const page = e.target.value ? Number(e.target.value) - 1 : 0\n            gotoPage(page)\n          }}\n          style={{ width: '100px' }}\n        />\n      </CContainer>\n\n      <CPagination align=\"center\" aria-label=\"Page navigation\">\n        <CPaginationItem aria-label=\"First\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {'<<'}\n        </CPaginationItem>\n        <CPaginationItem\n          aria-label=\"Previous\"\n          onClick={() => previousPage()}\n          disabled={!canNextPage}\n        >\n          {'<'}\n        </CPaginationItem>\n        <CPaginationItem aria-label=\"Current\" style={{ pointerEvents: 'none' }}>\n          Page <strong>{pageIndex + 1}</strong> of <strong>{pageOptions.length}</strong>\n        </CPaginationItem>\n        <CPaginationItem aria-label=\"Next\" onClick={() => nextPage()} disabled={!canPreviousPage}>\n          {'>'}\n        </CPaginationItem>\n        <CPaginationItem\n          aria-label=\"Last\"\n          onClick={() => gotoPage(pageCount - 1)}\n          disabled={!canNextPage}\n        >\n          {'>>'}\n        </CPaginationItem>\n      </CPagination>\n    </>\n  )\n}\n"],"sourceRoot":""}