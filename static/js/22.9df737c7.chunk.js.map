{"version":3,"sources":["views/client/client_detail/ClientDetail.js","api/api_client.js"],"names":["ClientDetail","t","useTranslation","history","useHistory","id","useParams","client","setClient","useState","hasLoaded","setHasLoaded","useEffect","getClient","then","profile_data","console","log","className","htmlFor","type","placeholder","value","company","onChange","e","target","address","disabled","documents","NPWP","no","SIUP","defaultValue","TDP","fluid","rounded","src","width","height","contact","dir_name","ktp_id","wa_number","package","name","status","color","onClick","updateClient","data","ok","store","addNotification","success","push","message","danger","error","Loader","API_URL","axios","get","headers","authHeader","response","catch","reason","updateProfileCompany","clientId","put","contact_dir_name","registerClient","post","apiHeader","approveClient","rejectClient","getClients","skip","searchQuery","sort"],"mappings":"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","file":"static/js/22.9df737c7.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CImage,\n  CRow,\n} from '@coreui/react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport Loader from '../../../components/Loader'\nimport { store } from 'react-notifications-component'\nimport { danger, success } from '../../../helpers/notifications'\nimport { getClient, updateClient } from '../../../api/api_client'\nimport { useTranslation } from 'react-i18next'\n\nconst ClientDetail = () => {\n  const { t } = useTranslation()\n  const history = useHistory()\n  let { id } = useParams()\n  const [client, setClient] = useState()\n  const [hasLoaded, setHasLoaded] = useState()\n\n  useEffect(\n    () => {\n      getClient(id).then((profile_data) => {\n        setClient(profile_data)\n        console.log(profile_data)\n        setHasLoaded(true)\n      })\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  )\n\n  useEffect(() => {\n    console.log(client)\n  }, [client])\n\n  const handleEdit = () => {\n    console.log(client)\n    updateClient(client.id, client).then((data) => {\n      if (data.ok) {\n        store.addNotification(success(t('notifications.client_update', { client: client.company })))\n        history.push('/clients')\n      } else {\n        if (data.message) {\n          console.log(data)\n          store.addNotification(danger(data.message))\n        } else {\n          console.log(data)\n          store.addNotification(danger(data.error))\n        }\n      }\n    })\n  }\n\n  return hasLoaded ? (\n    <CForm>\n      <CRow>\n        <CCol>\n          <div className=\"mb-3\">\n            <CFormLabel htmlFor=\"company_name\">{t('company_name')}</CFormLabel>\n            <CFormInput\n              type=\"text\"\n              id=\"company_name\"\n              placeholder={t('no_data')}\n              value={client.company}\n              onChange={(e) => {\n                setClient((client) => ({ ...client, company: e.target.value }))\n              }}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <CFormLabel htmlFor=\"address\">{t('address')}</CFormLabel>\n            <CFormInput\n              type=\"text\"\n              id=\"address\"\n              placeholder={t('no_data')}\n              value={client.address}\n              onChange={(e) => {\n                setClient((client) => ({ ...client, address: e.target.value }))\n              }}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <CFormLabel htmlFor=\"npwp\">{t('npwp')}</CFormLabel>\n            <CFormInput\n              disabled\n              type=\"text\"\n              id=\"npwp\"\n              placeholder={t('no_data')}\n              value={client.documents.NPWP?.no}\n              onChange={(e) => {\n                setClient((client) => ({\n                  ...client,\n                  documents: {\n                    ...client.documents,\n                    NPWP: {\n                      ...client.documents.NPWP,\n                      no: e.target.value,\n                    },\n                  },\n                }))\n              }}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <CFormLabel htmlFor=\"siup\">{t('siup')}</CFormLabel>\n            <CFormInput\n              type=\"text\"\n              id=\"siup\"\n              disabled\n              placeholder={t('no_data')}\n              value={client.documents?.SIUP?.no}\n              onChange={(e) => {\n                setClient((client) => ({\n                  ...client,\n                  documents: {\n                    ...client.documents,\n                    SIUP: {\n                      ...client.documents.SIUP,\n                      no: e.target.value,\n                    },\n                  },\n                }))\n              }}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <CFormLabel htmlFor=\"tdp\">{t('tdp')}</CFormLabel>\n            <CFormInput\n              disabled\n              type=\"text\"\n              id=\"tdp\"\n              placeholder={t('no_data')}\n              defaultValue={client.documents.TDP?.no}\n              onChange={(e) => {\n                setClient((client) => ({\n                  ...client,\n                  documents: {\n                    ...client.documents,\n                    TDP: {\n                      ...client.documents.TDP,\n                      no: e.target.value,\n                    },\n                  },\n                }))\n              }}\n            />\n          </div>\n        </CCol>\n        <CCol>\n          <CContainer fluid className=\"d-flex justify-content-center\">\n            <CImage\n              rounded\n              src={'https://via.placeholder.com/550x390.png?text=' + client.company}\n              width={550}\n              height={390}\n              className=\"mt-4\"\n            />\n          </CContainer>\n        </CCol>\n      </CRow>\n      <CRow className=\"mb-4 mt-3\">\n        <CCol>\n          <div className=\"mb-3\">\n            <CFormLabel htmlFor=\"director\">{t('director_name')}</CFormLabel>\n            <CFormInput\n              type=\"text\"\n              id=\"director\"\n              placeholder={t('no_data')}\n              value={client.contact?.dir_name}\n              onChange={(e) => {\n                setClient((client) => ({\n                  ...client,\n                  contact: { ...client.contact, dir_name: e.target.value },\n                }))\n              }}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <CFormLabel htmlFor=\"ktp\">{t('ktp')}</CFormLabel>\n            <CFormInput\n              disabled\n              type=\"text\"\n              id=\"ktp\"\n              placeholder={t('no_data')}\n              value={client.contact?.ktp_id}\n              onChange={(e) => {\n                setClient((client) => ({\n                  ...client,\n                  contact: { ...client.contact, ktp_id: e.target.value },\n                }))\n              }}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <CFormLabel htmlFor=\"wa\">{t('whatsapp')}</CFormLabel>\n            <CFormInput\n              disabled\n              type=\"text\"\n              id=\"wa\"\n              placeholder={t('no_data')}\n              defaultValue={client.contact?.wa_number}\n              onChange={(e) => {\n                setClient((client) => ({\n                  ...client,\n                  contact: { ...client.contact, wa_number: e.target.value },\n                }))\n              }}\n            />\n          </div>\n        </CCol>\n        <CCol>\n          <div className=\"mb-3\">\n            <CFormLabel htmlFor=\"subscription\">{t('subscription_package')}</CFormLabel>\n            <CFormInput\n              disabled\n              type=\"text\"\n              id=\"subscription\"\n              placeholder={t('no_data')}\n              value={client.package?.name}\n              onChange={(e) => {\n                setClient((client) => ({\n                  ...client,\n                  package: { ...client.package, name: e.target.value },\n                }))\n              }}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <CFormLabel htmlFor=\"status\">{t('status')}</CFormLabel>\n            <CFormSelect\n              disabled\n              id=\"status\"\n              placeholder={t('no_data')}\n              value={client.status}\n              onChange={(e) => {\n                setClient((client) => ({ ...client, status: e.target.value }))\n              }}\n            >\n              <option value=\"\">{t('all')}</option>\n              <option value=\"REQUEST\">{t('request')}</option>\n              <option value=\"VERIFIED\">{t('verified')}</option>\n              <option value=\"ACTIVE\">{t('active')}</option>\n              <option value=\"REJECT\">{t('reject')}</option>\n              <option value=\"NON_ACTIVE\">{t('inactive')}</option>\n              <option value=\"FAILED\">{t('failed')}</option>\n            </CFormSelect>\n          </div>\n        </CCol>\n      </CRow>\n      <CRow className=\"mb-3\">\n        <div className=\"d-flex justify-content-end\">\n          <CButton color=\"primary\" onClick={handleEdit}>\n            {t('edit')}\n          </CButton>\n        </div>\n      </CRow>\n    </CForm>\n  ) : (\n    Loader()\n  )\n}\n\nexport default ClientDetail\n","import axios from 'axios'\nimport { apiHeader, authHeader } from './requestHeaders'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getClient(id) {\n  return axios\n    .get(API_URL + '/users/admin/client/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function updateProfileCompany(clientId, client) {\n  return axios\n    .put(\n      API_URL + '/users/admin/client/' + clientId,\n      {\n        company: client.company,\n        address: client.address,\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function updateClient(clientId, client) {\n  return axios\n    .put(\n      API_URL + '/users/admin/client/' + clientId,\n      {\n        company: client.company,\n        contact_dir_name: client.contact.dir_name,\n        address: client.address,\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function registerClient(client) {\n  return axios\n    .post(API_URL + '/users/clients/register', client, {\n      headers: apiHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function approveClient(clientId) {\n  const status = {\n    status: 'ACTIVE',\n  }\n  return axios\n    .put(API_URL + '/users/admin/client/status/' + clientId, status, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function rejectClient(clientId) {\n  const status = {\n    status: 'REJECT',\n  }\n  return axios\n    .put(API_URL + '/users/admin/client/status/' + clientId, status, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function getClients(skip, searchQuery, status, sort) {\n  if (sort === '') sort = 'created_at:desc'\n\n  return axios\n    .get(\n      API_URL +\n        '/users/admin/client?search=' +\n        searchQuery +\n        '&status=' +\n        status +\n        '&sort=' +\n        sort +\n        '&skip=' +\n        skip,\n      { headers: authHeader() },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n"],"sourceRoot":""}