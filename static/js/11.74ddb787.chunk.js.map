{"version":3,"sources":["views/nasabah/nasabah_list/NasabahList.js","../node_modules/@coreui/icons/js/free/cil-sad.js","components/Table.js","api/api_nasabah.js","../node_modules/@coreui/icons/js/free/cil-pen.js"],"names":["NasabahList","t","useTranslation","history","useHistory","hasLoaded","setHasLoaded","useState","nasabahList","setNasabah","searchQuery","setSearchQuery","status","setStatus","pageCount","setPageCount","fetchIdRef","useRef","fetchData","useCallback","skip","current","getNasabahList","then","data","console","log","pages","Math","floor","pagination","total","limit","map","item","name","number","wa_number","location","address","active","className","color","shape","toUpperCase","action","size","onClick","push","id","icon","cilPen","columns","React","useMemo","Header","accessor","htmlFor","type","placeholder","onChange","e","target","value","controlledPageCount","cilSad","Table","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","gotoPage","nextPage","previousPage","state","pageIndex","useTable","initialState","pageSize","manualPagination","usePagination","useEffect","length","hover","responsive","style","minWidth","headerGroup","index","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","min","max","defaultValue","Number","width","align","disabled","pointerEvents","API_URL","axios","get","authHeader","response","catch","reason","message","getNasabah","updateNasabah","nasabah","put","ktp_id","group","createNasabah","post"],"mappings":"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","file":"static/js/11.74ddb787.chunk.js","sourcesContent":["import React, { useCallback, useRef, useState } from 'react'\nimport {\n  CBadge,\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CRow,\n} from '@coreui/react'\nimport { useHistory } from 'react-router-dom'\nimport { Table } from '../../../components/Table'\nimport { getNasabahList } from '../../../api/api_nasabah'\nimport { cilPen } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport { useTranslation } from 'react-i18next'\n\nconst NasabahList = () => {\n  const { t } = useTranslation()\n  const history = useHistory()\n  const [hasLoaded, setHasLoaded] = useState()\n  const [nasabahList, setNasabah] = useState([])\n  const [searchQuery, setSearchQuery] = useState('')\n  const [status, setStatus] = useState('')\n  const [pageCount, setPageCount] = useState(0)\n  const fetchIdRef = useRef(0)\n\n  const fetchData = useCallback(\n    ({ skip }) => {\n      const fetchId = ++fetchIdRef.current\n      if (fetchId === fetchIdRef.current) {\n        setHasLoaded(false)\n        getNasabahList(skip, searchQuery, status).then((data) => {\n          console.log(data)\n          let pages = Math.floor(data.pagination.total / data.pagination.limit)\n          if (data.pagination.total / data.pagination.limit > pageCount) {\n            pages += 1\n          }\n          setPageCount(pages)\n          setNasabah(\n            data.data?.map((item) => {\n              return {\n                name: item.name,\n                number: item.wa_number,\n                location: item.address,\n                status: item.active ? (\n                  <CBadge className=\"mt-1\" color=\"success\" shape=\"rounded-pill\">\n                    {t('active').toUpperCase()}\n                  </CBadge>\n                ) : (\n                  <CBadge className=\"mt-1\" color=\"secondary\" shape=\"rounded-pill\">\n                    {t('inactive').toUpperCase()}\n                  </CBadge>\n                ),\n                action: (\n                  <CButton\n                    color=\"dark\"\n                    size={'sm'}\n                    onClick={() => history.push('/nasabah/' + item.id)}\n                  >\n                    <CIcon icon={cilPen} className=\"me-1\" />\n                    {t('edit')}\n                  </CButton>\n                ),\n              }\n            }),\n          )\n          setHasLoaded(true)\n        })\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [history, searchQuery, status],\n  )\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: t('name'),\n        accessor: 'name',\n      },\n      {\n        Header: t('whatsapp'),\n        accessor: 'number',\n      },\n      {\n        Header: t('location'),\n        accessor: 'location',\n      },\n      {\n        Header: t('status'),\n        accessor: 'status',\n      },\n      {\n        Header: t('action'),\n        accessor: 'action',\n      },\n    ],\n    [t],\n  )\n\n  return (\n    <CContainer>\n      <CRow className=\"align-items-center\">\n        <CCol>\n          <CFormLabel htmlFor=\"searchInput\">{t('search')}</CFormLabel>\n          <CFormInput\n            type=\"text\"\n            id=\"searchInput\"\n            placeholder={t('enter_search_query')}\n            onChange={(e) => {\n              setSearchQuery(e.target.value)\n            }}\n          />\n        </CCol>\n        <CCol>\n          <CFormLabel htmlFor=\"statusInput\">{t('status')}</CFormLabel>\n          <CFormSelect\n            id=\"statusInput\"\n            onChange={(e) => {\n              setStatus(e.target.value)\n            }}\n          >\n            <option value=\"\">{t('all')}</option>\n            <option value=\"false\">{t('inactive')}</option>\n            <option value=\"true\">{t('true')}</option>\n          </CFormSelect>\n        </CCol>\n        <CCol className={'d-flex justify-content-end'}>\n          <CButton color=\"primary\" onClick={() => history.push('/nasabah/create')}>\n            {t('add_new')}\n          </CButton>\n        </CCol>\n      </CRow>\n      <br />\n      <CRow>\n        <CCard>\n          <CCardBody>\n            <Table\n              columns={columns}\n              data={nasabahList}\n              controlledPageCount={pageCount}\n              fetchData={fetchData}\n              hasLoaded={hasLoaded}\n            />\n          </CCardBody>\n        </CCard>\n      </CRow>\n    </CContainer>\n  )\n}\n\nexport default NasabahList\n","export const cilSad = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M256,16C123.452,16,16,123.452,16,256S123.452,496,256,496,496,388.548,496,256,388.548,16,256,16ZM403.078,403.078a207.253,207.253,0,1,1,44.589-66.125A207.332,207.332,0,0,1,403.078,403.078Z' class='ci-primary'/><rect width='40' height='40' x='152' y='200' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='40' height='40' x='320' y='200' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M256,288a88.1,88.1,0,0,0-88,88h32a56,56,0,0,1,112,0h32A88.1,88.1,0,0,0,256,288Z' class='ci-primary'/>\"]","import { usePagination, useTable } from 'react-table'\nimport {\n  CCol,\n  CContainer,\n  CFormInput,\n  CHeaderText,\n  CPagination,\n  CPaginationItem,\n  CSpinner,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport React, { useEffect } from 'react'\nimport CIcon from '@coreui/icons-react'\nimport { cilSad } from '@coreui/icons'\nimport { useTranslation } from 'react-i18next'\n\n// eslint-disable-next-line react/prop-types\nexport function Table({ columns, data, controlledPageCount, fetchData, hasLoaded }) {\n  const { t } = useTranslation()\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    gotoPage,\n    nextPage,\n    previousPage,\n    state: { pageIndex },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: {\n        pageIndex: 0,\n        pageSize: 10,\n      },\n      manualPagination: true,\n      pageCount: controlledPageCount,\n    },\n    usePagination,\n  )\n\n  useEffect(() => {\n    const skip = pageIndex * 10\n    fetchData && fetchData({ skip })\n  }, [fetchData, pageIndex])\n  return hasLoaded ? (\n    page.length > 0 ? (\n      <>\n        <CTable hover responsive style={{ minWidth: '45rem' }} {...getTableProps()}>\n          <CTableHead>\n            {headerGroups.map((headerGroup, index) => (\n              <CTableRow key={index} {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column, index) => (\n                  <CTableHeaderCell key={index} {...column.getHeaderProps()}>\n                    {column.render('Header')}\n                  </CTableHeaderCell>\n                ))}\n              </CTableRow>\n            ))}\n          </CTableHead>\n          <CTableBody {...getTableBodyProps()}>\n            {page.map((row, index) => {\n              prepareRow(row)\n              return (\n                <CTableRow key={index} {...row.getRowProps()}>\n                  {row.cells.map((cell, index) => {\n                    return (\n                      <CTableDataCell key={index} {...cell.getCellProps()}>\n                        {cell.render('Cell')}\n                      </CTableDataCell>\n                    )\n                  })}\n                </CTableRow>\n              )\n            })}\n          </CTableBody>\n        </CTable>\n\n        <CContainer className={'d-flex justify-content-end align-items-center'}>\n          <CHeaderText className={'pe-2'}>{t('go_to_page') + ':'}</CHeaderText>\n          <CFormInput\n            min={1}\n            max={controlledPageCount}\n            type=\"number\"\n            defaultValue={pageIndex + 1}\n            onChange={(e) => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\n              gotoPage(page)\n            }}\n            style={{ width: '100px' }}\n          />\n        </CContainer>\n\n        <CPagination align=\"center\" aria-label=\"Page navigation\">\n          <CPaginationItem\n            aria-label=\"First\"\n            onClick={() => gotoPage(0)}\n            disabled={!canPreviousPage}\n          >\n            {'<<'}\n          </CPaginationItem>\n          <CPaginationItem\n            aria-label=\"Previous\"\n            onClick={() => previousPage()}\n            disabled={!canPreviousPage}\n          >\n            {'<'}\n          </CPaginationItem>\n          <CPaginationItem aria-label=\"Current\" style={{ pointerEvents: 'none' }}>\n            {t('page')} <strong>{pageIndex + 1}</strong> of <strong>{pageOptions.length}</strong>\n          </CPaginationItem>\n          <CPaginationItem aria-label=\"Next\" onClick={() => nextPage()} disabled={!canNextPage}>\n            {'>'}\n          </CPaginationItem>\n          <CPaginationItem\n            aria-label=\"Last\"\n            onClick={() => gotoPage(controlledPageCount - 1)}\n            disabled={!canNextPage}\n          >\n            {'>>'}\n          </CPaginationItem>\n        </CPagination>\n      </>\n    ) : (\n      <CCol className=\"d-flex justify-content-center\">\n        <CHeaderText>\n          {t('nothing_there')} <CIcon icon={cilSad} />{' '}\n        </CHeaderText>\n      </CCol>\n    )\n  ) : (\n    <CCol className=\"d-flex justify-content-center\">\n      <CSpinner color=\"primary\" />\n    </CCol>\n  )\n}\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getNasabahList(skip, searchQuery, status) {\n  return axios\n    .get(\n      API_URL + '/nasabah/nasabah?search=' + searchQuery + '&status=' + status + '&skip=' + skip,\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getNasabah(id) {\n  return axios\n    .get(API_URL + '/nasabah/nasabah/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function updateNasabah(id, nasabah) {\n  return axios\n    .put(\n      API_URL + '/nasabah/nasabah/' + id,\n      {\n        name: nasabah.name,\n        ktp_id: nasabah.ktp_id,\n        wa_number: nasabah.wa_number,\n        address: nasabah.address,\n        reason: nasabah.reason,\n        group: nasabah.group,\n        active: nasabah.active === 'true',\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function createNasabah(nasabah) {\n  return axios\n    .post(API_URL + '/nasabah/nasabah', nasabah, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n","export const cilPen = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M345.994,42.019,179.531,208.481A646.3,646.3,0,0,0,25.325,456.521a24.845,24.845,0,0,0,6,25.708l.087.087a24.84,24.84,0,0,0,17.611,7.342,25.172,25.172,0,0,0,8.1-1.344,646.283,646.283,0,0,0,248.04-154.207L471.62,167.646A88.831,88.831,0,0,0,345.994,42.019ZM282.531,311.48A614.445,614.445,0,0,1,60.419,453.221,614.435,614.435,0,0,1,202.158,231.108l99.162-99.161,80.372,80.372ZM448.993,145.019l-44.674,44.673L323.947,109.32l44.674-44.674a56.832,56.832,0,1,1,80.372,80.373Z' class='ci-primary'/>\"]"],"sourceRoot":""}