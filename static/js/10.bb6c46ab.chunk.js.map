{"version":3,"sources":["views/products/products_savings_create/ProductsSavingsCreate.js","helpers/api_requests.js"],"names":["ProductSavingsCreate","history","useHistory","product","setProduct","useState","tipe","name","description","balance_start","percent_rate","rate_type","limit_min","limit_max","tryParseInt","text","parsed","parseInt","isNaN","className","htmlFor","id","value","onChange","e","target","type","rows","xs","color","onClick","console","log","createProduct","then","data","ok","store","addNotification","success","push","danger","message","API_URL","getUsers","searchQuery","axios","get","headers","authHeader","response","catch","reason","status","getUser","updateUser","user","put","wa_number","address","role","createUser","post","getClient","updateClient","clientId","client","getClients","getProducts","updateProduct","changes","active","credit_simulation_id","getServices","getNasabah","nasabah_list"],"mappings":"kGAAA,oEA0LeA,UAzKc,KAC3B,MAAMC,EAAUC,eACTC,EAASC,GAAcC,mBAAS,CACrCC,KAAM,UACNC,KAAM,GACNC,YAAa,GACbC,cAAe,EACfC,aAAc,EACdC,UAAW,MACXC,UAAW,EACXC,UAAW,IAeb,SAASC,EAAYC,GACnB,MAAMC,EAASC,SAASF,GACxB,OAAIG,MAAMF,GACD,GAEFA,EAGT,OACE,cAAC,IAAD,CAAYG,UAAU,gCAAtB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,sBAAKA,UAAU,OAAf,UACE,cAAC,IAAD,CAAYC,QAAQ,OAApB,6BACA,eAAC,IAAD,CACEC,GAAG,OACHC,MAAOnB,EAAQG,KACfiB,SAAWC,IACTpB,GAAYD,IAAD,IAAmBA,EAASG,KAAMkB,EAAEC,OAAOH,WAJ1D,UAOE,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,2BAIJ,sBAAKH,UAAU,OAAf,UACE,cAAC,IAAD,CAAYC,QAAQ,OAApB,2BACA,cAAC,IAAD,CACEM,KAAK,OACLL,GAAG,OACHC,MAAOnB,EAAQI,KACfgB,SAAWC,IACTpB,GAAYD,IAAD,IAAmBA,EAASI,KAAMiB,EAAEC,OAAOH,gBAI5D,sBAAKH,UAAU,OAAf,UACE,cAAC,IAAD,CAAYC,QAAQ,cAApB,yBACA,cAAC,IAAD,CACEM,KAAK,OACLL,GAAG,cACHM,KAAK,IACLL,MAAOnB,EAAQK,YACfe,SAAWC,IACTpB,GAAYD,IAAD,IAAmBA,EAASK,YAAagB,EAAEC,OAAOH,gBAKnE,yCACA,sBAAKH,UAAU,YAAf,UACE,cAAC,IAAD,CAAYC,QAAQ,QAApB,mBACA,cAAC,IAAD,CACEM,KAAK,SACLL,GAAG,QACHC,MAAOnB,EAAQM,cACfc,SAAWC,IACTpB,GAAYD,IAAD,IACNA,EACHM,cAAeK,EAAYU,EAAEC,OAAOH,iBAM5C,sCACA,eAAC,IAAD,CAAMH,UAAU,YAAhB,UACE,eAAC,IAAD,CAAMS,GAAI,EAAV,UACE,cAAC,IAAD,CAAYR,QAAQ,eAApB,wBACA,cAAC,IAAD,CACEM,KAAK,SACLL,GAAG,eACHC,MAAOnB,EAAQO,aACfa,SAAWC,IACTpB,GAAYD,IAAD,IACNA,EACHO,aAAcI,EAAYU,EAAEC,OAAOH,iBAK3C,eAAC,IAAD,WACE,cAAC,IAAD,CAAYF,QAAQ,YAApB,kBACA,eAAC,IAAD,CACEC,GAAG,YACHC,MAAOnB,EAAQQ,UACfY,SAAWC,IACTpB,GAAYD,IAAD,IAAmBA,EAASQ,UAAWa,EAAEC,OAAOH,WAJ/D,UAOE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,6BAKN,8CACA,eAAC,IAAD,CAAMH,UAAU,YAAhB,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAYC,QAAQ,YAApB,uBACA,cAAC,IAAD,CACEM,KAAK,SACLL,GAAG,YACHC,MAAOnB,EAAQS,UACfW,SAAWC,IACTpB,GAAYD,IAAD,IACNA,EACHS,UAAWE,EAAYU,EAAEC,OAAOH,iBAKxC,eAAC,IAAD,WACE,cAAC,IAAD,CAAYF,QAAQ,YAApB,uBACA,cAAC,IAAD,CACEM,KAAK,SACLL,GAAG,YACHC,MAAOnB,EAAQU,UACfU,SAAWC,IACTpB,GAAYD,IAAD,IACNA,EACHU,UAAWC,EAAYU,EAAEC,OAAOH,yBAQ9C,cAAC,IAAD,UACE,cAAC,IAAD,CAAMH,UAAU,qCAAhB,SACE,cAAC,IAAD,CAASU,MAAM,UAAUC,QAlJnC,WACEC,QAAQC,IAAI7B,GACZ8B,YAAc9B,GAAS+B,MAAMC,IACvBA,EAAKC,IACPC,QAAMC,gBAAgBC,YAAQ,oBAC9BtC,EAAQuC,KAAK,sBAEbH,QAAMC,gBAAgBG,YAAON,EAAKO,cA2I9B,6B,iCChLZ,qbAGA,MAAMC,EAAU,2BAET,SAASC,EAASC,GACvB,OAAOC,IACJC,IAAIJ,EAAU,qBAAuBE,EAAa,CAAEG,QAASC,gBAC7Df,MAAMgB,GACEA,EAASf,KAAKA,OAEtBgB,OAAOC,IACN,GAA+B,MAA3BA,EAAOF,SAASG,OAElB,OADAtB,QAAQC,IAAIoB,EAAOV,SACZ,QAKR,SAASY,EAAQjC,GACtB,OAAOyB,IACJC,IAAIJ,EAAU,cAAgBtB,EAAI,CAAE2B,QAASC,gBAC7Cf,MAAMgB,GACEA,EAASf,KAAKA,OAEtBgB,OAAOC,IACN,GAA+B,MAA3BA,EAAOF,SAASG,OAElB,OADAtB,QAAQC,IAAIoB,EAAOV,SACZ,QAKR,SAASa,EAAWC,GACzB,OAAOV,IACJW,IACCd,EAAU,cAAgBa,EAAKnC,GAC/B,CACEqC,UAAWF,EAAKE,UAChBnD,KAAMiD,EAAKjD,KACXoD,QAASH,EAAKG,QACdC,KAAMJ,EAAKI,KACXP,OAAQG,EAAKH,QAIf,CACEL,QAASC,gBAGZf,MAAMgB,GACEA,EAASf,OAEjBgB,OAAOC,GACCA,EAAOF,SAASf,OAItB,SAAS0B,EAAWL,GACzB,OAAOV,IACJgB,KAAKnB,EAAU,aAAca,EAAM,CAClCR,QAASC,gBAEVf,MAAMgB,GACEA,EAASf,OAEjBgB,OAAOC,GACCA,EAAOF,SAASf,OAItB,SAAS4B,EAAU1C,GACxB,OAAOyB,IACJC,IAAIJ,EAAU,uBAAyBtB,EAAI,CAAE2B,QAASC,gBACtDf,MAAMgB,GACEA,EAASf,KAAKA,OAEtBgB,OAAOC,IACN,GAA+B,MAA3BA,EAAOF,SAASG,OAElB,OADAtB,QAAQC,IAAIoB,EAAOV,SACZ,QAKR,SAASsB,EAAaC,EAAUC,GACrC,OAAOpB,IACJW,IAAId,EAAU,uBAAyBsB,EAAUC,EAAQ,CACxDlB,QAASC,gBAEVf,MAAMgB,GACEA,EAASf,OAEjBgB,OAAOC,GACCA,EAAOF,SAASf,OAItB,SAASgC,IACd,OAAOrB,IACJC,IAAIJ,EAAU,sBAAuB,CAAEK,QAASC,gBAChDf,MAAMgB,GACEA,EAASf,KAAKA,OAEtBgB,OAAOC,IACN,GAA+B,MAA3BA,EAAOF,SAASG,OAElB,OADAtB,QAAQC,IAAIoB,EAAOV,SACZ,QAKR,SAAS0B,EAAYvB,EAAanB,GACvC,OAAOoB,IACJC,IAAIJ,EAAU,gCAAkCE,EAAc,SAAWnB,EAAM,CAC9EsB,QAASC,gBAEVf,MAAMgB,GACEA,EAASf,OAEjBgB,OAAOC,IACNrB,QAAQC,IAAIoB,MAIX,SAASnB,EAAc9B,GAC5B,OAAO2C,IACJgB,KAAKnB,EAAU,wBAAyBxC,EAAS,CAChD6C,QAASC,gBAEVf,MAAMgB,GACEA,EAASf,OAEjBgB,OAAOC,IACNrB,QAAQC,IAAIoB,EAAOF,SAASf,SAI3B,SAASkC,EAAclE,GAC5B,MAAMmE,EAAU,CACd/D,KAAMJ,EAAQI,KACdC,YAAaL,EAAQK,YACrBC,cAAeN,EAAQM,cACvBC,aAAcP,EAAQO,aACtBE,UAAWT,EAAQS,UACnBC,UAAWV,EAAQU,UACnB0D,OAAQpE,EAAQoE,OAChB5D,UAAWR,EAAQQ,WAGrB,OAAOmC,IACJW,IAAId,EAAU,yBAA2BxC,EAAQqE,qBAAsBF,EAAS,CAC/EtB,QAASC,gBAEVf,MAAMgB,GACEA,EAASf,OAEjBgB,OAAOC,GACCA,EAAOF,SAASf,OAItB,SAASsC,IACd,OAAO3B,IACJC,IAAIJ,EAAU,wBAAyB,CAAEK,QAASC,gBAClDf,MAAMgB,GACEA,EAASf,OAEjBgB,OAAOC,IACNrB,QAAQC,IAAIoB,MAIX,SAASsB,IACd,OAAO5B,IACJC,IAAIJ,EAAU,mBAAoB,CAAEK,QAASC,gBAC7Cf,MAAMgB,GACEA,EAASf,KAAKwC,eAEtBxB,OAAOC,IACN,GAA+B,MAA3BA,EAAOF,SAASG,OAElB,OADAtB,QAAQC,IAAIoB,EAAOV,SACZ","file":"static/js/10.bb6c46ab.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport {\n  CButton,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CFormTextarea,\n  CRow,\n} from '@coreui/react'\nimport { createProduct } from '../../../helpers/api_requests'\nimport { store } from 'react-notifications-component'\nimport { danger, success } from '../../../helpers/notifications'\nimport { useHistory } from 'react-router-dom'\n\nconst ProductSavingsCreate = () => {\n  const history = useHistory()\n  const [product, setProduct] = useState({\n    tipe: 'savings',\n    name: '',\n    description: '',\n    balance_start: 0,\n    percent_rate: 0,\n    rate_type: 'fix',\n    limit_min: 0,\n    limit_max: 0,\n  })\n\n  function handleSave() {\n    console.log(product)\n    createProduct(product).then((data) => {\n      if (data.ok) {\n        store.addNotification(success('Product created'))\n        history.push('/products/savings')\n      } else {\n        store.addNotification(danger(data.message))\n      }\n    })\n  }\n\n  function tryParseInt(text) {\n    const parsed = parseInt(text)\n    if (isNaN(parsed)) {\n      return ''\n    }\n    return parsed\n  }\n\n  return (\n    <CContainer className=\"d-flex justify-content-center\">\n      <CForm>\n        <CRow>\n          <CCol>\n            <div className=\"mb-2\">\n              <CFormLabel htmlFor=\"type\">Type of Product</CFormLabel>\n              <CFormSelect\n                id=\"type\"\n                value={product.tipe}\n                onChange={(e) => {\n                  setProduct((product) => ({ ...product, tipe: e.target.value }))\n                }}\n              >\n                <option value=\"savings\">Savings</option>\n                <option value=\"credits\">Credits</option>\n              </CFormSelect>\n            </div>\n\n            <div className=\"mb-2\">\n              <CFormLabel htmlFor=\"name\">Products Name</CFormLabel>\n              <CFormInput\n                type=\"text\"\n                id=\"name\"\n                value={product.name}\n                onChange={(e) => {\n                  setProduct((product) => ({ ...product, name: e.target.value }))\n                }}\n              />\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"description\">Description</CFormLabel>\n              <CFormTextarea\n                type=\"text\"\n                id=\"description\"\n                rows=\"3\"\n                value={product.description}\n                onChange={(e) => {\n                  setProduct((product) => ({ ...product, description: e.target.value }))\n                }}\n              />\n            </div>\n\n            <h5>Balance</h5>\n            <div className=\"ms-4 mb-2\">\n              <CFormLabel htmlFor=\"start\">Start</CFormLabel>\n              <CFormInput\n                type=\"number\"\n                id=\"start\"\n                value={product.balance_start}\n                onChange={(e) => {\n                  setProduct((product) => ({\n                    ...product,\n                    balance_start: tryParseInt(e.target.value),\n                  }))\n                }}\n              />\n            </div>\n\n            <h5>Rate</h5>\n            <CRow className=\"ms-3 mb-3\">\n              <CCol xs={4}>\n                <CFormLabel htmlFor=\"percent_rate\">Percentage</CFormLabel>\n                <CFormInput\n                  type=\"number\"\n                  id=\"percent_rate\"\n                  value={product.percent_rate}\n                  onChange={(e) => {\n                    setProduct((product) => ({\n                      ...product,\n                      percent_rate: tryParseInt(e.target.value),\n                    }))\n                  }}\n                />\n              </CCol>\n              <CCol>\n                <CFormLabel htmlFor=\"rate_type\">Type</CFormLabel>\n                <CFormSelect\n                  id=\"rate_type\"\n                  value={product.rate_type}\n                  onChange={(e) => {\n                    setProduct((product) => ({ ...product, rate_type: e.target.value }))\n                  }}\n                >\n                  <option value=\"fix\">Fix</option>\n                  <option value=\"efektif\">Efektif</option>\n                  <option value=\"syaria\">Syaria</option>\n                </CFormSelect>\n              </CCol>\n            </CRow>\n\n            <h5>Requirements</h5>\n            <CRow className=\"mb-3 ms-3\">\n              <CCol>\n                <CFormLabel htmlFor=\"limit_min\">Limit Min</CFormLabel>\n                <CFormInput\n                  type=\"number\"\n                  id=\"limit_min\"\n                  value={product.limit_min}\n                  onChange={(e) => {\n                    setProduct((product) => ({\n                      ...product,\n                      limit_min: tryParseInt(e.target.value),\n                    }))\n                  }}\n                />\n              </CCol>\n              <CCol>\n                <CFormLabel htmlFor=\"limit_max\">Limit Max</CFormLabel>\n                <CFormInput\n                  type=\"number\"\n                  id=\"limit_max\"\n                  value={product.limit_max}\n                  onChange={(e) => {\n                    setProduct((product) => ({\n                      ...product,\n                      limit_max: tryParseInt(e.target.value),\n                    }))\n                  }}\n                />\n              </CCol>\n            </CRow>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol className=\"d-flex justify-content-center mt-3\">\n            <CButton color=\"primary\" onClick={handleSave}>\n              Save\n            </CButton>\n          </CCol>\n        </CRow>\n      </CForm>\n    </CContainer>\n  )\n}\n\nexport default ProductSavingsCreate\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getUsers(searchQuery) {\n  return axios\n    .get(API_URL + '/auth/user?search=' + searchQuery, { headers: authHeader() })\n    .then((response) => {\n      return response.data.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getUser(id) {\n  return axios\n    .get(API_URL + '/auth/user/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function updateUser(user) {\n  return axios\n    .put(\n      API_URL + '/auth/user/' + user.id,\n      {\n        wa_number: user.wa_number,\n        name: user.name,\n        address: user.address,\n        role: user.role,\n        status: user.status,\n        // avatar: user.avatar,\n        // ktp_image: user.ktp_image,\n      },\n      {\n        headers: authHeader(),\n      },\n    )\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function createUser(user) {\n  return axios\n    .post(API_URL + '/auth/user', user, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function getClient(id) {\n  return axios\n    .get(API_URL + '/users/admin/client/' + id, { headers: authHeader() })\n    .then((response) => {\n      return response.data.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function updateClient(clientId, client) {\n  return axios\n    .put(API_URL + '/users/admin/client/' + clientId, client, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function getClients() {\n  return axios\n    .get(API_URL + '/users/admin/client', { headers: authHeader() })\n    .then((response) => {\n      return response.data.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getProducts(searchQuery, type) {\n  return axios\n    .get(API_URL + '/transaction/products?search=' + searchQuery + '&tipe=' + type, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function createProduct(product) {\n  return axios\n    .post(API_URL + '/transaction/products', product, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason.response.data)\n    })\n}\n\nexport function updateProduct(product) {\n  const changes = {\n    name: product.name,\n    description: product.description,\n    balance_start: product.balance_start,\n    percent_rate: product.percent_rate,\n    limit_min: product.limit_min,\n    limit_max: product.limit_max,\n    active: product.active,\n    rate_type: product.rate_type,\n  }\n\n  return axios\n    .put(API_URL + '/transaction/products/' + product.credit_simulation_id, changes, {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      return reason.response.data\n    })\n}\n\nexport function getServices() {\n  return axios\n    .get(API_URL + '/transaction/services', { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      console.log(reason)\n    })\n}\n\nexport function getNasabah() {\n  return axios\n    .get(API_URL + '/nasabah/nasabah', { headers: authHeader() })\n    .then((response) => {\n      return response.data.nasabah_list\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n"],"sourceRoot":""}