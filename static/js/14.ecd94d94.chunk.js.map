{"version":3,"sources":["views/change_password/ChangePassword.js"],"names":["ChangePassword","oldPassword","setOldPassword","useState","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","history","useHistory","userState","userDispatch","useContext","UserContext","validated","setValidated","className","style","width","noValidate","onSubmit","event","preventDefault","form","currentTarget","checkValidity","stopPropagation","changePassword","then","data","store","addNotification","info","message","type","user","company","push","catch","e","response","console","log","danger","htmlFor","id","required","onChange","target","value","invalid","pattern","color"],"mappings":"kGAAA,mEAwGeA,UAxFQ,KACrB,MAAOC,EAAaC,GAAkBC,mBAAS,KACxCC,EAAaC,GAAkBF,mBAAS,KACxCG,EAAoBC,GAAyBJ,mBAAS,IAE7D,IAAIK,EAAUC,cACd,MAAM,UAAEC,EAAF,aAAaC,GAAiBC,qBAAWC,MAExCC,EAAWC,GAAgBZ,oBAAS,GA+B3C,OACE,cAAC,IAAD,CAAYa,UAAU,gCAAtB,SACE,cAAC,IAAD,CAAOC,MAAO,CAAEC,MAAO,SAAvB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,YAAU,EAACL,UAAWA,EAAWM,SAlC1BC,IACpBA,EAAMC,iBAEN,MAAMC,EAAOF,EAAMG,eACU,IAAzBD,EAAKE,iBACPJ,EAAMK,kBAGJtB,IAAgBE,GAKpBS,GAAa,GAETQ,EAAKE,iBACPE,YAAe1B,EAAaG,GACzBwB,MAAMC,IACLC,QAAMC,gBAAgBC,YAAKH,EAAKI,UAChCtB,EAAa,CAAEuB,KAAM,cAAeC,KAAMzB,EAAUyB,KAAMC,QAAS1B,EAAU0B,UAC7E5B,EAAQ6B,KAAK,iBAEdC,OAAOC,IACN,IAAIV,EAAOU,EAAEC,SAASX,KACtBY,QAAQC,IAAIb,GACZC,QAAMC,gBAAgBY,YAAOd,EAAKI,cAhBtCH,QAAMC,gBAAgBY,YAAO,8BAyBzB,UACE,sBAAK3B,UAAU,OAAf,UACE,cAAC,IAAD,CAAY4B,QAAQ,WAApB,0BACA,cAAC,IAAD,CACEV,KAAK,WACLW,GAAG,WACHC,UAAQ,EACRC,SAAWR,GAAMrC,EAAeqC,EAAES,OAAOC,SAE3C,cAAC,IAAD,CAAeC,SAAO,EAAtB,6CAEF,sBAAKlC,UAAU,OAAf,UACE,cAAC,IAAD,CAAY4B,QAAQ,WAApB,0BACA,cAAC,IAAD,CACEV,KAAK,WACLiB,QAAQ,UACRN,GAAG,WACHC,UAAQ,EACRC,SAAWR,GAAMlC,EAAekC,EAAES,OAAOC,SAE3C,cAAC,IAAD,CAAeC,SAAO,EAAtB,2DAEF,sBAAKlC,UAAU,OAAf,UACE,cAAC,IAAD,CAAY4B,QAAQ,mBAApB,kCACA,cAAC,IAAD,CACEV,KAAK,WACLiB,QAAQ,UACRN,GAAG,mBACHC,UAAQ,EACRC,SAAWR,GAAMhC,EAAsBgC,EAAES,OAAOC,SAElD,cAAC,IAAD,CAAeC,SAAO,EAAtB,6CAEF,qBAAKlC,UAAU,6BAAf,SACE,cAAC,IAAD,CAASoC,MAAM,UAAUlB,KAAK,SAA9B","file":"static/js/14.ecd94d94.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CContainer,\n  CForm,\n  CFormFeedback,\n  CFormInput,\n  CFormLabel,\n} from '@coreui/react'\nimport { changePassword, UserContext } from '../../helpers/user'\nimport { store } from 'react-notifications-component'\nimport { danger, info } from '../../helpers/notifications'\nimport { useHistory } from 'react-router-dom'\n\nconst ChangePassword = () => {\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [confirmNewPassword, setConfirmNewPassword] = useState('')\n\n  let history = useHistory()\n  const { userState, userDispatch } = useContext(UserContext)\n\n  const [validated, setValidated] = useState(false)\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.stopPropagation()\n    }\n\n    if (newPassword !== confirmNewPassword) {\n      store.addNotification(danger('Check confirmation field'))\n      return\n    }\n\n    setValidated(true)\n\n    if (form.checkValidity()) {\n      changePassword(oldPassword, newPassword)\n        .then((data) => {\n          store.addNotification(info(data.message))\n          userDispatch({ type: 'request_otp', user: userState.user, company: userState.company })\n          history.push('/input_otp')\n        })\n        .catch((e) => {\n          let data = e.response.data\n          console.log(data)\n          store.addNotification(danger(data.message))\n        })\n    }\n  }\n\n  return (\n    <CContainer className=\"d-flex justify-content-center\">\n      <CCard style={{ width: '35rem' }}>\n        <CCardBody>\n          <CForm noValidate validated={validated} onSubmit={handleSubmit}>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"old_pass\">Old Password</CFormLabel>\n              <CFormInput\n                type=\"password\"\n                id=\"old_pass\"\n                required\n                onChange={(e) => setOldPassword(e.target.value)}\n              />\n              <CFormFeedback invalid>Please provide old password.</CFormFeedback>\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"new_pass\">New Password</CFormLabel>\n              <CFormInput\n                type=\"password\"\n                pattern=\"^.{6,}$\"\n                id=\"new_pass\"\n                required\n                onChange={(e) => setNewPassword(e.target.value)}\n              />\n              <CFormFeedback invalid>Please provide new password (min 6 chars).</CFormFeedback>\n            </div>\n            <div className=\"mb-3\">\n              <CFormLabel htmlFor=\"confirm_new_pass\">Confirm New Password</CFormLabel>\n              <CFormInput\n                type=\"password\"\n                pattern=\"^.{6,}$\"\n                id=\"confirm_new_pass\"\n                required\n                onChange={(e) => setConfirmNewPassword(e.target.value)}\n              />\n              <CFormFeedback invalid>Please confirm new password.</CFormFeedback>\n            </div>\n            <div className=\"d-flex justify-content-end\">\n              <CButton color=\"primary\" type=\"submit\">\n                Save\n              </CButton>\n            </div>\n          </CForm>\n        </CCardBody>\n      </CCard>\n    </CContainer>\n  )\n}\n\nexport default ChangePassword\n"],"sourceRoot":""}