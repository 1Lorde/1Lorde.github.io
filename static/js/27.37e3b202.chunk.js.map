{"version":3,"sources":["views/dashboard/widgets/Widget1.js","views/dashboard/widgets/Widget2.js","views/dashboard/widgets/Widget3.js","api/api_stat.js","views/dashboard/Dashboard.js","routes/RestrictedComponent.js"],"names":["Widget1","props","className","color","value","title","action","alignment","caret","icon","cilOptions","disabled","chart","style","height","data","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","getStyle","options","plugins","legend","display","maintainAspectRatio","scales","x","grid","drawBorder","ticks","y","min","max","elements","line","borderWidth","point","radius","hitRadius","hoverRadius","Widget2","fill","tension","Widget3","barPercentage","drawTicks","API_URL","Dashboard","t","useTranslation","userState","useContext","UserContext","hasLoaded","setHasLoaded","useState","nasabahCount","setNasabahCount","accountOfficerCount","setAccountOfficerCount","clientsCount","setClientsCount","useEffect","axios","get","headers","authHeader","then","response","catch","reason","status","console","log","message","all","count","adminRoles","includes","Roles","user","role","xl","type","variant","lg","RestrictedComponent","allowedRoles","Loader","children","userRole","getUserRole","propTypes","PropTypes","element","request","array"],"mappings":"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","file":"static/js/27.37e3b202.chunk.js","sourcesContent":["import {\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilOptions } from '@coreui/icons'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle } from '@coreui/utils'\nimport React from 'react'\n\nfunction Widget1(props) {\n  return (\n    <CWidgetStatsA\n      className=\"mb-4\"\n      color=\"info\"\n      /* eslint-disable-next-line react/prop-types */\n      value={props.value}\n      /* eslint-disable react/prop-types */\n      title={props.title}\n      action={\n        <CDropdown alignment=\"end\">\n          <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n            <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n          </CDropdownToggle>\n          <CDropdownMenu>\n            <CDropdownItem>Action</CDropdownItem>\n            <CDropdownItem>Another action</CDropdownItem>\n            <CDropdownItem>Something else here...</CDropdownItem>\n            <CDropdownItem disabled>Disabled action</CDropdownItem>\n          </CDropdownMenu>\n        </CDropdown>\n      }\n      chart={\n        <CChartLine\n          className=\"mt-3 mx-3\"\n          style={{ height: '70px' }}\n          data={{\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            datasets: [\n              {\n                label: 'My First dataset',\n                backgroundColor: 'transparent',\n                borderColor: 'rgba(255,255,255,.55)',\n                pointBackgroundColor: getStyle('--cui-info'),\n                data: [1, 18, 9, 17, 34, 22, 11],\n              },\n            ],\n          }}\n          options={{\n            plugins: {\n              legend: {\n                display: false,\n              },\n            },\n            maintainAspectRatio: false,\n            scales: {\n              x: {\n                grid: {\n                  display: false,\n                  drawBorder: false,\n                },\n                ticks: {\n                  display: false,\n                },\n              },\n              y: {\n                min: -9,\n                max: 39,\n                display: false,\n                grid: {\n                  display: false,\n                },\n                ticks: {\n                  display: false,\n                },\n              },\n            },\n            elements: {\n              line: {\n                borderWidth: 1,\n              },\n              point: {\n                radius: 4,\n                hitRadius: 10,\n                hoverRadius: 4,\n              },\n            },\n          }}\n        />\n      }\n    />\n  )\n}\n\nexport default Widget1\n","import {\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilOptions } from '@coreui/icons'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport React from 'react'\n\nfunction Widget2(props) {\n  return (\n    <CWidgetStatsA\n      className=\"mb-4\"\n      color=\"warning\"\n      /* eslint-disable-next-line react/prop-types */\n      value={props.value}\n      /* eslint-disable react/prop-types */\n      title={props.title}\n      action={\n        <CDropdown alignment=\"end\">\n          <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n            <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n          </CDropdownToggle>\n          <CDropdownMenu>\n            <CDropdownItem>Action</CDropdownItem>\n            <CDropdownItem>Another action</CDropdownItem>\n            <CDropdownItem>Something else here...</CDropdownItem>\n            <CDropdownItem disabled>Disabled action</CDropdownItem>\n          </CDropdownMenu>\n        </CDropdown>\n      }\n      chart={\n        <CChartLine\n          className=\"mt-3\"\n          style={{ height: '70px' }}\n          data={{\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            datasets: [\n              {\n                label: 'My First dataset',\n                backgroundColor: 'rgba(255,255,255,.2)',\n                borderColor: 'rgba(255,255,255,.55)',\n                data: [78, 81, 80, 45, 34, 12, 40],\n                fill: true,\n              },\n            ],\n          }}\n          options={{\n            plugins: {\n              legend: {\n                display: false,\n              },\n            },\n            maintainAspectRatio: false,\n            scales: {\n              x: {\n                display: false,\n              },\n              y: {\n                display: false,\n              },\n            },\n            elements: {\n              line: {\n                borderWidth: 2,\n                tension: 0.4,\n              },\n              point: {\n                radius: 0,\n                hitRadius: 10,\n                hoverRadius: 4,\n              },\n            },\n          }}\n        />\n      }\n    />\n  )\n}\n\nexport default Widget2\n","import {\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilOptions } from '@coreui/icons'\nimport { CChartBar } from '@coreui/react-chartjs'\nimport React from 'react'\n\nfunction Widget3(props) {\n  return (\n    <CWidgetStatsA\n      className=\"mb-4\"\n      color=\"danger\"\n      /* eslint-disable-next-line react/prop-types */\n      value={props.value}\n      /* eslint-disable react/prop-types */\n      title={props.title}\n      action={\n        <CDropdown alignment=\"end\">\n          <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n            <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n          </CDropdownToggle>\n          <CDropdownMenu>\n            <CDropdownItem>Action</CDropdownItem>\n            <CDropdownItem>Another action</CDropdownItem>\n            <CDropdownItem>Something else here...</CDropdownItem>\n            <CDropdownItem disabled>Disabled action</CDropdownItem>\n          </CDropdownMenu>\n        </CDropdown>\n      }\n      chart={\n        <CChartBar\n          className=\"mt-3 mx-3\"\n          style={{ height: '70px' }}\n          data={{\n            labels: [\n              'January',\n              'February',\n              'March',\n              'April',\n              'May',\n              'June',\n              'July',\n              'August',\n              'September',\n              'October',\n              'November',\n              'December',\n              'January',\n              'February',\n              'March',\n              'April',\n            ],\n            datasets: [\n              {\n                label: 'My First dataset',\n                backgroundColor: 'rgba(255,255,255,.2)',\n                borderColor: 'rgba(255,255,255,.55)',\n                data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n                barPercentage: 0.6,\n              },\n            ],\n          }}\n          options={{\n            maintainAspectRatio: false,\n            plugins: {\n              legend: {\n                display: false,\n              },\n            },\n            scales: {\n              x: {\n                grid: {\n                  display: false,\n                  drawTicks: false,\n                },\n                ticks: {\n                  display: false,\n                },\n              },\n              y: {\n                grid: {\n                  display: false,\n                  drawBorder: false,\n                  drawTicks: false,\n                },\n                ticks: {\n                  display: false,\n                },\n              },\n            },\n          }}\n        />\n      }\n    />\n  )\n}\n\nexport default Widget3\n","import axios from 'axios'\nimport { authHeader } from './requestHeaders'\n\nconst API_URL = 'https://api.ekoop.id/v01'\n\nexport function getNasabahCount() {\n  return axios\n    .get(API_URL + '/auth/stat/nasabah/all', { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getAccountOfficerCount() {\n  return axios\n    .get(API_URL + '/auth/stat/account_officer/all', { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n\nexport function getClientCount() {\n  return axios\n    .get(API_URL + '/users/stat/clients/all', { headers: authHeader() })\n    .then((response) => {\n      return response.data\n    })\n    .catch((reason) => {\n      if (reason.response.status === 403) {\n        console.log(reason.message)\n        return null\n      }\n    })\n}\n","import React, { useContext, useEffect, useState } from 'react'\n\nimport { CButton, CButtonGroup, CCol, CContainer, CFormInput, CRow } from '@coreui/react'\n\nimport Widget1 from './widgets/Widget1'\nimport Widget2 from './widgets/Widget2'\nimport Widget3 from './widgets/Widget3'\nimport Loader from '../../components/Loader'\nimport { getAccountOfficerCount, getClientCount, getNasabahCount } from '../../api/api_stat'\nimport { UserContext } from '../../helpers/user'\nimport { adminRoles, Roles } from '../../helpers/role'\nimport RestrictedComponent from '../../routes/RestrictedComponent'\nimport { useTranslation } from 'react-i18next'\n\nconst Dashboard = () => {\n  const { t } = useTranslation()\n  const { userState } = useContext(UserContext)\n  const [hasLoaded, setHasLoaded] = useState()\n  const [nasabahCount, setNasabahCount] = useState(0)\n  const [accountOfficerCount, setAccountOfficerCount] = useState(0)\n  const [clientsCount, setClientsCount] = useState(0)\n\n  useEffect(() => {\n    getNasabahCount().then((data) => {\n      setNasabahCount(data.data.all.count)\n    })\n    getAccountOfficerCount().then((data) => {\n      setAccountOfficerCount(data.data.all.count)\n      setHasLoaded(true)\n    })\n    if (adminRoles().includes(Roles[userState.user.role])) {\n      getClientCount().then((data) => {\n        setClientsCount(data.data.all.count)\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return hasLoaded ? (\n    <CContainer>\n      <CRow className=\"align-items-center\">\n        <CCol xl={2}>{t('virtual_accounts')}</CCol>\n        <CCol xl={6}>\n          <CFormInput type=\"text\" />\n        </CCol>\n        <CCol>\n          <CButtonGroup role=\"group\" className=\"p-3\">\n            <CButton color=\"primary\" variant=\"outline\">\n              {t('view_transactions')}\n            </CButton>\n            <CButton color=\"primary\" variant=\"outline\">\n              {t('download_transactions')}\n            </CButton>\n          </CButtonGroup>\n        </CCol>\n      </CRow>\n      <br />\n      <hr />\n      <br />\n      <CRow>\n        <CCol lg={4}>\n          <Widget1\n            title={t('total_number') + ' ' + t('account_officer')}\n            value={accountOfficerCount}\n          />\n        </CCol>\n        <CCol lg={4}>\n          <Widget2 title={t('total_number') + ' ' + t('nasabah')} value={nasabahCount} />\n        </CCol>\n        <CCol lg={4}>\n          <RestrictedComponent allowedRoles={['app-owner', 'marketing-finance', 'credit-analyst']}>\n            <Widget3 title={t('total_number') + ' ' + t('clients')} value={clientsCount} />\n          </RestrictedComponent>\n        </CCol>\n      </CRow>\n    </CContainer>\n  ) : (\n    Loader()\n  )\n}\n\nexport default Dashboard\n","import PropTypes from 'prop-types'\nimport { getUserRole } from '../helpers/user'\n\nconst RestrictedComponent = ({ children, allowedRoles }) => {\n  const userRole = getUserRole()\n  const isAllowed = allowedRoles.includes(userRole)\n  return isAllowed && children\n}\n\nRestrictedComponent.propTypes = {\n  children: PropTypes.element,\n  request: PropTypes.array,\n}\n\nexport default RestrictedComponent\n"],"sourceRoot":""}